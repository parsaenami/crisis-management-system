[{"/home/pmoghadam/WebstormProjects/help/src/index.js":"1","/home/pmoghadam/WebstormProjects/help/src/reportWebVitals.js":"2","/home/pmoghadam/WebstormProjects/help/src/App.js":"3","/home/pmoghadam/WebstormProjects/help/src/components/Home.js":"4","/home/pmoghadam/WebstormProjects/help/src/components/common/Header.js":"5","/home/pmoghadam/WebstormProjects/help/src/components/helpers/Theme.js":"6","/home/pmoghadam/WebstormProjects/help/src/components/helpers/RTL.js":"7","/home/pmoghadam/WebstormProjects/help/src/components/helpers/HeaderScrollEffect.js":"8","/home/pmoghadam/WebstormProjects/help/src/components/common/CustomButton.js":"9","/home/pmoghadam/WebstormProjects/help/src/assets/routes.js":"10","/home/pmoghadam/WebstormProjects/help/src/components/Drawer.js":"11","/home/pmoghadam/WebstormProjects/crisis-management-system/src/index.js":"12","/home/pmoghadam/WebstormProjects/crisis-management-system/src/reportWebVitals.js":"13","/home/pmoghadam/WebstormProjects/crisis-management-system/src/App.js":"14","/home/pmoghadam/WebstormProjects/crisis-management-system/src/assets/routes.js":"15","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/Home.js":"16","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/Header.js":"17","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/CustomButton.js":"18","/home/pmoghadam/WebstormProjects/crisis-management-system/src/assets/icons/SvgHelpingHand1.js":"19","/home/pmoghadam/WebstormProjects/crisis-management-system/src/hooks/usePosition.js":"20","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/FAB.js":"21","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/About.js":"22","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/OtpInput.js":"23","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/SignUpForm.js":"24","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/Account.js":"25","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/SignInForm.js":"26","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/OtpForm.js":"27","/home/pmoghadam/WebstormProjects/crisis-management-system/src/types/userInfoType.js":"28","/home/pmoghadam/WebstormProjects/crisis-management-system/src/assets/messages.js":"29","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/NavDrawer.js":"30","/home/pmoghadam/WebstormProjects/crisis-management-system/src/helpers/Theme.js":"31","/home/pmoghadam/WebstormProjects/crisis-management-system/src/helpers/RTL.js":"32","/home/pmoghadam/WebstormProjects/crisis-management-system/src/helpers/HeaderScrollEffect.js":"33","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/Profile.js":"34","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/DataTable.js":"35","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/DataTableRow.js":"36","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/DataTableHead.js":"37","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/AddNeed.js":"38","/home/pmoghadam/WebstormProjects/crisis-management-system/src/assets/categories.js":"39","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/Card.js":"40","/home/pmoghadam/WebstormProjects/crisis-management-system/src/types/needType.js":"41","/home/pmoghadam/WebstormProjects/crisis-management-system/src/assets/icons/iconComponents/FloodIcon.js":"42","/home/pmoghadam/WebstormProjects/crisis-management-system/src/assets/icons/iconComponents/FireIcon.js":"43","/home/pmoghadam/WebstormProjects/crisis-management-system/src/assets/icons/iconComponents/EarthquakeIcon.js":"44","/home/pmoghadam/WebstormProjects/crisis-management-system/src/assets/icons/iconComponents/AvalancheIcon.js":"45","/home/pmoghadam/WebstormProjects/crisis-management-system/src/assets/icons/iconComponents/TwisterIcon.js":"46","/home/pmoghadam/WebstormProjects/crisis-management-system/src/assets/icons/iconComponents/LandslideIcon.js":"47","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/Receipt.js":"48","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/Done.js":"49","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/CardSlider.js":"50","/home/pmoghadam/WebstormProjects/crisis-management-system/src/hooks/useAlert.js":"51","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/FloatingAlert.js":"52","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/Loader.js":"53"},{"size":586,"mtime":1616398485398,"results":"54","hashOfConfig":"55"},{"size":362,"mtime":1616398485398,"results":"56","hashOfConfig":"55"},{"size":1257,"mtime":1616404252778,"results":"57","hashOfConfig":"55"},{"size":1905,"mtime":1616398485398,"results":"58","hashOfConfig":"55"},{"size":1530,"mtime":1616405159633,"results":"59","hashOfConfig":"55"},{"size":769,"mtime":1616404268601,"results":"60","hashOfConfig":"55"},{"size":592,"mtime":1616398485398,"results":"61","hashOfConfig":"55"},{"size":571,"mtime":1616398485398,"results":"62","hashOfConfig":"55"},{"size":511,"mtime":1616398485398,"results":"63","hashOfConfig":"55"},{"size":61,"mtime":1616404207087,"results":"64","hashOfConfig":"55"},{"size":1775,"mtime":1616405222756,"results":"65","hashOfConfig":"55"},{"size":586,"mtime":1616427207741,"results":"66","hashOfConfig":"67"},{"size":362,"mtime":1616427207741,"results":"68","hashOfConfig":"67"},{"size":1851,"mtime":1616870244184,"results":"69","hashOfConfig":"67"},{"size":235,"mtime":1616740419834,"results":"70","hashOfConfig":"67"},{"size":3380,"mtime":1616708074889,"results":"71","hashOfConfig":"67"},{"size":3781,"mtime":1616768645897,"results":"72","hashOfConfig":"67"},{"size":415,"mtime":1616792806629,"results":"73","hashOfConfig":"67"},{"size":3677,"mtime":1616432220315,"results":"74","hashOfConfig":"67"},{"size":1049,"mtime":1616791930679,"results":"75","hashOfConfig":"67"},{"size":627,"mtime":1616777241886,"results":"76","hashOfConfig":"67"},{"size":1769,"mtime":1616777241870,"results":"77","hashOfConfig":"67"},{"size":1725,"mtime":1616773261498,"results":"78","hashOfConfig":"67"},{"size":3706,"mtime":1616777241862,"results":"79","hashOfConfig":"67"},{"size":9375,"mtime":1616796691646,"results":"80","hashOfConfig":"67"},{"size":2128,"mtime":1616777241894,"results":"81","hashOfConfig":"67"},{"size":1112,"mtime":1616539671481,"results":"82","hashOfConfig":"67"},{"size":409,"mtime":1616658742611,"results":"83","hashOfConfig":"67"},{"size":1093,"mtime":1616792980736,"results":"84","hashOfConfig":"67"},{"size":2814,"mtime":1616782030243,"results":"85","hashOfConfig":"67"},{"size":980,"mtime":1616768964846,"results":"86","hashOfConfig":"67"},{"size":592,"mtime":1616427207741,"results":"87","hashOfConfig":"67"},{"size":524,"mtime":1616444764716,"results":"88","hashOfConfig":"67"},{"size":4716,"mtime":1616791154818,"results":"89","hashOfConfig":"67"},{"size":9655,"mtime":1616603061566,"results":"90","hashOfConfig":"67"},{"size":4980,"mtime":1616777241846,"results":"91","hashOfConfig":"67"},{"size":2000,"mtime":1616595766388,"results":"92","hashOfConfig":"67"},{"size":19842,"mtime":1616869267628,"results":"93","hashOfConfig":"67"},{"size":3005,"mtime":1616767823864,"results":"94","hashOfConfig":"67"},{"size":1769,"mtime":1616777241902,"results":"95","hashOfConfig":"67"},{"size":216,"mtime":1616750248027,"results":"96","hashOfConfig":"67"},{"size":4104,"mtime":1616674128194,"results":"97","hashOfConfig":"67"},{"size":3386,"mtime":1616674143678,"results":"98","hashOfConfig":"67"},{"size":3117,"mtime":1616674220339,"results":"99","hashOfConfig":"67"},{"size":4511,"mtime":1616708153840,"results":"100","hashOfConfig":"67"},{"size":3059,"mtime":1616674315844,"results":"101","hashOfConfig":"67"},{"size":3472,"mtime":1616708153824,"results":"102","hashOfConfig":"67"},{"size":6006,"mtime":1616777241878,"results":"103","hashOfConfig":"67"},{"size":2674,"mtime":1616865841882,"results":"104","hashOfConfig":"67"},{"size":472,"mtime":1616708074869,"results":"105","hashOfConfig":"67"},{"size":748,"mtime":1616796555773,"results":"106","hashOfConfig":"67"},{"size":1217,"mtime":1616794714946,"results":"107","hashOfConfig":"67"},{"size":469,"mtime":1616868965175,"results":"108","hashOfConfig":"67"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},"mcjzsk",{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"111"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},"1hsr5lm",{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"135"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"135"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"135"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"135"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"135"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"135"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"135"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/pmoghadam/WebstormProjects/help/src/index.js",[],["226","227"],"/home/pmoghadam/WebstormProjects/help/src/reportWebVitals.js",[],"/home/pmoghadam/WebstormProjects/help/src/App.js",["228","229","230"],"/home/pmoghadam/WebstormProjects/help/src/components/Home.js",["231","232","233"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Typography } from \"@material-ui/core\";\nimport HealingIcon from '@material-ui/icons/Healing';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Hands from '../assets/icons/helping-hand.svg';\nimport { CustomButton } from \"./common/CustomButton\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100%\",\n  },\n  icon: {\n    fontSize: theme.spacing(8),\n    margin: theme.spacing(2, 0),\n    color: theme.palette.text.secondary,\n  },\n  title: {\n    textAlign: \"center\",\n    fontSize: theme.spacing(5),\n    fontWeight: \"bold\",\n    color: theme.palette.text.secondary,\n  },\n  image: {\n    width: theme.spacing(25),\n    height: theme.spacing(25),\n    margin: theme.spacing(1, 0),\n  },\n  hr: {\n    color: theme.palette.text.secondary,\n  },\n  text: {\n    color: theme.palette.text.secondary,\n    fontSize: theme.spacing(2.5),\n    textAlign: \"center\",\n    textAlignLast: \"center\",\n    margin: theme.spacing(6, 0),\n  },\n  btn: {\n    width: \"100%\",\n    margin: theme.spacing(2, 0),\n  }\n}));\n\nconst Home = props => {\n  const classes = useStyles();\n\n  return (\n      <>\n        <HealingIcon className={classes.icon}/>\n        <Typography variant=\"h4\" className={classes.title}>\n          سامانه‌ی ثبت نیازمندی‌ها\n        </Typography>\n        {/*<hr className={classes.hr}/>*/}\n        {/*<img className={classes.image} src={Hands} alt=\"hands\"/>*/}\n        <Typography variant=\"span\" className={classes.text}>\n          در این سامانه شما می‌توانید در زمان وقوع بحران نیازهای خود را وارد کنید تا در اسرع وقت، برطرف شود.\n        </Typography>\n        <CustomButton className={classes.btn} variant={\"contained\"}>شروع ثبت نیاز</CustomButton>\n      </>\n  );\n};\n\nHome.propTypes = {};\n\nexport default Home;","/home/pmoghadam/WebstormProjects/help/src/components/common/Header.js",["234","235","236","237","238","239"],"/home/pmoghadam/WebstormProjects/help/src/components/helpers/Theme.js",[],"/home/pmoghadam/WebstormProjects/help/src/components/helpers/RTL.js",[],"/home/pmoghadam/WebstormProjects/help/src/components/helpers/HeaderScrollEffect.js",[],"/home/pmoghadam/WebstormProjects/help/src/components/common/CustomButton.js",[],"/home/pmoghadam/WebstormProjects/help/src/assets/routes.js",[],"/home/pmoghadam/WebstormProjects/help/src/components/Drawer.js",["240"],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/index.js",[],["241","242"],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/reportWebVitals.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/App.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/assets/routes.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/Home.js",["243","244","245"],"import React, { useEffect } from 'react';\nimport { Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { CustomButton } from \"./common/CustomButton\";\nimport Hands from \"../assets/icons/helping-hand2.svg\"\nimport { NavLink } from \"react-router-dom\";\nimport { routes } from \"../assets/routes\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    // background: '#91DDEC',\n  },\n  content: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    [theme.breakpoints.up('md')]: {\n      // justifyContent: \"flex-start\",\n      alignItems: \"flex-start\",\n      flexBasis: \"50%\",\n    }\n    // background: '#91DDEC',\n  },\n  icon: {\n    fontSize: theme.spacing(8),\n    margin: theme.spacing(2, 0),\n    color: theme.palette.text.secondary,\n  },\n  title: {\n    textAlign: \"center\",\n    fontSize: theme.spacing(5),\n    fontWeight: \"bold\",\n    color: theme.palette.text.secondary,\n  },\n  image: {\n    width: theme.spacing(32),\n    height: theme.spacing(32),\n    margin: theme.spacing(1, 0),\n    // filter: \"contrast(0.8)\",\n    flexBasis: \"40%\",\n    [theme.breakpoints.down('sm')]: {\n      display: \"none\",\n    },\n    '&#small': {\n      width: theme.spacing(8),\n      maxHeight: theme.spacing(8),\n      display: \"block\",\n      [theme.breakpoints.up('md')]: {\n        display: \"none\",\n      },\n    }\n  },\n  hr: {\n    color: theme.palette.text.secondary,\n  },\n  text: {\n    color: theme.palette.text.secondary,\n    fontSize: theme.spacing(2.5),\n    textAlign: \"center\",\n    textAlignLast: \"center\",\n    margin: theme.spacing(6, 0),\n    [theme.breakpoints.up('md')]: {\n      textAlign: \"right\",\n      textAlignLast: \"right\",\n    },\n  },\n  btnContainer: {\n    width: \"100%\",\n    margin: theme.spacing(2, 0),\n  },\n  btn: {\n    width: \"100%\",\n  },\n}));\n\nconst Home = () => {\n  const classes = useStyles();\n\n  useEffect(() => {\n    document.getElementsByTagName(\"body\")[0].style.backgroundColor = '#91DDEC';\n    document.getElementsByTagName(\"header\")[0].style.backgroundColor = '#91DDEC';\n    return () => {\n      document.getElementsByTagName(\"body\")[0].style.backgroundColor = '#F5F2EB';\n      document.getElementsByTagName(\"header\")[0].style.backgroundColor = '#FDFFFA';\n    }\n  }, []);\n\n  return (\n      <div className={classes.root}>\n        <div className={classes.content}>\n          <img className={classes.image} id={'small'} src={Hands} alt=\"hands\"/>\n          <Typography variant=\"h4\" className={classes.title}>\n            سامانه‌ی ثبت نیازمندی‌ها\n          </Typography>\n          <Typography component=\"span\" className={classes.text}>\n            در این سامانه شما می‌توانید در زمان وقوع بحران نیازهای خود را وارد کنید تا در اسرع وقت، برطرف شود.\n          </Typography>\n          <NavLink to={routes.ADD_NEED} className={classes.btnContainer}>\n            <CustomButton className={classes.btn} variant={\"contained\"} size={\"large\"}>ثبت نیاز</CustomButton>\n          </NavLink>\n        </div>\n        <img className={classes.image} src={Hands} alt=\"hands\"/>\n      </div>\n  );\n};\n\nHome.propTypes = {};\n\nexport default Home;","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/Header.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/CustomButton.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/assets/icons/SvgHelpingHand1.js",[],["246","247"],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/hooks/usePosition.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/FAB.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/About.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/OtpInput.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/SignUpForm.js",["248","249","250","251"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TextField, Typography } from \"@material-ui/core\";\nimport { CustomButton } from \"./common/CustomButton\";\n\nconst SignUpForm = props => {\n  return (\n      <>\n        <Typography gutterBottom color={\"textSecondary\"}>\n          برای ثبت‌نام، اطلاعات زیر را وارد نمایید.\n        </Typography>\n        <TextField\n            variant={\"filled\"}\n            id={'firstName'}\n            name={'firstName'}\n            value={props.userInfo.firstName}\n            label={\"نام\"}\n            onChange={props.onUserInfoChangeFn}\n            error={!!props.errors.firstName}\n            helperText={props.errors.firstName}\n        />\n        <TextField\n            variant={\"filled\"}\n            id={'lastName'}\n            name={'lastName'}\n            value={props.userInfo.lastName}\n            label={\"نام خانوادگی\"}\n            onChange={props.onUserInfoChangeFn}\n            error={!!props.errors.lastName}\n            helperText={props.errors.lastName}\n        />\n        <TextField\n            variant={\"filled\"}\n            id={'phoneNumber'}\n            name={'phoneNumber'}\n            value={props.userInfo.phoneNumber}\n            type=\"number\"\n            label={\"شماره‌ی تماس\"}\n            placeholder=\"برای مثال: ۰۹۱۲۳۴۵۶۷۸۹\"\n            onChange={props.onUserInfoChangeFn}\n            error={!!props.errors.phoneNumber}\n            helperText={props.errors.phoneNumber}\n        />\n        <TextField\n            variant={\"filled\"}\n            id={'nationalId'}\n            name={'nationalId'}\n            value={props.userInfo.nationalId}\n            type=\"number\"\n            label={\"کد ملی\"}\n            onChange={props.onUserInfoChangeFn}\n            error={!!props.errors.nationalId}\n            helperText={props.errors.nationalId}\n        />\n        <TextField\n            variant={\"filled\"}\n            id={'address'}\n            name={'address'}\n            value={props.userInfo.address}\n            multiline\n            label={\"آدرس\"}\n            onChange={props.onUserInfoChangeFn}\n            error={!!props.errors.address}\n            helperText={props.errors.address}\n        />\n        {/*<FormControlLabel*/}\n        {/*    control={*/}\n        {/*      <Checkbox*/}\n        {/*          edge={\"start\"}*/}\n        {/*          checked={props.userInfo.location.allow}*/}\n        {/*          onChange={props.getLocation}*/}\n        {/*          name=\"location\"*/}\n        {/*          color=\"primary\"*/}\n        {/*      />*/}\n        {/*    }*/}\n        {/*    label=\"استفاده از لوکیشن برای آدرس\"*/}\n        {/*/>*/}\n        {!props.isMobileDisplay && <CustomButton variant={\"contained\"} size={\"large\"} onClick={props.submit}>\n          ثبت‌نامم کن</CustomButton>}\n      </>\n  );\n};\n\nSignUpForm.propTypes = {\n  isMobileDisplay: PropTypes.bool,\n  submit: PropTypes.func,\n  userInfo: PropTypes.shape({\n    firstName: PropTypes.string,\n    lastName: PropTypes.string,\n    phoneNumber: PropTypes.string,\n    nationalId: PropTypes.string,\n    address: PropTypes.string,\n    location: {\n      allow: PropTypes.bool,\n      lat: PropTypes.string,\n      long: PropTypes.string,\n    },\n  }),\n  errors: PropTypes.shape({\n    firstName: PropTypes.string,\n    lastName: PropTypes.string,\n    phoneNumber: PropTypes.string,\n    nationalId: PropTypes.string,\n    address: PropTypes.string,\n    location: {\n      allow: PropTypes.bool,\n      lat: PropTypes.string,\n      long: PropTypes.string,\n    },\n  }),\n  onUserInfoChangeFn: PropTypes.func,\n  getLocation: PropTypes.func,\n};\n\nexport default SignUpForm;","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/Account.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/SignInForm.js",["252"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormControlLabel, InputLabel, Switch, TextField, Typography } from \"@material-ui/core\";\nimport { CustomButton } from \"./common/CustomButton\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyle = makeStyles((theme) => ({\n  switch: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    '& label:first-child': {\n      padding: theme.spacing(1.5),\n      color: theme.palette.primary.main,\n    },\n  },\n}));\n\nconst SignInForm = props => {\n  const classes = useStyle();\n\n  return (\n      <>\n        <Typography gutterBottom color={\"textSecondary\"}>\n          با استفاده از شماره‌ی تماس و یا کد ملی خود، وارد حساب کاربری خود شوید.\n        </Typography>\n        <div className={classes.switch}>\n          <InputLabel color={\"primary\"} htmlFor={\"signin-switch\"}>شماره‌ی تماس</InputLabel>\n          <FormControlLabel\n              label=\"کد ملی\"\n              control={\n                <Switch\n                    id=\"signin-switch\"\n                    color={\"primary\"}\n                    value={props.type}\n                    onChange={props.setType}\n                    checked={props.type}\n                />\n              }\n          />\n        </div>\n\n        <TextField\n            variant={\"filled\"}\n            type=\"number\"\n            label={props.type ? 'کد ملی' : 'شماره‌ی تماس'}\n            value={props.userNumber}\n            onChange={props.onUserNumberChangeFn}\n            error={!!props.error}\n            helperText={props.error}\n        />\n        {!props.isMobileDisplay &&\n        <CustomButton variant={\"contained\"} size={\"large\"} onClick={props.submit}>ورود به حساب\n          کاربری</CustomButton>}\n      </>\n  );\n};\n\nSignInForm.propTypes = {\n  isMobileDisplay: PropTypes.bool,\n  submit: PropTypes.func,\n  type: PropTypes.bool,\n  setType: PropTypes.func,\n  userNumber: PropTypes.string,\n  onUserNumberChangeFn: PropTypes.func,\n  error: PropTypes.string,\n};\n\nexport default SignInForm;","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/OtpForm.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/types/userInfoType.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/assets/messages.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/NavDrawer.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/helpers/Theme.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/helpers/RTL.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/helpers/HeaderScrollEffect.js",["253"],"import { Slide, useScrollTrigger } from \"@material-ui/core\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const HeaderScrollEffect = props => {\n  const {children, window} = props;\n  const trigger = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 0,\n    target: window ? window() : undefined,\n  });\n\n  return React.cloneElement(children, {\n    elevation: trigger ? 4 : 0,\n  });\n}\n\nHeaderScrollEffect.propTypes = {\n  children: PropTypes.element.isRequired,\n  window: PropTypes.func,\n};","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/Profile.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/DataTable.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/DataTableRow.js",["254"],"import { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport HelpOutlineRoundedIcon from '@material-ui/icons/HelpOutlineRounded';\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport PropTypes from \"prop-types\";\nimport { ClickAwayListener, Tooltip, Zoom } from \"@material-ui/core\";\n\nconst useRowStyles = makeStyles(theme => ({\n  root: {\n    borderBottom: 'unset',\n  },\n  desc: {\n    whiteSpace: \"nowrap\",\n    maxWidth: theme.spacing(5),\n    textOverflow: \"ellipsis\",\n    overflow: \"hidden\"\n  },\n  tooltip: {\n    '& + div': {\n      '& > div': {\n        backgroundColor: theme.palette.primary.main,\n        color: theme.palette.secondary.light,\n        fontSize: theme.spacing(2),\n        lineHeight: theme.spacing(0.2),\n      },\n    },\n  },\n}));\n\nconst DataTableRow = props => {\n  const {row} = props;\n  const [open, setOpen] = React.useState(false);\n  const classes = useRowStyles();\n  const [openTooltip, setOpenTooltip] = React.useState(false);\n\n  const handleTooltipClose = () => {\n    setOpenTooltip(false);\n  };\n\n  const handleTooltipOpen = () => {\n    setOpenTooltip(true);\n  };\n\n  return (\n      <React.Fragment>\n        <TableRow>\n          <TableCell>\n            <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\n              {open ? <KeyboardArrowUpIcon/> : <KeyboardArrowDownIcon/>}\n            </IconButton>\n          </TableCell>\n          <TableCell align=\"right\" component=\"th\" scope=\"row\">\n            {row.name}\n          </TableCell>\n          <TableCell align=\"right\">{row.amount}</TableCell>\n          <TableCell align=\"right\">{row.urgent}</TableCell>\n          <TableCell align=\"right\">{row.askDate}</TableCell>\n          <TableCell align=\"right\">{row.helpDate}</TableCell>\n          <TableCell align=\"right\">{row.status}</TableCell>\n          <TableCell align=\"right\">{row.type}</TableCell>\n          <ClickAwayListener onClickAway={handleTooltipClose}>\n            <Tooltip\n                PopperProps={{disablePortal: true}}\n                disableFocusListener\n                disableHoverListener\n                disableTouchListener\n                open={openTooltip}\n                onClose={handleTooltipClose}\n                title={row.desc}\n                placement=\"right\"\n                className={classes.tooltip}\n            >\n              <TableCell className={classes.desc} onClick={handleTooltipOpen} align=\"right\">\n                <HelpOutlineRoundedIcon/>\n              </TableCell>\n            </Tooltip>\n          </ClickAwayListener>\n        </TableRow>\n        <TableRow>\n          <TableCell className={classes.root} style={{paddingBottom: 0, paddingTop: 0}} colSpan={6}>\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\n              <Box margin={1}>\n                <Typography variant=\"h6\" gutterBottom component=\"div\">\n                  اطلاعات ارسال\n                </Typography>\n                <Table size=\"small\" aria-label=\"purchases\">\n                  <TableHead>\n                    <TableRow>\n                      <TableCell align={\"right\"}>آدرس</TableCell>\n                      <TableCell align={\"right\"}>موقعیت مکانی</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    <TableRow className={classes.root}>\n                      <TableCell align=\"right\" component=\"th\" scope=\"row\">\n                        {row.info.address}\n                      </TableCell>\n                      <TableCell align=\"right\">[{row.info.location.lat}, {row.info.location.long}]</TableCell>\n                    </TableRow>\n                  </TableBody>\n                </Table>\n              </Box>\n            </Collapse>\n          </TableCell>\n        </TableRow>\n      </React.Fragment>\n  );\n};\n\nDataTableRow.propTypes = {\n  row: PropTypes.shape({\n    info: PropTypes.shape({\n      address: PropTypes.string.isRequired,\n      location: PropTypes.shape({\n        lat: PropTypes.string,\n        long: PropTypes.string,\n      }),\n    }).isRequired,\n    name: PropTypes.string.isRequired,\n    amount: PropTypes.number.isRequired,\n    urgent: PropTypes.number.isRequired,\n    askDate: PropTypes.string.isRequired,\n    helpDate: PropTypes.string.isRequired,\n    type: PropTypes.string,\n    status: PropTypes.string.isRequired,\n    desc: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default DataTableRow;","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/DataTableHead.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/AddNeed.js",["255"],"import React, { useEffect, useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Button,\n  Chip,\n  Collapse,\n  IconButton,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  ListSubheader,\n  MuiThemeProvider,\n  Slider,\n  TextField,\n  Typography,\n  useMediaQuery,\n  useTheme\n} from \"@material-ui/core\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport classnames from \"classnames\";\nimport RTL from \"../helpers/RTL\";\nimport Theme from \"../helpers/Theme\";\nimport { disasterCategories, needCategories } from \"../assets/categories\";\nimport Card from \"./common/Card\";\nimport CardSlider from \"./common/CardSlider\";\nimport { ExpandLess, ExpandMore } from \"@material-ui/icons\";\nimport type { NeedType } from \"../types/needType\";\nimport { emptyNeed } from \"../types/needType\";\nimport FireIcon from \"../assets/icons/iconComponents/FireIcon\";\nimport Fab from \"./common/FAB\";\nimport EarthquakeIcon from \"../assets/icons/iconComponents/EarthquakeIcon\";\nimport FloodIcon from \"../assets/icons/iconComponents/FloodIcon\";\nimport TwisterIcon from \"../assets/icons/iconComponents/TwisterIcon\";\nimport LandslideIcon from \"../assets/icons/iconComponents/LandslideIcon\";\nimport AvalancheIcon from \"../assets/icons/iconComponents/AvalancheIcon\";\nimport EditRoundedIcon from \"@material-ui/icons/EditRounded\";\nimport ErrorRoundedIcon from '@material-ui/icons/ErrorRounded';\nimport { CustomButton } from \"./common/CustomButton\";\nimport Receipt from \"./common/Receipt\";\nimport { routes } from \"../assets/routes\";\nimport FloatingAlert from \"./common/FloatingAlert\";\nimport { useAlert } from \"../hooks/useAlert\";\nimport { messages } from \"../assets/messages\";\nimport Loader from \"./common/Loader\";\n\nconst emptyOpenList = {\n  menu: false,\n  food: false,\n  medical: false,\n  life: false,\n  cloth: false,\n  health: false,\n  warming: false\n};\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    width: '100%',\n    paddingBottom: theme.spacing(9),\n  },\n  title: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    width: \"100%\",\n  },\n  accordion: {\n    direction: \"rtl\",\n    width: \"100%\",\n    backgroundColor: theme.palette.secondary.light,\n    '& .details': {\n      display: \"flex\",\n      flexDirection: \"column\",\n      '& > *:not(.deleteBtn)': {\n        position: \"relative\",\n        '&:before': {\n          content: '\"\"',\n          position: \"absolute\",\n          top: 0,\n          right: theme.spacing(-2),\n          borderStyle: \"solid\",\n          borderColor: theme.palette.primary.main,\n          borderWidth: theme.spacing(1.5, .5),\n        },\n      },\n    },\n    '& > .header': {\n      '& > div:first-child': {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n      },\n      '&.error': {\n        backgroundColor: theme.palette.error.light,\n        '& > *': {\n          color: theme.palette.error.main,\n        },\n      },\n    },\n  },\n  list: {\n    borderRadius: theme.spacing(.7, .7, .5, .5),\n    border: \"1px solid\",\n    position: \"relative\",\n    '&.error': {\n      borderColor: theme.palette.error.main,\n    },\n    '& > .header': {\n      backgroundColor: theme.palette.secondary.dark,\n      borderRadius: theme.spacing(.5, .5, 0, 0),\n      borderBottom: \"2px solid\",\n      // backgroundColor: theme.palette.primary.main,\n      color: theme.palette.primary.main,\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n      '&.error': {\n        color: theme.palette.error.main,\n      },\n    },\n  },\n  listItem: {\n    borderBottom: \"1px solid #D0D0D0\",\n    '&  *': {\n      fontSize: theme.spacing(1.75),\n    },\n  },\n  needPart: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    '&:not(:first-child)': {\n      marginTop: theme.spacing(3),\n    },\n    '& > p': {\n      marginBottom: theme.spacing(2),\n    },\n    '& > span': {\n      alignSelf: \"center\",\n      width: \"60%\",\n      fontSize: theme.spacing(1.5),\n    },\n    '&.deleteBtn': {\n      alignSelf: \"flex-end\",\n    },\n    '&.suggest': {\n      padding: theme.spacing(1),\n      backgroundColor: theme.palette.background.box,\n      borderRadius: theme.spacing(.5),\n    },\n  },\n  headerAmount: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginBottom: theme.spacing(2),\n    '& > span': {\n      marginRight: \"auto\",\n      marginLeft: theme.spacing(1),\n    },\n    '& > .needAmount': {\n      width: theme.spacing(12),\n      textAlignLast: \"center\",\n      '& input': {\n        direction: \"ltr\",\n        padding: theme.spacing(.25, 0),\n      },\n    },\n  },\n  hideBorders: {\n    position: \"absolute\",\n    top: -2,\n    right: -1,\n    left: -1,\n    height: theme.spacing(6.25),\n    // backgroundColor: \"#f59e39\",\n    borderRadius: theme.spacing(.5, .5, 0, 0),\n    backgroundColor: theme.palette.secondary.dark,\n  },\n  selectedNeed: {\n    backgroundColor: theme.palette.secondary.dark,\n    borderBottom: \"2px solid\",\n    borderRadius: theme.spacing(.5, .5, 0, 0),\n    padding: theme.spacing(0, 2),\n    // backgroundColor: theme.palette.primary.main,\n    color: theme.palette.primary.main,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    position: \"relative\",\n    '& > .label': {\n      fontSize: theme.spacing(1.25),\n      position: \"absolute\",\n    },\n  },\n  suggestionCard: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-start\",\n    flexDirection: \"column\",\n    height: \"100%\",\n  },\n  media: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    '&.receiptOnly': {\n      justifyContent: \"center\",\n      '& $receipt': {\n        flex: \"unset\",\n      },\n    },\n  },\n  form: {\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      flex: \"0 0 65%\"\n    },\n  },\n  receipt: {\n    flex: \"0 0 28%\",\n    position: \"sticky\",\n    top: theme.spacing(10),\n    alignSelf: \"flex-start\",\n    [theme.breakpoints.down('sm')]: {\n      // display: \"none\",\n    },\n  },\n  desktopBtn: {\n    display: \"flex\",\n    '& > *': {\n      flex: 1,\n      margin: theme.spacing(2, 1),\n      '&:first-child': {\n        marginRight: theme.spacing(0),\n      },\n      '&:last-child': {\n        marginLeft: theme.spacing(0),\n      },\n    },\n    [theme.breakpoints.down('sm')]: {\n      display: \"none\",\n    },\n  },\n}));\n\nconst disasterIcons = {\n  earthquake: EarthquakeIcon,\n  flood: FloodIcon,\n  fire: FireIcon,\n  twister: TwisterIcon,\n  landslide: LandslideIcon,\n  avalanche: AvalancheIcon,\n}\n\nconst AddNeed = () => {\n  const classes = useStyles()\n  const theme = useTheme()\n  const history = useHistory()\n  const isMobileDisplay = useMediaQuery(theme.breakpoints.down('sm'))\n  const [loading, setLoading] = useState(true)\n  const [expanded, setExpanded] = React.useState('panel0')\n  const [openList, setOpenList] = useState(emptyOpenList)\n  const [need: NeedType[], setNeed] = useState([emptyNeed])\n  const [needError: NeedType[], setNeedError] = useState([emptyNeed])\n  const [disaster, setDisaster] = useState(false)\n  const [showReceipt, setShowReceipt] = useState(false)\n  const {open, message, type, duration, closeAlert, showAlert} = useAlert()\n\n  useEffect(() => {\n    setTimeout(() => setLoading(false), 3000)\n  }, [])\n\n  const handleOpenList = (e, name) => {\n    setOpenList({\n      ...openList,\n      [name]: !openList[name],\n    })\n  };\n\n  const handleExpand = panel => (event, newExpanded) => {\n    setExpanded(newExpanded ? panel : false);\n  };\n\n  const handleDisaster = dis => () => {\n    setDisaster(disaster === dis ? false : dis);\n  };\n\n  const handleShowReceipt = () => {\n    if (checkError()) {\n      showAlert(messages.ERR_EMPTY_NEED, \"error\")\n      return\n    }\n    setShowReceipt(!showReceipt)\n  }\n\n  const addRequest = () => {\n    setNeed([...need, emptyNeed])\n    setNeedError([...needError, emptyNeed])\n    setExpanded('panel' + need.length)\n  }\n\n  const deleteRequest = index => () => {\n    setNeed([\n      ...need.slice(0, index),\n      ...need.slice(index + 1),\n    ])\n    setNeedError([\n      ...needError.slice(0, index),\n      ...needError.slice(index + 1),\n    ])\n    setExpanded(expanded && expanded.slice(5) !== \"0\" ? 'panel' + (parseInt(expanded.slice(5)) - 1) : false)\n  }\n\n  const selectNeed = (index, i, j) => () => {\n    setNeed([\n      ...need.slice(0, index),\n      {...need[index], category: i, title: j},\n      ...need.slice(index + 1),\n    ])\n    setNeedError([\n      ...needError.slice(0, index),\n      emptyNeed,\n      ...needError.slice(index + 1),\n    ])\n    setOpenList(emptyOpenList)\n  }\n\n  const setNeedInfo = index => e => {\n    setNeed([\n      ...need.slice(0, index),\n      {...need[index], [e.target.name]: e.target.value},\n      ...need.slice(index + 1),\n    ])\n    setNeedError([\n      ...needError.slice(0, index),\n      emptyNeed,\n      ...needError.slice(index + 1),\n    ])\n  }\n\n  const handleSliderChange = index => (event, newValue) => {\n    setNeed([\n      ...need.slice(0, index),\n      {...need[index], urgent: newValue},\n      ...need.slice(index + 1),\n    ])\n  }\n\n  const checkError = () => {\n    let errorState = []\n    let hasError = false\n\n    for (const n of need) {\n      hasError = hasError || n.amount === \"\" || n.title === \"\"\n      errorState.push({\n        ...(emptyNeed),\n        amount: n.amount === \"\",\n        title: n.title === \"\",\n      })\n    }\n\n    setNeedError(errorState)\n    return hasError\n  }\n\n  const submitNeed = () => {\n    showAlert(messages.INFO_NEED_ADDED, \"success\", 3000, () => () => history.push(routes.DONE))\n    // history.push(routes.DONE)\n  }\n\n  const needItemForm = index => {\n    const marks = [\n      {\n        value: 1,\n        label: 'خیلی کم',\n      },\n      {\n        value: 2,\n        label: 'کم',\n      },\n      {\n        value: 3,\n        label: 'متوسط',\n      },\n      {\n        value: 4,\n        label: 'زیاد',\n      },\n      {\n        value: 5,\n        label: 'خیلی زیاد',\n      },\n    ];\n\n    return (\n        <Accordion className={classes.accordion} expanded={expanded === `panel${index}`}\n                   onChange={handleExpand(`panel${index}`)} key={index}>\n          <AccordionSummary\n              expandIcon={<ExpandMoreIcon/>}\n              className={classnames('header', {\"error\": needError[index].amount || needError[index].title})}\n          >\n            <Typography>{need.length > 1 ? `جزئیات درخواست ${index + 1}` : `جزئیات درخواست`}</Typography>\n            {(needError[index].amount || needError[index].title) && <ErrorRoundedIcon/>}\n          </AccordionSummary>\n          <AccordionDetails className={\"details\"}>\n            {index !== 0 && <div className={classnames(classes.needPart, \"suggest\")}>\n              <Typography>شاید به این موارد هم نیاز داشته باشید:</Typography>\n              <CardSlider>\n                {[[0, 12], [5, 2], [0, 3], [3, 8], [2, 12]].map((x, k) => (\n                    <Card\n                        k={k}\n                        onClick={selectNeed(index, ...x)}\n                        selected={x[0] === need[index].category && x[1] === need[index].title}\n                    >\n                      <div className={classes.suggestionCard}>\n                        <Chip\n                            label={needCategories[x[0].toString()].faName}\n                            color={x[0] === need[index].category && x[1] === need[index].title ? \"secondary\" : \"primary\"}\n                            size={\"small\"}\n                            style={{fontSize: 10}}\n                        />\n                        <div className={\"text-center\"}>{needCategories[x[0].toString()].items[x[1]]}</div>\n                      </div>\n                    </Card>\n                ))}\n              </CardSlider>\n            </div>}\n            <div className={classes.needPart}>\n              <div className={classes.headerAmount}>\n                <Typography>چه نیازی دارید؟</Typography>\n                <span>تعداد:</span>\n                <TextField\n                    placeholder={'?'}\n                    type={\"number\"}\n                    variant={\"outlined\"}\n                    size={\"small\"}\n                    name={'amount'}\n                    className={\"needAmount\"}\n                    value={need[index].amount ? need[index].amount : ''}\n                    onChange={setNeedInfo(index)}\n                    error={!!needError[index].amount}\n                />\n              </div>\n              {need[index].category === '' || need[index].title === '' ? (\n                  <List\n                      disablePadding\n                      className={classnames(classes.list, {\"error\": needError[index].amount || needError[index].title})}\n                      subheader={\n                        <ListSubheader\n                            className={classnames('header', {\"error\": needError[index].amount || needError[index].title})}\n                            component=\"div\"\n                            id=\"nested-list-subheader\"\n                            onClick={e => handleOpenList(e, 'menu')}\n                        >\n                          <span>دسته‌بندی نیازمندی‌ها</span>\n                          <div>\n                            {/*<IconButton color={\"inherit\"} className={\"d-none\"}>*/}\n                            {/*  <SearchRoundedIcon onClick={e => {*/}\n                            {/*    e.stopPropagation();*/}\n                            {/*    console.log(e)*/}\n                            {/*  }}/>*/}\n                            {/*</IconButton>*/}\n                            <IconButton edge={\"end\"} color={\"inherit\"}>\n                              {openList.menu ? <ExpandLess/> : <ExpandMore/>}\n                            </IconButton>\n                          </div>\n                        </ListSubheader>\n                      }\n                  >\n                    <div className={classes.hideBorders}/>\n                    <Collapse in={openList.menu} timeout=\"auto\" unmountOnExit>\n                      {Object.values(needCategories).map((need, i) => (\n                          <div key={need.enName}>\n                            <ListItem button onClick={e => handleOpenList(e, need.enName)}>\n                              <ListItemText primary={need.faName}/>\n                              {openList[need.enName] ? <ExpandLess/> : <ExpandMore/>}\n                            </ListItem>\n                            <Collapse in={openList[need.enName]} timeout=\"auto\" unmountOnExit>\n                              <List component=\"div\" disablePadding>\n                                {need.items.map((item, j) => (\n                                    <ListItem className={classes.listItem} key={j} button\n                                              onClick={selectNeed(index, i, j)}>\n                                      <ListItemIcon style={{minWidth: Theme.spacing(4)}}>\n                                        <span>{j + 1}</span>\n                                      </ListItemIcon>\n                                      <ListItemText primary={item}/>\n                                    </ListItem>\n                                ))}\n                              </List>\n                            </Collapse>\n                          </div>\n                      ))}\n                    </Collapse>\n                  </List>\n              ) : (\n                  <div className={classes.selectedNeed}>\n                    <Chip color={\"primary\"} label={needCategories[need[index].category.toString()].faName}/>\n                    <span>{needCategories[need[index].category.toString()].items[need[index].title]}</span>\n                    <IconButton edge={\"end\"} color={\"inherit\"} onClick={selectNeed(index, '', '')}>\n                      <EditRoundedIcon/>\n                    </IconButton>\n                  </div>\n              )}\n            </div>\n            <div className={classes.needPart}>\n              <Typography>نیازتان چقدر ضروری است؟</Typography>\n              <Slider\n                  min={1}\n                  max={5}\n                  step={1}\n                  marks={marks}\n                  defaultValue={1}\n                  name={'urgent'}\n                  value={need[index].urgent}\n                  onChange={handleSliderChange(index)}\n              />\n            </div>\n            <div className={classes.needPart}>\n              <Typography>آیا توضیح خاصی لازم است؟ (اختیاری)</Typography>\n              <TextField\n                  multiline\n                  variant={\"filled\"}\n                  label={\"توضیحات\"}\n                  name={'desc'}\n                  value={need[index].desc}\n                  onChange={setNeedInfo(index)}\n              />\n            </div>\n            {need.length > 1 && <div className={classnames(classes.needPart, \"deleteBtn\")}>\n              <Button variant={\"outlined\"} color={\"primary\"} size={\"small\"} onClick={deleteRequest(index)}>\n                حذف درخواست\n              </Button>\n            </div>}\n          </AccordionDetails>\n        </Accordion>\n    )\n  }\n\n  return loading ? <Loader /> : (\n      <div className={classes.container}>\n        <div className={classes.title}>\n          <Typography variant={\"h3\"}>{showReceipt ? 'تأیید اطلاعات' : 'ثبت نیاز'}</Typography>\n        </div>\n        <hr/>\n\n        <div className={classnames(classes.media, {\"receiptOnly\": showReceipt})}>\n          {!showReceipt && <div className={classes.form}>\n            <Typography>نوع حادثه را مشخص کنید (اختیاری)</Typography>\n            <CardSlider>\n              {Object.keys(disasterCategories).map((d, i) => (\n                  <Card k={i} icon={disasterIcons[d]} selected={disaster === d}\n                        onClick={handleDisaster(d)}>\n                    <div>{disasterCategories[d]}</div>\n                  </Card>\n              ))}\n            </CardSlider>\n\n            <Typography style={{marginTop: Theme.spacing(2)}} gutterBottom>درخواست‌های خود را با وارد کردن اطلاعات\n              خواسته‌شده ثبت کنید</Typography>\n\n            <RTL>\n              <MuiThemeProvider theme={Theme}>\n                {need.map((n, i) => needItemForm(i))}\n              </MuiThemeProvider>\n            </RTL>\n\n          </div>}\n          {(showReceipt || !isMobileDisplay) && <div className={classes.receipt}>\n            <Receipt receipts={need} type={disaster} current={expanded ? parseInt(expanded.slice(5)) : 0}/>\n            <div className={classes.desktopBtn}>\n              <CustomButton variant={\"contained\"} onClick={showReceipt ? handleShowReceipt : addRequest}>\n                {showReceipt ? 'ویرایش' : 'درخواست جدید'}\n              </CustomButton>\n              <CustomButton variant={\"contained\"} onClick={showReceipt ? submitNeed : handleShowReceipt}>\n                {showReceipt ? 'تأیید و ثبت' : 'مرحله‌ی بعد'}\n              </CustomButton>\n            </div>\n          </div>}\n        </div>\n\n        {isMobileDisplay && <Fab buttons={[\n          {\n            title: showReceipt ? 'ویرایش' : 'درخواست جدید',\n            onClickFn: showReceipt ? handleShowReceipt : addRequest,\n          },\n          {\n            title: showReceipt ? 'تأیید و ثبت' : 'مرحله‌ی بعد',\n            onClickFn: showReceipt ? submitNeed : handleShowReceipt,\n          },\n        ]}/>}\n\n        <FloatingAlert text={message} open={open} handleClose={closeAlert} duration={duration} type={type}/>\n      </div>\n  );\n};\n\nAddNeed.propTypes = {};\n\nexport default AddNeed;","/home/pmoghadam/WebstormProjects/crisis-management-system/src/assets/categories.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/Card.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/types/needType.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/assets/icons/iconComponents/FloodIcon.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/assets/icons/iconComponents/FireIcon.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/assets/icons/iconComponents/EarthquakeIcon.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/assets/icons/iconComponents/AvalancheIcon.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/assets/icons/iconComponents/TwisterIcon.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/assets/icons/iconComponents/LandslideIcon.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/Receipt.js",["256"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { Grid, makeStyles, MobileStepper, Paper, useTheme } from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport { KeyboardArrowLeft, KeyboardArrowRight } from \"@material-ui/icons\";\nimport { Swipe } from \"react-swipe-component\"\nimport { disasterCategories, needCategories } from \"../../assets/categories\";\n\nconst translate = {\n  type: 'حادثه',\n  category: 'نوع نیاز',\n  title: 'عنوان نیاز',\n  amount: 'تعداد',\n  urgent: 'ضرورت',\n  desc: 'توضیحات',\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 600,\n    flexGrow: 1,\n    backgroundColor: theme.palette.secondary.light,\n    boxShadow: \"0 0 4px 1px #707070aa\",\n    borderRadius: theme.spacing(.5),\n  },\n  header: {\n    display: 'flex',\n    alignItems: 'center',\n    height: 50,\n    paddingRight: theme.spacing(2),\n    borderBottom: \"1px solid #707070\",\n    borderRadius: theme.spacing(.5, .5, 0, 0),\n    backgroundColor: theme.palette.secondary.light,\n  },\n  body: {\n    padding: theme.spacing(2, 0),\n  },\n  key: {\n    color: theme.palette.text.secondary,\n    backgroundColor: \"transparent\",\n    padding: theme.spacing(.5, 2),\n  },\n  value: {\n    color: theme.palette.text.hint,\n    backgroundColor: \"transparent\",\n    padding: theme.spacing(.5, 2),\n    whiteSpace: \"pre-wrap\",\n    overflowWrap: \"anywhere\",\n  },\n  footer: {\n    borderRadius: theme.spacing(0, 0, .5, .5),\n    borderTop: \"1px solid #707070\",\n    backgroundColor: theme.palette.secondary.light,\n  },\n}));\n\nconst Receipt = props => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const maxSteps = props.receipts.length;\n\n  // useEffect(() => {\n  //   console.log(12)\n  //   setActiveStep(props.current)\n  // }, [props])\n\n  const printValues = (cat, val) => {\n    if (cat === \"category\") {\n      return needCategories[val.toString()].faName\n    } else if (cat === \"title\") {\n      return needCategories[props.receipts[activeStep].category.toString()].items[val]\n    } else if (cat === \"urgent\") {\n      switch (val) {\n        case 1:\n          return 'خیلی کم'\n        case 2:\n          return 'کم'\n        default:\n        case 3:\n          return 'متوسط'\n        case 4:\n          return 'زیاد'\n        case 5:\n          return 'خیلی زیاد'\n      }\n    }\n    return val\n  }\n\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const onSwipeLeftListener = () => {\n    setActiveStep(activeStep > 0 ? activeStep - 1 : maxSteps - 1);\n  }\n\n  const onSwipeRightListener = () => {\n    setActiveStep(activeStep < maxSteps - 1 ? activeStep + 1 : 0);\n  }\n\n  return (\n      <div className={classnames(classes.root, props.className)}>\n        <Paper elevation={0} className={classes.header}>\n          <Typography>{`درخواست ${activeStep + 1}`}</Typography>\n        </Paper>\n        <Swipe\n            nodeName=\"div\"\n            onSwipedLeft={onSwipeLeftListener}\n            onSwipedRight={onSwipeRightListener}\n            detectTouch\n        >\n          <div className={classes.body}>\n            <Grid container spacing={1}>\n              <Grid item xs={5}>\n                <Paper className={classes.key} elevation={0}>نوع حادثه</Paper>\n              </Grid>\n              <Grid item xs={7}>\n                <Paper className={classes.value}\n                       elevation={0}>{disasterCategories[props.type] ? disasterCategories[props.type] : '-'}</Paper>\n              </Grid>\n              {Object.keys(props.receipts[activeStep]).map((need, i) => (<>\n                <Grid key={i + 1} item xs={5}>\n                  <Paper className={classes.key} elevation={0}>{translate[need]}</Paper>\n                </Grid>\n                <Grid key={-i} item xs={7}>\n                  <Paper className={classes.value} elevation={0}>\n                    {props.receipts[activeStep][need] !== \"\" ? printValues(need, props.receipts[activeStep][need]) : '-'}\n                  </Paper>\n                </Grid>\n              </>))}\n            </Grid>\n          </div>\n        </Swipe>\n        <MobileStepper\n            steps={maxSteps}\n            className={classes.footer}\n            position=\"static\"\n            variant=\"text\"\n            activeStep={activeStep}\n            nextButton={\n              <Button size=\"small\" onClick={handleNext} disabled={activeStep === maxSteps - 1}>\n                بعدی\n                {theme.direction === 'rtl' ? <KeyboardArrowLeft/> : <KeyboardArrowRight/>}\n              </Button>\n            }\n            backButton={\n              <Button size=\"small\" onClick={handleBack} disabled={activeStep === 0}>\n                {theme.direction === 'rtl' ? <KeyboardArrowRight/> : <KeyboardArrowLeft/>}\n                قبلی\n              </Button>\n            }\n        />\n      </div>\n  );\n};\n\nReceipt.propTypes = {\n  className: PropTypes.string,\n  type: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.bool,\n  ]),\n  current: PropTypes.number,\n  receipts: PropTypes.arrayOf(\n      PropTypes.shape({\n        category: PropTypes.oneOfType([\n          PropTypes.string,\n          PropTypes.number,\n        ]),\n        title: PropTypes.oneOfType([\n          PropTypes.string,\n          PropTypes.number,\n        ]),\n        amount: PropTypes.oneOfType([\n          PropTypes.string,\n          PropTypes.number,\n        ]),\n        urgent: PropTypes.oneOfType([\n          PropTypes.string,\n          PropTypes.number,\n        ]),\n        desc: PropTypes.string,\n      })\n  )\n};\n\nReceipt.defaultProps = {\n  type: '-',\n  receipts: [\n    {\n      category: '-',\n      title: '-',\n      amount: '-',\n      urgent: '-',\n      desc: '-',\n    },\n  ],\n}\n\nexport default Receipt;","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/Done.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/CardSlider.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/hooks/useAlert.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/FloatingAlert.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/Loader.js",[],{"ruleId":"257","replacedBy":"258"},{"ruleId":"259","replacedBy":"260"},{"ruleId":"261","severity":1,"message":"262","line":9,"column":8,"nodeType":"263","messageId":"264","endLine":9,"endColumn":11},{"ruleId":"261","severity":1,"message":"265","line":12,"column":8,"nodeType":"263","messageId":"264","endLine":12,"endColumn":14},{"ruleId":"261","severity":1,"message":"266","line":13,"column":8,"nodeType":"263","messageId":"264","endLine":13,"endColumn":18},{"ruleId":"261","severity":1,"message":"267","line":2,"column":8,"nodeType":"263","messageId":"264","endLine":2,"endColumn":17},{"ruleId":"261","severity":1,"message":"268","line":3,"column":10,"nodeType":"263","messageId":"264","endLine":3,"endColumn":16},{"ruleId":"261","severity":1,"message":"269","line":6,"column":8,"nodeType":"263","messageId":"264","endLine":6,"endColumn":13},{"ruleId":"261","severity":1,"message":"270","line":5,"column":11,"nodeType":"263","messageId":"264","endLine":5,"endColumn":18},{"ruleId":"261","severity":1,"message":"271","line":7,"column":3,"nodeType":"263","messageId":"264","endLine":7,"endColumn":7},{"ruleId":"261","severity":1,"message":"272","line":8,"column":3,"nodeType":"263","messageId":"264","endLine":8,"endColumn":11},{"ruleId":"261","severity":1,"message":"273","line":9,"column":3,"nodeType":"263","messageId":"264","endLine":9,"endColumn":15},{"ruleId":"261","severity":1,"message":"274","line":9,"column":17,"nodeType":"263","messageId":"264","endLine":9,"endColumn":32},{"ruleId":"261","severity":1,"message":"275","line":13,"column":8,"nodeType":"263","messageId":"264","endLine":13,"endColumn":17},{"ruleId":"261","severity":1,"message":"276","line":1,"column":17,"nodeType":"263","messageId":"264","endLine":1,"endColumn":25},{"ruleId":"257","replacedBy":"277"},{"ruleId":"259","replacedBy":"278"},{"ruleId":"261","severity":1,"message":"279","line":2,"column":10,"nodeType":"263","messageId":"264","endLine":2,"endColumn":17},{"ruleId":"261","severity":1,"message":"280","line":3,"column":8,"nodeType":"263","messageId":"264","endLine":3,"endColumn":19},{"ruleId":"261","severity":1,"message":"281","line":7,"column":8,"nodeType":"263","messageId":"264","endLine":7,"endColumn":23},{"ruleId":"257","replacedBy":"282"},{"ruleId":"259","replacedBy":"283"},{"ruleId":"261","severity":1,"message":"284","line":3,"column":10,"nodeType":"263","messageId":"264","endLine":3,"endColumn":18},{"ruleId":"261","severity":1,"message":"285","line":3,"column":20,"nodeType":"263","messageId":"264","endLine":3,"endColumn":36},{"ruleId":"261","severity":1,"message":"286","line":5,"column":10,"nodeType":"263","messageId":"264","endLine":5,"endColumn":23},{"ruleId":"261","severity":1,"message":"287","line":5,"column":25,"nodeType":"263","messageId":"264","endLine":5,"endColumn":37},{"ruleId":"261","severity":1,"message":"288","line":6,"column":8,"nodeType":"263","messageId":"264","endLine":6,"endColumn":16},{"ruleId":"261","severity":1,"message":"289","line":1,"column":10,"nodeType":"263","messageId":"264","endLine":1,"endColumn":15},{"ruleId":"261","severity":1,"message":"290","line":16,"column":38,"nodeType":"263","messageId":"264","endLine":16,"endColumn":42},{"ruleId":"261","severity":1,"message":"291","line":9,"column":9,"nodeType":"263","messageId":"264","endLine":9,"endColumn":25},{"ruleId":"261","severity":1,"message":"292","line":1,"column":17,"nodeType":"263","messageId":"264","endLine":1,"endColumn":26},"no-native-reassign",["293"],"no-negated-in-lhs",["294"],"no-unused-vars","'RTL' is defined but never used.","Identifier","unusedVar","'styles' is defined but never used.","'classNames' is defined but never used.","'PropTypes' is defined but never used.","'Button' is defined but never used.","'Hands' is defined but never used.","'Divider' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'ListItemText' is defined but never used.","'SwipeableDrawer' is defined but never used.","'CloseIcon' is defined but never used.","'useState' is defined but never used.",["293"],["294"],"'SvgIcon' is defined but never used.","'HealingIcon' is defined but never used.","'SvgHelpingHand1' is defined but never used.",["293"],["294"],"'Checkbox' is defined but never used.","'FormControlLabel' is defined but never used.","'emptyUserInfo' is defined but never used.","'UserInfoType' is defined but never used.","'OtpInput' is defined but never used.","'Slide' is defined but never used.","'Zoom' is defined but never used.","'CircularProgress' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]