[{"/home/pmoghadam/WebstormProjects/help/src/index.js":"1","/home/pmoghadam/WebstormProjects/help/src/reportWebVitals.js":"2","/home/pmoghadam/WebstormProjects/help/src/App.js":"3","/home/pmoghadam/WebstormProjects/help/src/components/Home.js":"4","/home/pmoghadam/WebstormProjects/help/src/components/common/Header.js":"5","/home/pmoghadam/WebstormProjects/help/src/components/helpers/Theme.js":"6","/home/pmoghadam/WebstormProjects/help/src/components/helpers/RTL.js":"7","/home/pmoghadam/WebstormProjects/help/src/components/helpers/HeaderScrollEffect.js":"8","/home/pmoghadam/WebstormProjects/help/src/components/common/CustomButton.js":"9","/home/pmoghadam/WebstormProjects/help/src/assets/routes.js":"10","/home/pmoghadam/WebstormProjects/help/src/components/Drawer.js":"11","/home/pmoghadam/WebstormProjects/crisis-management-system/src/index.js":"12","/home/pmoghadam/WebstormProjects/crisis-management-system/src/reportWebVitals.js":"13","/home/pmoghadam/WebstormProjects/crisis-management-system/src/App.js":"14","/home/pmoghadam/WebstormProjects/crisis-management-system/src/assets/routes.js":"15","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/Home.js":"16","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/Header.js":"17","/home/pmoghadam/WebstormProjects/crisis-management-system/src/hooks/usePosition.js":"18","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/About.js":"19","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/OtpInput.js":"20","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/Account.js":"21","/home/pmoghadam/WebstormProjects/crisis-management-system/src/types/userInfoType.js":"22","/home/pmoghadam/WebstormProjects/crisis-management-system/src/assets/messages.js":"23","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/NavDrawer.js":"24","/home/pmoghadam/WebstormProjects/crisis-management-system/src/helpers/Theme.js":"25","/home/pmoghadam/WebstormProjects/crisis-management-system/src/helpers/RTL.js":"26","/home/pmoghadam/WebstormProjects/crisis-management-system/src/helpers/HeaderScrollEffect.js":"27","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/Profile.js":"28","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/AddNeed.js":"29","/home/pmoghadam/WebstormProjects/crisis-management-system/src/assets/categories.js":"30","/home/pmoghadam/WebstormProjects/crisis-management-system/src/types/needType.js":"31","/home/pmoghadam/WebstormProjects/crisis-management-system/src/assets/icons/iconComponents/FloodIcon.js":"32","/home/pmoghadam/WebstormProjects/crisis-management-system/src/assets/icons/iconComponents/FireIcon.js":"33","/home/pmoghadam/WebstormProjects/crisis-management-system/src/assets/icons/iconComponents/EarthquakeIcon.js":"34","/home/pmoghadam/WebstormProjects/crisis-management-system/src/assets/icons/iconComponents/AvalancheIcon.js":"35","/home/pmoghadam/WebstormProjects/crisis-management-system/src/assets/icons/iconComponents/TwisterIcon.js":"36","/home/pmoghadam/WebstormProjects/crisis-management-system/src/assets/icons/iconComponents/LandslideIcon.js":"37","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/Receipt.js":"38","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/Done.js":"39","/home/pmoghadam/WebstormProjects/crisis-management-system/src/hooks/useAlert.js":"40","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/FloatingAlert.js":"41","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/Loader.js":"42","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/Popup.js":"43","/home/pmoghadam/WebstormProjects/crisis-management-system/src/Context.js":"44","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/table/DataTable.js":"45","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/table/DataTableHead.js":"46","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/table/DataTableRow.js":"47","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/NotFound.js":"48","/home/pmoghadam/WebstormProjects/crisis-management-system/src/serviceWorker.js":"49","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/Footer.js":"50","/home/pmoghadam/WebstormProjects/crisis-management-system/src/helpers/api.js":"51","/home/pmoghadam/WebstormProjects/crisis-management-system/src/helpers/PrivateRoute.js":"52","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/AccessDenied.js":"53","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/AdminPanel.js":"54","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/RecentNeeds.js":"55","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/admin/Dashboard.js":"56","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/DataChart.js":"57","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/admin/Users.js":"58","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/admin/Requests.js":"59","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/table/AdminDataTableRow.js":"60","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/admin/Needs.js":"61","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/forms/OtpForm.js":"62","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/forms/SignInForm.js":"63","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/forms/SignUpForm.js":"64","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/UserListRow.js":"65","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/NeedListRow.js":"66","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/card/CardSlider.js":"67","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/card/Card.js":"68","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/buttons/FAB.js":"69","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/buttons/CustomButton.js":"70"},{"size":586,"mtime":1616398485398,"results":"71","hashOfConfig":"72"},{"size":362,"mtime":1616398485398,"results":"73","hashOfConfig":"72"},{"size":1257,"mtime":1616404252778,"results":"74","hashOfConfig":"72"},{"size":1905,"mtime":1616398485398,"results":"75","hashOfConfig":"72"},{"size":1530,"mtime":1616405159633,"results":"76","hashOfConfig":"72"},{"size":769,"mtime":1616404268601,"results":"77","hashOfConfig":"72"},{"size":592,"mtime":1616398485398,"results":"78","hashOfConfig":"72"},{"size":571,"mtime":1616398485398,"results":"79","hashOfConfig":"72"},{"size":511,"mtime":1616398485398,"results":"80","hashOfConfig":"72"},{"size":61,"mtime":1616404207087,"results":"81","hashOfConfig":"72"},{"size":1775,"mtime":1616405222756,"results":"82","hashOfConfig":"72"},{"size":830,"mtime":1629447148019,"results":"83","hashOfConfig":"84"},{"size":362,"mtime":1616427207741,"results":"85","hashOfConfig":"84"},{"size":2809,"mtime":1629447087247,"results":"86","hashOfConfig":"84"},{"size":185,"mtime":1629066153691,"results":"87","hashOfConfig":"84"},{"size":4521,"mtime":1629447542557,"results":"88","hashOfConfig":"84"},{"size":6443,"mtime":1629446393476,"results":"89","hashOfConfig":"84"},{"size":1020,"mtime":1629447068135,"results":"90","hashOfConfig":"84"},{"size":1869,"mtime":1617264662959,"results":"91","hashOfConfig":"84"},{"size":1754,"mtime":1629446939018,"results":"92","hashOfConfig":"84"},{"size":13440,"mtime":1629447542581,"results":"93","hashOfConfig":"84"},{"size":406,"mtime":1617391951648,"results":"94","hashOfConfig":"84"},{"size":1228,"mtime":1629154288099,"results":"95","hashOfConfig":"84"},{"size":4468,"mtime":1629446393428,"results":"96","hashOfConfig":"84"},{"size":858,"mtime":1629158316065,"results":"97","hashOfConfig":"84"},{"size":592,"mtime":1616427207741,"results":"98","hashOfConfig":"84"},{"size":517,"mtime":1617011124559,"results":"99","hashOfConfig":"84"},{"size":8322,"mtime":1629447068099,"results":"100","hashOfConfig":"84"},{"size":28861,"mtime":1629447542549,"results":"101","hashOfConfig":"84"},{"size":3005,"mtime":1616767823864,"results":"102","hashOfConfig":"84"},{"size":216,"mtime":1616750248027,"results":"103","hashOfConfig":"84"},{"size":4104,"mtime":1616674128194,"results":"104","hashOfConfig":"84"},{"size":3386,"mtime":1616674143678,"results":"105","hashOfConfig":"84"},{"size":3117,"mtime":1616674220339,"results":"106","hashOfConfig":"84"},{"size":4511,"mtime":1616708153840,"results":"107","hashOfConfig":"84"},{"size":3059,"mtime":1616674315844,"results":"108","hashOfConfig":"84"},{"size":3472,"mtime":1616708153824,"results":"109","hashOfConfig":"84"},{"size":6320,"mtime":1617397657082,"results":"110","hashOfConfig":"84"},{"size":2654,"mtime":1629447542605,"results":"111","hashOfConfig":"84"},{"size":751,"mtime":1629447068127,"results":"112","hashOfConfig":"84"},{"size":1217,"mtime":1616794714946,"results":"113","hashOfConfig":"84"},{"size":469,"mtime":1616868965175,"results":"114","hashOfConfig":"84"},{"size":1326,"mtime":1629405280874,"results":"115","hashOfConfig":"84"},{"size":131,"mtime":1629063425212,"results":"116","hashOfConfig":"84"},{"size":7337,"mtime":1629446938954,"results":"117","hashOfConfig":"84"},{"size":2000,"mtime":1616595766388,"results":"118","hashOfConfig":"84"},{"size":5310,"mtime":1629448718019,"results":"119","hashOfConfig":"84"},{"size":1300,"mtime":1629447542565,"results":"120","hashOfConfig":"84"},{"size":5204,"mtime":1617362094268,"results":"121","hashOfConfig":"84"},{"size":1005,"mtime":1617264662963,"results":"122","hashOfConfig":"84"},{"size":1625,"mtime":1629448834335,"results":"123","hashOfConfig":"84"},{"size":680,"mtime":1629447068111,"results":"124","hashOfConfig":"84"},{"size":1379,"mtime":1629446393436,"results":"125","hashOfConfig":"84"},{"size":2763,"mtime":1629446939010,"results":"126","hashOfConfig":"84"},{"size":2524,"mtime":1629447542597,"results":"127","hashOfConfig":"84"},{"size":5203,"mtime":1629447541565,"results":"128","hashOfConfig":"84"},{"size":1521,"mtime":1629364584990,"results":"129","hashOfConfig":"84"},{"size":4219,"mtime":1629447539325,"results":"130","hashOfConfig":"84"},{"size":3264,"mtime":1629446393412,"results":"131","hashOfConfig":"84"},{"size":7099,"mtime":1629448718035,"results":"132","hashOfConfig":"84"},{"size":8166,"mtime":1629447539317,"results":"133","hashOfConfig":"84"},{"size":1232,"mtime":1629447542573,"results":"134","hashOfConfig":"84"},{"size":2357,"mtime":1629447542541,"results":"135","hashOfConfig":"84"},{"size":3783,"mtime":1629447542593,"results":"136","hashOfConfig":"84"},{"size":2615,"mtime":1629446938982,"results":"137","hashOfConfig":"84"},{"size":2890,"mtime":1629446415725,"results":"138","hashOfConfig":"84"},{"size":472,"mtime":1616708074869,"results":"139","hashOfConfig":"84"},{"size":1885,"mtime":1617267616402,"results":"140","hashOfConfig":"84"},{"size":756,"mtime":1629446393388,"results":"141","hashOfConfig":"84"},{"size":415,"mtime":1616792806629,"results":"142","hashOfConfig":"84"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},"mcjzsk",{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"145"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},"1hsr5lm",{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"169"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"169"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"169"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"169"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"169"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"169"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"169"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"169"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"169"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"169"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"169"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},"/home/pmoghadam/WebstormProjects/help/src/index.js",[],["299","300"],"/home/pmoghadam/WebstormProjects/help/src/reportWebVitals.js",[],"/home/pmoghadam/WebstormProjects/help/src/App.js",["301","302","303"],"/home/pmoghadam/WebstormProjects/help/src/components/Home.js",["304","305","306"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Typography } from \"@material-ui/core\";\nimport HealingIcon from '@material-ui/icons/Healing';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Hands from '../assets/icons/helping-hand.svg';\nimport { CustomButton } from \"./common/CustomButton\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100%\",\n  },\n  icon: {\n    fontSize: theme.spacing(8),\n    margin: theme.spacing(2, 0),\n    color: theme.palette.text.secondary,\n  },\n  title: {\n    textAlign: \"center\",\n    fontSize: theme.spacing(5),\n    fontWeight: \"bold\",\n    color: theme.palette.text.secondary,\n  },\n  image: {\n    width: theme.spacing(25),\n    height: theme.spacing(25),\n    margin: theme.spacing(1, 0),\n  },\n  hr: {\n    color: theme.palette.text.secondary,\n  },\n  text: {\n    color: theme.palette.text.secondary,\n    fontSize: theme.spacing(2.5),\n    textAlign: \"center\",\n    textAlignLast: \"center\",\n    margin: theme.spacing(6, 0),\n  },\n  btn: {\n    width: \"100%\",\n    margin: theme.spacing(2, 0),\n  }\n}));\n\nconst Home = props => {\n  const classes = useStyles();\n\n  return (\n      <>\n        <HealingIcon className={classes.icon}/>\n        <Typography variant=\"h4\" className={classes.title}>\n          سامانه‌ی ثبت نیازمندی‌ها\n        </Typography>\n        {/*<hr className={classes.hr}/>*/}\n        {/*<img className={classes.image} src={Hands} alt=\"hands\"/>*/}\n        <Typography variant=\"span\" className={classes.text}>\n          در این سامانه شما می‌توانید در زمان وقوع بحران نیازهای خود را وارد کنید تا در اسرع وقت، برطرف شود.\n        </Typography>\n        <CustomButton className={classes.btn} variant={\"contained\"}>شروع ثبت نیاز</CustomButton>\n      </>\n  );\n};\n\nHome.propTypes = {};\n\nexport default Home;","/home/pmoghadam/WebstormProjects/help/src/components/common/Header.js",["307","308","309","310","311","312"],"/home/pmoghadam/WebstormProjects/help/src/components/helpers/Theme.js",[],"/home/pmoghadam/WebstormProjects/help/src/components/helpers/RTL.js",[],"/home/pmoghadam/WebstormProjects/help/src/components/helpers/HeaderScrollEffect.js",[],"/home/pmoghadam/WebstormProjects/help/src/components/common/CustomButton.js",[],"/home/pmoghadam/WebstormProjects/help/src/assets/routes.js",[],"/home/pmoghadam/WebstormProjects/help/src/components/Drawer.js",["313"],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/index.js",[],["314","315"],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/reportWebVitals.js",[],["316","317"],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/App.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/assets/routes.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/Home.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/Header.js",["318"],"import React, { useContext, useEffect, useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport {\n  AppBar,\n  Button,\n  Container,\n  IconButton,\n  Toolbar,\n  Typography,\n  useMediaQuery,\n  useScrollTrigger, useTheme\n} from \"@material-ui/core\";\nimport MenuRoundedIcon from '@material-ui/icons/MenuRounded';\nimport { HeaderScrollEffect } from \"../../helpers/HeaderScrollEffect\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport NavDrawer from \"./NavDrawer\";\nimport { NavLink } from \"react-router-dom\";\nimport { routes } from \"../../assets/routes\";\nimport Logo from '../../assets/icons/simorgh.svg';\nimport PersonRoundedIcon from '@material-ui/icons/PersonRounded';\nimport { Context, UserContext } from \"../../Context\";\nimport { api, config, get_token, get_user_info, rest } from \"../../helpers/api\";\nimport AccessDenied from \"./AccessDenied\";\n\nconst useStyles = makeStyles((theme) => ({\n  btn: {\n    color: theme.palette.text.secondary,\n    '&#home': {\n      marginLeft: theme.spacing(-1),\n      [theme.breakpoints.up('md')]: {\n        display: \"none\",\n      },\n    },\n    '& img': {\n      width: theme.spacing(5),\n      height: theme.spacing(5),\n    },\n    '& > button > span': {\n      direction: \"ltr\",\n    },\n  },\n  admin: {\n    border: \"1px solid\",\n    borderRadius: theme.spacing(.5),\n  },\n  navContainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifySelf: \"flex-start\",\n    width: \"100%\",\n    [theme.breakpoints.down('sm')]: {\n      display: \"none\",\n    },\n  },\n  icon: {\n    color: theme.palette.text.secondary,\n    marginLeft: \"auto\",\n    [theme.breakpoints.up('md')]: {\n      display: \"none\",\n    },\n  },\n  header: {\n    backgroundColor: theme.palette.secondary.light,\n    margin: theme.spacing(0, -2),\n    right: \"unset\",\n    borderRadius: \"0 0 8px 8px\",\n  },\n  container: {\n    padding: 0,\n  },\n}));\n\nconst Header = props => {\n  const {window} = props;\n  const classes = useStyles();\n  const {context} = useContext(Context);\n  const {isAdmin, setIsAdmin} = useContext(UserContext);\n  const [open, setOpen] = useState(false);\n  const [path, setPath] = useState(props.location.pathname);\n  const [dialogOpen, setDialogOpen] = React.useState(false);\n  const history = useHistory();\n  const theme = useTheme()\n  const isMobileDisplay = useMediaQuery(theme.breakpoints.down('sm'))\n  const trigger = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 80,\n    target: window ? window() : undefined,\n  });\n\n  useEffect(() => setPath(props.location.pathname), [props.location.pathname])\n\n  useEffect(() => {\n    console.log(path)\n    if (get_token()) {\n      api.get(`${rest.profile}/${get_user_info().id}`, config(\"json\"))\n        .then((res) => {\n          setIsAdmin(res.data.isAdmin)\n        })\n    } else {\n      setIsAdmin(false)\n    }\n  }, [path])\n\n  const toggleDrawer = open => event => {\n    if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setOpen(open);\n  };\n\n  const handleDialogClose = () => {\n    setDialogOpen(false);\n  };\n\n  const handleDialogOpen = () => {\n    if (get_token()) {\n      history.push(routes.ADD_NEED)\n    } else {\n      setDialogOpen(true);\n    }\n  };\n\n  return (\n    <HeaderScrollEffect {...props}>\n      <AppBar position={\"fixed\"} className={classes.header}>\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Toolbar>\n            {\n              <div className={classes.navContainer}>\n                <NavLink exact to={routes.HOME} className={classes.btn}>\n                  <Button color=\"inherit\">صفحه‌ی اصلی</Button>\n                </NavLink>\n                {get_token()\n                  ? <NavLink to={routes.ADD_NEED} className={classes.btn}>\n                    <Button color=\"inherit\">ثبت نیاز</Button>\n                  </NavLink>\n                  : <div onClick={handleDialogOpen} className={classes.btn}>\n                    <Button color=\"inherit\">ثبت نیاز</Button>\n                  </div>}\n                <NavLink to={routes.ABOUT} className={classes.btn}>\n                  <Button color=\"inherit\">درباره‌ی ما</Button>\n                </NavLink>\n                {get_token()\n                  ? <NavLink to={routes.PROFILE} className={classes.btn}>\n                    <Button color=\"inherit\">پروفایل</Button>\n                  </NavLink>\n                  : <NavLink to={routes.SIGN_IN} className={classes.btn}>\n                    <Button color=\"inherit\">ورود | ثبت‌نام</Button>\n                  </NavLink>}\n                {isAdmin && <NavLink to={routes.ADMIN} className={classnames(classes.btn, classes.admin)}>\n                  <Button color=\"inherit\">پنل ادمین</Button>\n                </NavLink>}\n              </div>\n            }\n            <IconButton edge=\"end\" className={classes.icon} aria-label=\"menu\" onClick={toggleDrawer(true)}>\n              <MenuRoundedIcon/>\n            </IconButton>\n            {isMobileDisplay && trigger &&\n            <Typography color={\"textSecondary\"} className=\"ml-auto\">{context}</Typography>}\n            {\n              props.location.pathname === routes.HOME\n                ?\n                get_token()\n                  ? <NavLink to={routes.PROFILE} className={classes.btn} id='home'>\n                    <Button color=\"inherit\" startIcon={<PersonRoundedIcon/>}>پروفایل</Button>\n                  </NavLink>\n                  : <NavLink to={routes.SIGN_IN} className={classes.btn} id='home'>\n                    <Button color=\"inherit\">ورود | ثبت‌نام</Button>\n                  </NavLink>\n                :\n                <NavLink to={routes.HOME} className={classes.btn}>\n                  <IconButton edge=\"start\"><img src={Logo} alt=\"logo\"/></IconButton>\n                </NavLink>\n            }\n            <NavDrawer open={open} toggleFn={toggleDrawer}/>\n          </Toolbar>\n          <AccessDenied open={dialogOpen} handleClose={handleDialogClose}\n                        action={() => history.push(routes.ADD_NEED)}/>\n        </Container>\n      </AppBar>\n    </HeaderScrollEffect>\n  );\n};\n\nHeader.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default Header;","/home/pmoghadam/WebstormProjects/crisis-management-system/src/hooks/usePosition.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/About.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/OtpInput.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/Account.js",["319"],"import React, { useContext, useEffect, useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { geolocated } from \"react-geolocated\";\nimport classnames from 'classnames';\nimport { Button, MuiThemeProvider, Typography, useMediaQuery, useTheme } from \"@material-ui/core\";\nimport RTL from \"../helpers/RTL\";\nimport Theme from \"../helpers/Theme\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Fab from \"./buttons/FAB\";\nimport ArrowBackIosRoundedIcon from '@material-ui/icons/ArrowBackIosRounded';\nimport SignUpForm from \"./forms/SignUpForm\";\nimport SignInForm from \"./forms/SignInForm\";\nimport OtpForm from \"./forms/OtpForm\";\nimport { emptyUserInfo } from '../types/userInfoType'\nimport { usePosition } from \"../hooks/usePosition\";\nimport { messages } from \"../assets/messages\";\nimport { routes } from \"../assets/routes\";\nimport FloatingAlert from \"./common/FloatingAlert\";\nimport { useAlert } from \"../hooks/useAlert\";\nimport Popup from \"./common/Popup\";\nimport { Context } from \"../Context\";\nimport Helmet from 'react-helmet';\nimport { api, config, get_token, rest, set_token } from \"../helpers/api\";\nimport Loader from \"./common/Loader\";\n\nconst useStyles = makeStyles((theme) => ({\n  media: {\n    width: \"100%\",\n    paddingBottom: theme.spacing(9),\n    [theme.breakpoints.up('md')]: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      alignItems: \"flex-start\",\n    },\n    '& hr': {\n      transform: \"rotate(90deg)\",\n      alignSelf: \"center\",\n      maxWidth: theme.spacing(32.5),\n    },\n  },\n  container: {\n    position: \"relative\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    width: '100%',\n    '& > *': {\n      direction: 'rtl',\n      margin: theme.spacing(1, 0),\n      width: 400,\n      [theme.breakpoints.down('xs')]: {\n        width: '100%',\n      }\n    },\n  },\n  blurForm: {\n    transition: \"ease .3s\",\n    filter: props => !props.breakpoint && props.isOtp ? \"blur(3px)\" : \"\",\n  },\n  blurOtp: {\n    transition: \"ease .3s\",\n    filter: props => !props.breakpoint && !props.isOtp ? \"blur(3px)\" : \"\",\n  },\n  title: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    width: \"100%\",\n  },\n  overlay: {\n    position: \"absolute\",\n    top: 0,\n    right: 0,\n    left: 0,\n    bottom: 0,\n    opacity: 0.4,\n    zIndex: 999,\n    backgroundColor: theme.palette.secondary.main,\n  },\n  icon: {\n    fontSize: theme.spacing(4),\n    margin: theme.spacing(2, 0),\n    color: theme.palette.text.light,\n    position: \"absolute\",\n    top: 0,\n    right: \"50%\",\n    transform: \"translate(45%, -50%)\",\n    backgroundColor: theme.palette.secondary.main,\n  },\n}));\n\nconst objectCheckEmpty = obj => {\n  return Object.values(obj).join('') === ''\n}\n\nconst Account = props => {\n  const theme = useTheme();\n  const {setContext} = useContext(Context)\n  const isMobileDisplay = useMediaQuery(theme.breakpoints.down('sm'));\n  const [pageLoading, setPageLoading] = useState(true);\n  const [loading, setLoading] = useState({otp: false, account: false});\n  const [permission, setPermission] = useState(false);\n  const [dialogOpen, setDialogOpen] = useState(false);\n\n  const [isRegister, setIsRegister] = useState(true);\n  const [isOtp, setIsOtp] = useState(false);\n  const classes = useStyles({...props, breakpoint: isMobileDisplay, isOtp});\n  const history = useHistory();\n  const {open, message, type, duration, closeAlert, showAlert} = useAlert();\n\n  // otpForm state\n  const [code, setCode] = useState('');\n  const [codeError, setCodeError] = useState('');\n  const [countdown, setCountdown] = useState(30);\n  // sign-in/sign-up states\n  const [signInWithNid, setSignInWithNid] = useState(false);\n  const [userInfo, setUserInfo] = useState(emptyUserInfo);\n  const [userInfoError, setUserInfoError] = useState(emptyUserInfo);\n\n  useEffect(() => {\n    if (get_token()) {\n      history.push(routes.PROFILE)\n    }\n    setPageLoading(false)\n  }, [])\n\n  useEffect(() => {\n    setContext(isOtp ? 'تأیید شماره‌ی تماس' : isRegister ? 'ثبت‌نام' : 'ورود')\n  }, [setContext, isOtp, isRegister])\n\n  useEffect(() => setDialogOpen(true), [])\n  const {latitude, longitude} = usePosition(permission);\n\n  useEffect(() => {\n    if (isOtp && countdown > 0) {\n      setTimeout(() => setCountdown(countdown - 1), 1000)\n    }\n\n    return clearTimeout()\n  }, [isOtp, countdown])\n\n  const handleDialogClose = confirmed => () => {\n    setPermission(confirmed)\n    setDialogOpen(false);\n  };\n\n  const handleCodeChange = e => {\n    setCode(e.target.value);\n\n    if (e.target.value === '') {\n      setCodeError(messages.ERR_EMPTY)\n    } else {\n      setCodeError('')\n    }\n  }\n\n  const sendOtp = (code) => {\n    setCountdown(30)\n    setTimeout(() => {\n      showAlert(\"کد شما: \" + code, \"success\", 8000)\n    }, 4000)\n  }\n\n  const sendOtpAgain = () => {\n    setCountdown(30)\n    api.patch(rest.getOtp, {\n      [signInWithNid ? 'nationalId' : 'phoneNumber']: signInWithNid ? userInfo.nationalId : userInfo.phoneNumber\n    }, config(\"json\"))\n        .then((res) => {\n          setTimeout(() => {\n            showAlert(\"کد شما: \" + res.data.otp.code, \"success\", 8000)\n          }, 4000)\n        })\n        .catch((err) => {\n          showAlert(err.response.data.error, \"error\", 3000);\n        })\n  }\n\n  const checkError = () => {\n    const errors = {\n      fn: !userInfo.firstName.length ? messages.ERR_EMPTY : '',\n      ln: !userInfo.lastName.length ? messages.ERR_EMPTY : '',\n      pn: !userInfo.phoneNumber.length\n          ? messages.ERR_EMPTY\n          : !(userInfo.phoneNumber.startsWith('09') || userInfo.phoneNumber.startsWith('+989'))\n              ? messages.ERR_WRONG_PHONE\n              : '',\n      ni: !userInfo.nationalId.length\n          ? messages.ERR_EMPTY\n          : userInfo.nationalId.length !== 10\n              ? messages.ERR_WRONG_NID_LENGTH\n              : '',\n      ad: !userInfo.address.length ? messages.ERR_EMPTY : '',\n    }\n\n    if (isRegister) {\n      setUserInfoError({\n        ...userInfoError,\n        firstName: errors.fn,\n        lastName: errors.ln,\n        phoneNumber: errors.pn,\n        nationalId: errors.ni,\n        address: errors.ad,\n      })\n    } else {\n      const errMsg = signInWithNid ? errors.ni : errors.pn;\n\n      setUserInfoError({\n        ...userInfoError,\n        [signInWithNid ? 'nationalId' : 'phoneNumber']: errMsg,\n      })\n    }\n\n    return !objectCheckEmpty(isRegister\n        ? errors\n        : {[signInWithNid ? 'nationalId' : 'phoneNumber']: signInWithNid ? errors.ni : errors.pn})\n  }\n\n  const submit = e => {\n    e.preventDefault();\n    const signInMethod = signInWithNid ? userInfo.nationalId : userInfo.phoneNumber;\n    let data = {};\n\n    if (!checkError()) {\n      setLoading({...loading, account: true})\n      if (isRegister) {\n        data = {\n          firstName: userInfo.firstName,\n          lastName: userInfo.lastName,\n          phoneNumber: userInfo.phoneNumber,\n          nationalId: userInfo.nationalId,\n          address: userInfo.address,\n          locationAccess: true,\n          lat: props.coords?.latitude || latitude,\n          long: props.coords?.longitude || longitude,\n        }\n      } else {\n        data = {\n          [signInWithNid ? 'nationalId' : 'phoneNumber']: signInMethod,\n        }\n      }\n\n      api.post(isRegister ? rest.signUp : rest.signIn, data, config('json'))\n          .then((res) => {\n            showAlert(res.data.msg, \"success\", 3000);\n            setIsOtp(true);\n            sendOtp(res.data.otp.code)\n          })\n          .catch((err) => {\n            showAlert(err.response.data.error, \"error\", 3000);\n          })\n          .finally(() => setLoading({...loading, account: false}))\n    }\n  }\n\n  const verify = e => {\n    e.preventDefault();\n\n    if (code.length < 5) {\n      setCodeError(messages.ERR_SHORT_OTP)\n    } else {\n      setLoading({...loading, otp: true})\n      const infoType = !isRegister && signInWithNid\n      const infoTemp = infoType ? userInfo.nationalId : userInfo.phoneNumber\n      api.get(`${rest.verify}/${infoType}/${infoTemp}/${code}`)\n          .then((res) => {\n            set_token(res.data.token)\n            showAlert(res.data.msg, \"success\", 5000);\n            history.push(routes.PROFILE)\n          })\n          .catch((err) => {\n            showAlert(err.response.data.error, \"error\", 3000);\n          })\n          .finally(() => setLoading({...loading, otp: false}))\n    }\n  }\n\n  const handleSignIn = e => {\n    setUserInfo({\n      ...userInfo,\n      [signInWithNid ? 'nationalId' : 'phoneNumber']: e.target.value\n    });\n    setUserInfoError({\n      ...userInfoError,\n      [signInWithNid ? 'nationalId' : 'phoneNumber']: e.target.value === '' ? messages.ERR_EMPTY : '',\n    })\n  }\n\n  const handleSignUp = e => {\n    setUserInfo({\n      ...userInfo,\n      [e.target.name]: e.target.value,\n    });\n    setUserInfoError({\n      ...userInfoError,\n      [e.target.name]: e.target.value === '' ? messages.ERR_EMPTY : '',\n    })\n  }\n\n  // const getLocation = e => {\n  //   setUserInfo({\n  //     ...userInfo,\n  //     location: {\n  //       allow: e.target.checked,\n  //       lat: e.target.checked && !error ? latitude : '',\n  //       long: e.target.checked && !error ? longitude : '',\n  //     }\n  //   })\n  // }\n\n  const handleToggle = () => {\n    setIsRegister(!isRegister)\n    setUserInfoError(emptyUserInfo)\n  }\n\n  const otpForm = () => <div className={classnames(classes.container, classes.blurOtp)}>\n    {!isMobileDisplay && !isOtp && <div className={classes.overlay}/>}\n    <OtpForm\n        isMobileDisplay={isMobileDisplay}\n        code={code}\n        handleChange={handleCodeChange}\n        submit={verify}\n        error={codeError}\n        loading={loading.otp}\n    />\n    <Button variant={\"text\"} color={\"primary\"} onClick={sendOtpAgain} disabled={countdown > 0}>\n      {countdown > 0 ? `ارسال مجدد کد بعد از ${countdown} ثانیه` : 'ارسال مجدد'}\n    </Button>\n  </div>\n\n  return pageLoading ? <Loader/> : (\n      <RTL>\n        <MuiThemeProvider theme={Theme}>\n          <Helmet><title>{isOtp ? 'تأیید شماره‌ی تماس' : isRegister ? 'ثبت‌نام' : 'ورود'}</title></Helmet>\n          <div className={classes.title}>\n            <Typography variant={\"h3\"}>{isOtp ? 'تأیید شماره‌ی تماس' : isRegister ? 'ثبت‌نام' : 'ورود'}</Typography>\n            {!isOtp &&\n            <Button\n                variant={\"outlined\"}\n                size={\"small\"}\n                onClick={handleToggle}\n            >\n              {isRegister ? 'ورود' : 'ثبت‌نام'}\n            </Button>}\n          </div>\n          <hr/>\n          <div className={classes.media}>\n            <form className={classnames(classes.container, classes.blurForm)} onSubmit={isOtp ? verify : submit}>\n              {!isMobileDisplay && isOtp && <div className={classes.overlay}/>}\n              {isMobileDisplay && isOtp\n                  ? otpForm()\n                  : isRegister\n                      ? <SignUpForm\n                          isMobileDisplay={isMobileDisplay}\n                          submit={submit}\n                          userInfo={userInfo}\n                          errors={userInfoError}\n                          onUserInfoChangeFn={handleSignUp}\n                          loading={loading.account}\n                          // accessLocation={x}\n                      />\n                      : <SignInForm\n                          isMobileDisplay={isMobileDisplay}\n                          submit={submit}\n                          type={signInWithNid}\n                          userNumber={signInWithNid ? userInfo.nationalId : userInfo.phoneNumber}\n                          onUserNumberChangeFn={handleSignIn}\n                          setType={e => setSignInWithNid(e.target.checked)}\n                          error={signInWithNid ? userInfoError.nationalId : userInfoError.phoneNumber}\n                          loading={loading.account}\n                      />\n              }\n            </form>\n            {!isMobileDisplay && <>\n              <div className={\"position-relative w-100 align-self-center\"}>\n                <hr style={{borderWidth: 2}}/>\n                <ArrowBackIosRoundedIcon className={classes.icon}/>\n              </div>\n              {otpForm()}\n            </>}\n\n          </div>\n\n          <Popup\n              open={dialogOpen}\n              onClose={handleDialogClose(false)}\n              onDeny={handleDialogClose(false)}\n              onConfirm={handleDialogClose(true)}\n              title={'اجازه‌ی دسترسی به موقعیت مکانی'}\n              text={messages.INFO_ALLOW_LOCATION}\n              // denyBtn={'فعلاً نه'}\n              confirmBtn={'قبول'}\n          />\n\n          {isMobileDisplay && <Fab buttons={[\n            {\n              loading: isOtp ? loading.otp : loading.account,\n              title: isOtp ? 'تأیید' : isRegister ? 'ثبت‌نامم کن' : 'ورود به حساب کاربری',\n              onClickFn: isOtp ? verify : submit,\n            }\n          ]}/>}\n\n          <FloatingAlert text={message} open={open} handleClose={closeAlert} duration={duration} type={type}/>\n        </MuiThemeProvider>\n      </RTL>\n  );\n};\n\nAccount.propTypes = {};\n\nexport default geolocated({\n  positionOptions: {\n    enableHighAccuracy: false,\n  },\n  userDecisionTimeout: 5000,\n})(Account);","/home/pmoghadam/WebstormProjects/crisis-management-system/src/types/userInfoType.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/assets/messages.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/NavDrawer.js",["320","321","322"],"import React, { useContext } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  Container,\n  Divider,\n  Drawer,\n  IconButton,\n  List,\n  ListItem,\n  ListItemText,\n  Toolbar\n} from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { routes } from \"../../assets/routes\";\nimport { NavLink } from \"react-router-dom\";\nimport { Swipe } from \"react-swipe-component\";\nimport Footer from \"./Footer\";\nimport { Context, UserContext } from \"../../Context\";\nimport { get_token } from \"../../helpers/api\";\nimport AccessDenied from \"./AccessDenied\";\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    color: theme.palette.text.secondary,\n  },\n  nav: {\n    color: theme.palette.text.secondary,\n  },\n  close: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  list: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: theme.spacing(30),\n    height: '100%',\n    '& *': {\n      textAlign: \"center\",\n      justifyContent: \"center\",\n    },\n  },\n  swipeArea: {\n    width: theme.spacing(2),\n    position: \"fixed\",\n    top: 0,\n    bottom: 0,\n    right: 0,\n  },\n}));\n\nconst NavDrawer = props => {\n  const classes = useStyles();\n  const {isAdmin} = useContext(UserContext);\n  const [dialogOpen, setDialogOpen] = React.useState(false);\n  const history = useHistory();\n\n  const listItems = [\n    {\n      text: 'صفحه‌ی اصلی',\n      url: routes.HOME,\n    },\n    {\n      text: get_token() ? 'پروفایل' : 'ورود | ثبت‌نام',\n      url: get_token() ? routes.PROFILE : routes.SIGN_IN,\n    },\n    {\n      text: 'ثبت نیاز',\n      url: routes.ADD_NEED,\n    },\n    {\n      text: 'درباره‌ی ما',\n      url: routes.ABOUT,\n    },\n    {\n      text: 'پنل ادمین',\n      url: routes.ADMIN,\n    },\n  ];\n\n  const handleDialogClose = () => {\n    setDialogOpen(false);\n  };\n\n  const handleDialogOpen = () => {\n    if (get_token()) {\n      history.push(routes.ADD_NEED)\n    } else {\n      setDialogOpen(true);\n    }\n  };\n\n  const list = (\n    <div className={classes.list} role=\"presentation\" onClick={props.toggleFn(false)}>\n      <List>\n        {listItems.map((navItem, index) => (\n          <div key={navItem.text}>\n            <ListItem button>\n              {navItem.text === 'ثبت نیاز'\n                ? (get_token()\n                  ? <NavLink to={routes.ADD_NEED} className={classes.nav}>\n                    <Button color=\"inherit\">ثبت نیاز</Button>\n                  </NavLink>\n                  : <div onClick={handleDialogOpen} className={classes.nav}>\n                    <Button color=\"inherit\">ثبت نیاز</Button>\n                  </div>)\n                : navItem.text === 'پنل ادمین'\n                  ? (isAdmin\n                    ? <NavLink exact to={navItem.url} className={classes.nav}>\n                      <ListItemText primary={navItem.text}/>\n                    </NavLink>\n                    : null)\n                  : <NavLink exact to={navItem.url} className={classes.nav}>\n                    <ListItemText primary={navItem.text}/>\n                  </NavLink>}\n            </ListItem>\n            {index !== listItems.length - 1 && <Divider/>}\n          </div>\n        ))}\n      </List>\n    </div>\n  )\n\n  return (\n    <nav>\n      <Swipe\n        nodeName=\"div\"\n        onSwipedLeft={props.toggleFn(true)}\n        detectTouch\n      >\n        <div className={classes.swipeArea}/>\n      </Swipe>\n      <Swipe\n        nodeName=\"div\"\n        onSwipedRight={props.toggleFn(false)}\n        detectTouch\n      >\n        <Drawer anchor=\"left\" open={props.open} onClose={props.toggleFn(false)}>\n          <div className={classes.close}>\n            <IconButton edge=\"end\" className={classes.icon} aria-label=\"close\" onClick={props.toggleFn(false)}>\n              <CloseIcon/>\n            </IconButton>\n          </div>\n          {list}\n          <Footer/>\n        </Drawer>\n        <AccessDenied open={dialogOpen} handleClose={handleDialogClose} action={() => history.push(routes.ADD_NEED)}/>\n      </Swipe>\n    </nav>\n  );\n};\n\nNavDrawer.propTypes = {\n  open: PropTypes.bool,\n  toggleFn: PropTypes.func,\n};\n\nexport default NavDrawer;","/home/pmoghadam/WebstormProjects/crisis-management-system/src/helpers/Theme.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/helpers/RTL.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/helpers/HeaderScrollEffect.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/Profile.js",["323","324","325","326","327","328"],"import React, { useContext, useEffect, useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { CircularProgress, IconButton, TextField, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport EditRoundedIcon from '@material-ui/icons/EditRounded';\nimport CheckRoundedIcon from '@material-ui/icons/CheckRounded';\nimport StarsRoundedIcon from '@material-ui/icons/StarsRounded';\nimport DataTable from \"./table/DataTable\";\nimport { useAlert } from \"../hooks/useAlert\";\nimport FloatingAlert from \"./common/FloatingAlert\";\nimport { messages } from \"../assets/messages\";\nimport { Context, UserContext } from \"../Context\";\nimport Helmet from 'react-helmet';\nimport Loader from \"./common/Loader\";\nimport { api, config, get_user_info, rest } from \"../helpers/api\";\nimport { routes } from \"../assets/routes\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: '100%',\n    paddingBottom: theme.spacing(9),\n  },\n  title: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    width: \"100%\",\n  },\n  infoTitle: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    '& + p': {\n      fontSize: theme.spacing(1.75)\n    }\n  },\n  infoContainer: {\n    border: \"1px solid #e7e7e7\",\n    backgroundColor: theme.palette.background.box,\n    borderRadius: theme.spacing(.5),\n    padding: theme.spacing(1),\n    margin: theme.spacing(.5),\n    flex: \"1 1 40%\",\n    minWidth: theme.spacing(31.25),\n    '& > *': {\n      direction: 'rtl',\n    },\n  },\n  cardContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    backgroundColor: theme.palette.secondary.light,\n    borderRadius: theme.spacing(.5),\n    padding: theme.spacing(.5),\n    marginBottom: theme.spacing(2),\n  },\n  card: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n  },\n  btn: {\n    margin: theme.spacing(.5),\n  },\n  admin: {\n    display: \"flex\",\n    alignItems: \"center\",\n    border: \"1px solid\",\n    borderRadius: theme.spacing(.5),\n    padding: theme.spacing(.5),\n    marginRight: theme.spacing(1.5),\n  },\n}));\n\nconst translate = {\n  firstname: 'نام',\n  lastname: 'نام‌خانوادگی',\n  phoneNumber: 'شماره‌ی تماس',\n  nationalId: 'کد ملی',\n  email: 'ایمیل',\n  address: 'آدرس',\n}\n\nconst info = {\n  firstname: '',\n  lastname: '',\n  email: '',\n  address: '',\n  phoneNumber: '',\n  nationalId: '',\n}\n\nconst Profile = () => {\n  const classes = useStyles();\n  const {setContext} = useContext(Context)\n  const {setIsAdmin} = useContext(UserContext);\n  const history = useHistory();\n  const [editMode, setEditMode] = useState(info);\n  const [profile, setProfile] = useState(info);\n  const [requests, setRequests] = useState([]);\n  const [admin, setAdmin] = useState(false);\n  const [location, setLocation] = useState(false);\n  const {open, message, type, duration, closeAlert, showAlert} = useAlert()\n  const [pageLoading, setPageLoading] = useState(true)\n  const [loading, setLoading] = useState({...info, allowLocation: '', logout: '', table: true,})\n\n  useEffect(() => {\n    api.get(`${rest.profile}/${get_user_info().id}`, config(\"json\"))\n        .then((res) => {\n          setAdmin(res.data.isAdmin)\n          setIsAdmin(res.data.isAdmin)\n          setLocation(res.data.allowLocation)\n          delete res.data.isAdmin\n          delete res.data.allowLocation\n          setProfile(res.data)\n\n          api.get(`${rest.request}/${get_user_info().id}`, config(\"json\"))\n              .then((res) => {\n                if (res.status === 200) {\n                  setRequests(res.data)\n                } else if (res.status === 204) {\n                  showAlert(res.data.error, \"warning\", 3000);\n                }\n              })\n              .catch((err) => {\n                showAlert(err.response.data.error, \"error\", 3000);\n              })\n              .finally(() => setLoading({...loading, table: false}))\n        })\n        .catch((err) => {\n          if (err.response) {\n            showAlert(err.response.data.error, \"error\", 3000);\n          }\n        })\n        .finally(() => setPageLoading(false))\n  }, [])\n\n  useEffect(() => {\n    setContext('پروفایل')\n  }, [setContext])\n\n  const editField = value => {\n    const currentEditState = editMode[value]\n    setEditMode({\n      ...editMode,\n      [value]: !editMode[value],\n    })\n    if (currentEditState) {\n      confirmChanges(value)\n    }\n  }\n\n  const handleEditProfile = e => {\n    setProfile({\n      ...profile,\n      [e.target.name]: e.target.value,\n    })\n  }\n\n  const confirmChanges = value => {\n    setLoading({...loading, [value]: true})\n    api.patch(`${rest.profile}/${get_user_info().id}`, {[value]: profile[value]}, config(\"json\"))\n        .then(() => {\n          showAlert(messages.INFO_CHANGES_SAVED, 'success');\n          setLoading({...loading, [value]: false})\n        })\n        .catch((err) => {\n          showAlert(err.response.data.error, \"error\", 3000);\n        })\n  }\n\n  const updateLocationAccess = () => {\n    setLoading({...loading, allowLocation: true})\n    api.patch(`${rest.profile}/${get_user_info().id}`, {allowLocation: !location}, config(\"json\"))\n        .then(() => {\n          setLocation(!location)\n          showAlert(messages.INFO_CHANGES_SAVED, 'success', 3000);\n          setLoading({...loading, allowLocation: false})\n        })\n        .catch((err) => {\n          showAlert(err.response.data.error, \"error\", 3000);\n        })\n  }\n\n  const signOut = () => {\n    setLoading({...loading, logout: true})\n    api.patch(`${rest.signOut}/${get_user_info().id}`, {allowLocation: !location}, config(\"json\"))\n        .then((res) => {\n          localStorage.removeItem('token')\n          showAlert(res.data.msg, 'success', 3000);\n          setLoading({...loading, logout: false})\n          history.push(routes.HOME)\n        })\n        .catch((err) => {\n          showAlert(err.response.data.error, \"error\", 3000);\n        })\n  }\n\n  return pageLoading ? <Loader/> : (\n      <div className={classes.container}>\n        <Helmet><title>پروفایل</title></Helmet>\n        <div className={classes.title}>\n          <Typography variant={\"h3\"}>پروفایل</Typography>\n          {admin && <div className={classes.admin}>\n            <StarsRoundedIcon/>\n            <Typography>ادمین</Typography>\n          </div>}\n          <div className=\"btn btn-danger mr-auto\" onClick={signOut}>\n            {loading.logout ? <CircularProgress color={\"secondary\"} size={20}/> : 'خروج'}\n          </div>\n        </div>\n        <hr/>\n        <div className={classes.cardContainer}>\n          <div className={classes.card}>\n            {Object.keys(profile).map((value, index) => (\n                <div key={index} className={classes.infoContainer}>\n                  <div className={classes.infoTitle}>\n                    <Typography>{translate[value]}</Typography>\n                    <IconButton edge=\"end\" className={classes.icon} aria-label=\"menu\" onClick={() => editField(value)}>\n                      {loading[value] ? <CircularProgress size={24}/> : !editMode[value] ? <EditRoundedIcon/> :\n                          <CheckRoundedIcon/>}\n                    </IconButton>\n                  </div>\n                  {!editMode[value]\n                      ? <Typography color={\"textSecondary\"}>{profile[value] || '-'}</Typography>\n                      : <TextField\n                          variant=\"standard\"\n                          name={value}\n                          value={profile[value]}\n                          onChange={handleEditProfile}\n                      />}\n                </div>\n            ))}\n            {/*<FormControlLabel*/}\n            {/*    control={*/}\n            {/*      <Checkbox*/}\n            {/*          edge={\"end\"}*/}\n            {/*          checked={location}*/}\n            {/*          onChange={updateLocationAccess}*/}\n            {/*          name=\"location\"*/}\n            {/*          color=\"primary\"*/}\n            {/*      />*/}\n            {/*    }*/}\n            {/*    label={<div className=\"d-flex align-items-center\">*/}\n            {/*      <span>استفاده از لوکیشن برای امدادرسانی</span>*/}\n            {/*      {loading.allowLocation && <CircularProgress size={20} className=\"mr-2\"/>}*/}\n            {/*    </div>}*/}\n            {/*/>*/}\n          </div>\n        </div>\n\n        <DataTable title={'وضعیت درخواست‌ها'} rows={requests} loading={loading.table}/>\n\n        <FloatingAlert text={message} open={open} handleClose={closeAlert} duration={duration} type={type}/>\n      </div>\n  );\n};\n\nProfile.propTypes = {};\n\nexport default Profile;","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/AddNeed.js",["329","330","331","332","333"],"import React, { useContext, useEffect, useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { geolocated } from \"react-geolocated\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Button,\n  Chip,\n  CircularProgress,\n  Collapse,\n  IconButton,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  ListSubheader,\n  MuiThemeProvider,\n  Slider,\n  TextField,\n  Typography,\n  useMediaQuery,\n  useTheme\n} from \"@material-ui/core\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport InfoRoundedIcon from '@material-ui/icons/InfoRounded';\nimport classnames from \"classnames\";\nimport Helmet from 'react-helmet';\nimport RTL from \"../helpers/RTL\";\nimport Theme from \"../helpers/Theme\";\nimport Card from \"./card/Card\";\nimport CardSlider from \"./card/CardSlider\";\nimport { ExpandLess, ExpandMore } from \"@material-ui/icons\";\nimport type { NeedType } from \"../types/needType\";\nimport { emptyNeed } from \"../types/needType\";\nimport FireIcon from \"../assets/icons/iconComponents/FireIcon\";\nimport Fab from \"./buttons/FAB\";\nimport EarthquakeIcon from \"../assets/icons/iconComponents/EarthquakeIcon\";\nimport FloodIcon from \"../assets/icons/iconComponents/FloodIcon\";\nimport TwisterIcon from \"../assets/icons/iconComponents/TwisterIcon\";\nimport LandslideIcon from \"../assets/icons/iconComponents/LandslideIcon\";\nimport AvalancheIcon from \"../assets/icons/iconComponents/AvalancheIcon\";\nimport EditRoundedIcon from \"@material-ui/icons/EditRounded\";\nimport ErrorRoundedIcon from '@material-ui/icons/ErrorRounded';\nimport SearchRoundedIcon from '@material-ui/icons/SearchRounded';\nimport CloseRoundedIcon from \"@material-ui/icons/CloseRounded\";\nimport { CustomButton } from \"./buttons/CustomButton\";\nimport Receipt from \"./common/Receipt\";\nimport { routes } from \"../assets/routes\";\nimport FloatingAlert from \"./common/FloatingAlert\";\nimport { useAlert } from \"../hooks/useAlert\";\nimport { messages } from \"../assets/messages\";\nimport Loader from \"./common/Loader\";\nimport { Context } from \"../Context\";\nimport { api, config, get_user_info, rest } from \"../helpers/api\";\nimport { usePosition } from \"../hooks/usePosition\";\nimport RecentNeeds from \"./RecentNeeds\";\n\nconst emptyOpenList = {\n  menu: false,\n  food: false,\n  medical: false,\n  life: false,\n  cloth: false,\n  health: false,\n  warming: false\n};\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    width: '100%',\n    paddingBottom: theme.spacing(9),\n  },\n  title: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    width: \"100%\",\n  },\n  accordion: {\n    width: \"100%\",\n    backgroundColor: theme.palette.secondary.light,\n    '& .details': {\n      display: \"flex\",\n      flexDirection: \"column\",\n      '& > *:not(.deleteBtn)': {\n        position: \"relative\",\n        '&:before': {\n          content: '\"\"',\n          position: \"absolute\",\n          top: 0,\n          right: theme.spacing(-2),\n          borderStyle: \"solid\",\n          borderColor: theme.palette.primary.main,\n          borderWidth: theme.spacing(1.5, .5),\n        },\n      },\n    },\n    '& > .header': {\n      '& > div:first-child': {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n      },\n      '& > div:last-child': {\n        marginLeft: -12,\n        marginRight: 0,\n      },\n      '&.error': {\n        backgroundColor: theme.palette.error.light,\n        '& > *': {\n          color: theme.palette.error.main,\n        },\n      },\n    },\n  },\n  list: {\n    borderRadius: theme.spacing(.7, .7, .5, .5),\n    border: \"1px solid\",\n    position: \"relative\",\n    '&.error': {\n      borderColor: theme.palette.error.main,\n    },\n    '& > .header': {\n      backgroundColor: theme.palette.secondary.dark,\n      borderRadius: theme.spacing(.5, .5, 0, 0),\n      borderBottom: \"2px solid\",\n      // backgroundColor: theme.palette.primary.main,\n      color: theme.palette.primary.main,\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n      '&.error': {\n        color: theme.palette.error.main,\n      },\n    },\n  },\n  listItem: {\n    borderBottom: \"1px solid #D0D0D0\",\n    '&  *': {\n      fontSize: theme.spacing(1.75),\n    },\n  },\n  needPart: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    '&:not(:first-child)': {\n      marginTop: theme.spacing(3),\n    },\n    '& > p': {\n      marginBottom: theme.spacing(2),\n    },\n    '& > span': {\n      alignSelf: \"center\",\n      width: \"60%\",\n      fontSize: theme.spacing(1.5),\n    },\n    '&.deleteBtn': {\n      alignSelf: \"flex-end\",\n    },\n    '&.suggest': {\n      padding: theme.spacing(1),\n      backgroundColor: theme.palette.background.box,\n      borderRadius: theme.spacing(.5),\n    },\n  },\n  headerAmount: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginBottom: theme.spacing(2),\n    '& > div': {\n      display: \"flex\",\n      alignItems: \"center\",\n      marginRight: \"auto\",\n    },\n    '& .amountBtn': {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.primary.contrastText,\n      width: theme.spacing(3),\n      height: theme.spacing(3),\n      borderRadius: theme.spacing(.5),\n      margin: theme.spacing(0, .5),\n      fontSize: theme.spacing(4),\n      userSelect: \"none\",\n      cursor: \"pointer\",\n      '&:last-child': {\n        marginLeft: 0,\n      },\n    },\n    '& .needAmount': {\n      width: theme.spacing(10),\n      height: theme.spacing(3),\n      textAlignLast: \"center\",\n      '& input': {\n        direction: \"ltr\",\n        padding: theme.spacing(.25, 0),\n        '&[type=number]': {\n          MozAppearance: \"textfield\",\n        },\n        '&::-webkit-outer-spin-button, &::-webkit-inner-spin-button,': {\n          WebkitAppearance: \"none\",\n          margin: 0,\n        },\n      },\n    },\n  },\n  hideBorders: {\n    position: \"absolute\",\n    top: -2,\n    right: -1,\n    left: -1,\n    height: theme.spacing(6.25),\n    // backgroundColor: \"#f59e39\",\n    borderRadius: theme.spacing(.5, .5, 0, 0),\n    backgroundColor: theme.palette.secondary.dark,\n  },\n  selectedNeed: {\n    backgroundColor: theme.palette.secondary.dark,\n    borderBottom: \"2px solid\",\n    borderRadius: theme.spacing(.5, .5, 0, 0),\n    padding: theme.spacing(0, 2),\n    // backgroundColor: theme.palette.primary.main,\n    color: theme.palette.primary.main,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    position: \"relative\",\n    '& > .label': {\n      fontSize: theme.spacing(1.25),\n      position: \"absolute\",\n    },\n  },\n  suggestionCard: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-start\",\n    flexDirection: \"column\",\n    height: \"100%\",\n  },\n  media: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    '&.receiptOnly': {\n      justifyContent: \"center\",\n      '& $receipt': {\n        flex: \"unset\",\n      },\n    },\n  },\n  form: {\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      flex: \"0 0 65%\"\n    },\n  },\n  receipt: {\n    flex: \"0 0 28%\",\n    position: \"sticky\",\n    top: theme.spacing(10),\n    alignSelf: \"flex-start\",\n    [theme.breakpoints.down('sm')]: {\n      // display: \"none\",\n    },\n  },\n  desktopBtn: {\n    display: \"flex\",\n    '& > *': {\n      flex: 1,\n      margin: theme.spacing(2, 1),\n      '&:first-child': {\n        marginRight: theme.spacing(0),\n      },\n      '&:last-child': {\n        marginLeft: theme.spacing(0),\n      },\n    },\n    [theme.breakpoints.down('sm')]: {\n      display: \"none\",\n    },\n  },\n}));\n\nconst disasterIcons = {\n  earthquake: EarthquakeIcon,\n  flood: FloodIcon,\n  fire: FireIcon,\n  twister: TwisterIcon,\n  landslide: LandslideIcon,\n  avalanche: AvalancheIcon,\n}\n\nconst AddNeed = props => {\n  const classes = useStyles()\n  const {setContext} = useContext(Context)\n  const theme = useTheme()\n  const history = useHistory()\n  const isMobileDisplay = useMediaQuery(theme.breakpoints.down('sm'))\n  const [pageLoading, setPageLoading] = useState(true)\n  const [loading, setLoading] = useState(false)\n  const [needCategories, setNeedCategories] = useState(true)\n  const [disasterCategories, setDisasterCategories] = useState(true)\n  const [expanded, setExpanded] = React.useState('panel0')\n  const [openList, setOpenList] = useState(emptyOpenList)\n  const [isSearchMode, setIsSearchMode] = useState(false)\n  const [search, setSearch] = useState('')\n  const [need: NeedType[], setNeed] = useState([emptyNeed])\n  const [needError: NeedType[], setNeedError] = useState([emptyNeed])\n  const [disaster, setDisaster] = useState(false)\n  const [disasterError, setDisasterError] = useState(false)\n  const [showReceipt, setShowReceipt] = useState(false)\n  const [showRecentRequests, setShowRecentRequests] = useState(null)\n  const [recentRequests, setRecentRequests] = useState(null)\n  const [preSelected, setPreSelected] = useState(null)\n  const [trigger, setTrigger] = useState(false)\n\n  const {open, message, type, duration, closeAlert, showAlert} = useAlert()\n  const {latitude, longitude} = usePosition(get_user_info().allow_location);\n\n  const getData = () => {\n    api.get(rest.getNeeds)\n        .then((res) => {\n          setNeedCategories(res.data.needsCategory)\n          setDisasterCategories(res.data.DisasterCategory)\n        })\n        .catch((err) => {\n          showAlert(err.response?.data?.error, \"error\", 3000);\n        })\n        .finally(() => setPageLoading(false))\n  }\n\n  useEffect(() => {\n    if (props.coords?.latitude\n        && props.coords?.longitude\n        && recentRequests === null\n        && typeof needCategories !== \"object\") {\n      api.get(`${rest.recent}/${props.coords?.latitude}/${props.coords?.longitude}`)\n          .then(res => {\n            setShowRecentRequests(res.data.status)\n            if (res.data.status) {\n              setRecentRequests(res.data.result)\n            } else {\n              setRecentRequests(null)\n            }\n            setPageLoading(false)\n          })\n          .catch((err) => {\n            showAlert(err.response.data.error, \"error\", 3000);\n          })\n    }\n  }, [props.coords?.latitude, props.coords?.longitude])\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setTrigger(true)\n    }, 5000)\n\n    return () => clearTimeout(timeout)\n  }, [])\n\n  useEffect(() => {\n    if (trigger && !(props.coords?.latitude && props.coords?.longitude && recentRequests === null)) {\n      getData()\n    }\n  }, [trigger])\n\n  useEffect(() => {\n    if (showRecentRequests === false) {\n      setPageLoading(true)\n      getData()\n    }\n  }, [showRecentRequests])\n\n  useEffect(() => {\n    if (typeof needCategories === \"object\" && typeof disasterCategories === \"object\" && preSelected) {\n      selectNeed(0, preSelected[0], preSelected[1])()\n      handleDisaster(preSelected[2])()\n    }\n  }, [needCategories, disasterCategories])\n\n  // useEffect(() => {\n  //   console.log(1)\n  //   api.get(rest.getNeeds)\n  //       .then((res) => {\n  //         setNeedCategories(res.data.needsCategory)\n  //         setDisasterCategories(res.data.DisasterCategory)\n  //       })\n  //       .catch((err) => {\n  //         showAlert(err.response.data.error, \"error\", 3000);\n  //       })\n  //       .finally(() => setPageLoading(false))\n  // }, [])\n\n  useEffect(() => {\n    setContext(showReceipt ? 'تأیید اطلاعات' : 'ثبت نیاز')\n  }, [setContext, showReceipt])\n\n  const handleOpenList = (e, name) => {\n    setOpenList({\n      ...openList,\n      [name]: !openList[name],\n    })\n  };\n\n  const handleExpand = panel => (event, newExpanded) => {\n    setExpanded(newExpanded ? panel : false);\n  };\n\n  const handleDisaster = dis => () => {\n    setDisaster(disaster === dis ? false : dis)\n    setDisasterError(false)\n  };\n\n  const handleShowReceipt = () => {\n    if (checkError()) {\n      showAlert(messages.ERR_EMPTY_NEED, \"error\", 3000)\n      return\n    }\n    setShowReceipt(!showReceipt)\n  }\n\n  const addRequest = () => {\n    setNeed([...need, emptyNeed])\n    setNeedError([...needError, emptyNeed])\n    setExpanded('panel' + need.length)\n  }\n\n  const deleteRequest = index => () => {\n    setNeed([\n      ...need.slice(0, index),\n      ...need.slice(index + 1),\n    ])\n    setNeedError([\n      ...needError.slice(0, index),\n      ...needError.slice(index + 1),\n    ])\n    setExpanded(expanded && expanded.slice(5) !== \"0\" ? 'panel' + (parseInt(expanded.slice(5)) - 1) : false)\n  }\n\n  const selectNeed = (index, i, j) => () => {\n    setNeed([\n      ...need.slice(0, index),\n      {...need[index], category: i, title: j},\n      ...need.slice(index + 1),\n    ])\n    setNeedError([\n      ...needError.slice(0, index),\n      emptyNeed,\n      ...needError.slice(index + 1),\n    ])\n    setOpenList(emptyOpenList)\n    setSearch('')\n    setIsSearchMode(false)\n  }\n\n  const setNeedInfo = index => e => {\n    setNeed([\n      ...need.slice(0, index),\n      {...need[index], [e.target.name]: e.target.value},\n      ...need.slice(index + 1),\n    ])\n    setNeedError([\n      ...needError.slice(0, index),\n      emptyNeed,\n      ...needError.slice(index + 1),\n    ])\n  }\n\n  const setNeedAmountBtn = (index, val) => () => {\n    const tempAmount = parseInt(need[index].amount) ? parseInt(need[index].amount) : 0\n\n    setNeed([\n      ...need.slice(0, index),\n      {...need[index], amount: (tempAmount + val >= 0 ? tempAmount + val : 0).toString()},\n      ...need.slice(index + 1),\n    ])\n    setNeedError([\n      ...needError.slice(0, index),\n      emptyNeed,\n      ...needError.slice(index + 1),\n    ])\n  }\n\n  const handleSliderChange = index => (event, newValue) => {\n    setNeed([\n      ...need.slice(0, index),\n      {...need[index], urgent: newValue},\n      ...need.slice(index + 1),\n    ])\n  }\n\n  const checkError = () => {\n    let errorState = []\n    let hasError = false\n\n    for (const n of need) {\n      hasError = hasError || n.amount === \"\" || parseInt(n.amount) <= 0 || n.title === \"\"\n      errorState.push({\n        ...(emptyNeed),\n        amount: n.amount === \"\" || parseInt(n.amount) <= 0,\n        title: n.title === \"\",\n      })\n    }\n    hasError = hasError || !disaster\n    if (!disaster) {\n      setDisasterError(true)\n    }\n\n    setNeedError(errorState)\n    return hasError\n  }\n\n  const submitNeed = () => {\n    setLoading(true)\n    const data = {\n      type: disaster,\n      lat: props.coords?.latitude || latitude,\n      long: props.coords?.longitude || longitude,\n      needs: need,\n    }\n    api.post(`${rest.request}/${get_user_info().id}`, data, config(\"json\"))\n        .then((res) => {\n          setLoading(false)\n          showAlert(res.data.msg, \"success\", 3000)\n          history.push(routes.DONE)\n        })\n        .catch((err) => {\n          showAlert(err.response.data.error, \"error\", 3000);\n        })\n        .finally(() => setLoading(false))\n  }\n\n  const toggleSearchMode = e => {\n    e.stopPropagation()\n    setIsSearchMode(!isSearchMode)\n    if (isSearchMode) {\n      setSearch('')\n    }\n  }\n\n  const searchNeed = e => {\n    setOpenList({...openList, menu: !!e.target.value.length})\n    setSearch(e.target.value)\n  }\n\n  const needItemForm = index => {\n    const marks = [\n      {\n        value: 1,\n        label: 'خیلی کم',\n      },\n      {\n        value: 2,\n        label: 'کم',\n      },\n      {\n        value: 3,\n        label: 'متوسط',\n      },\n      {\n        value: 4,\n        label: 'زیاد',\n      },\n      {\n        value: 5,\n        label: 'خیلی زیاد',\n      },\n    ];\n\n    return (\n        <Accordion className={classes.accordion} expanded={expanded === `panel${index}`}\n                   onChange={handleExpand(`panel${index}`)} key={index}>\n          <AccordionSummary\n              expandIcon={<ExpandMoreIcon/>}\n              className={classnames('header', {\"error\": needError[index].amount || needError[index].title})}\n          >\n            <span>\n              {need[index].title !== \"\"\n                  ? `درخواست برای ${needCategories[need[index].category.toString()].items[need[index].title.toString()]}`\n                  : need.length > 1\n                      ? `جزئیات درخواست ${index + 1}`\n                      : `جزئیات درخواست`}\n            </span>\n            {(needError[index].amount || needError[index].title) && <ErrorRoundedIcon/>}\n          </AccordionSummary>\n          <AccordionDetails className={\"details\"}>\n            {index !== 0 && <div className={classnames(classes.needPart, \"suggest\")}>\n              <Typography>شاید به این موارد هم نیاز داشته باشید:</Typography>\n              <CardSlider>\n                {[[1, 4], [1, 2], [2, 30], [3, 50], [5, 70]].map((x, k) => (\n                    <Card\n                        k={k}\n                        onClick={selectNeed(index, ...x)}\n                        selected={x[0] === need[index].category && x[1] === need[index].title}\n                    >\n                      <div className={classes.suggestionCard}>\n                        <Chip\n                            label={needCategories[x[0].toString()].faName}\n                            color={x[0] === need[index].category && x[1] === need[index].title ? \"secondary\" : \"primary\"}\n                            size={\"small\"}\n                            style={{fontSize: 10}}\n                        />\n                        <div className={\"text-center\"}>{needCategories[x[0].toString()].items[x[1].toString()]}</div>\n                      </div>\n                    </Card>\n                ))}\n              </CardSlider>\n            </div>}\n            <RTL>\n              <MuiThemeProvider theme={Theme}>\n                <div className={classes.needPart}>\n                  <div className={classes.headerAmount}>\n                    <Typography>چه نیازی دارید؟</Typography>\n                    <div>\n                      <div className=\"amountBtn\" onClick={setNeedAmountBtn(index, 1)}>+</div>\n                      <TextField\n                          placeholder={'تعداد'}\n                          type={\"number\"}\n                          variant={\"outlined\"}\n                          size={\"small\"}\n                          inputProps={{\n                            \"min\": 0\n                          }}\n                          name={'amount'}\n                          className={\"needAmount\"}\n                          value={need[index].amount || ''}\n                          onChange={setNeedInfo(index)}\n                          error={!!needError[index].amount}\n                      />\n                      <div className=\"amountBtn\" onClick={setNeedAmountBtn(index, -1)}>-</div>\n                    </div>\n                  </div>\n                  <caption style={{paddingTop: 0, display: 'flex',}}>\n                    <InfoRoundedIcon/>\n                    <span>چنانچه نیاز مورد نظر شما در موارد زیر نبود، گزینه‌ی «غیره» را انتخاب نموده در قسمت توضیحات نیاز خود را شرح دهید.</span>\n                  </caption>\n                  {need[index].category === '' || need[index].title === '' ? (\n                      <List\n                          disablePadding\n                          className={classnames(classes.list, {\"error\": needError[index].amount || needError[index].title})}\n                          subheader={\n                            <ListSubheader\n                                className={classnames('header', {\"error\": needError[index].amount || needError[index].title})}\n                                component=\"div\"\n                                id=\"nested-list-subheader\"\n                                onClick={e => handleOpenList(e, 'menu')}\n                            >\n                              {isSearchMode\n                                  ? <TextField\n                                      style={{width: 150}}\n                                      size={\"small\"}\n                                      value={search}\n                                      onChange={searchNeed}\n                                      placeholder={\"عنوان نیاز\"}\n                                      onClick={e => e.stopPropagation()}\n                                      autoFocus\n                                  />\n                                  : <span>دسته‌بندی نیازمندی‌ها</span>}\n                              <div>\n                                <IconButton color={\"inherit\"} className={\"\"} onClick={toggleSearchMode}>\n                                  {isSearchMode ? <CloseRoundedIcon/> : <SearchRoundedIcon/>}\n                                </IconButton>\n                                <IconButton edge={\"end\"} color={\"inherit\"}>\n                                  {openList.menu ? <ExpandLess/> : <ExpandMore/>}\n                                </IconButton>\n                              </div>\n                            </ListSubheader>\n                          }\n                      >\n                        <div className={classes.hideBorders}/>\n                        <Collapse in={openList.menu} timeout=\"auto\" unmountOnExit>\n                          {Object.values(needCategories).filter(val => {\n                            return Object.values(val.items).join().indexOf(search) >= 0\n                          }).map((n) => (\n                              <div key={n.enName}>\n                                <ListItem button onClick={e => handleOpenList(e, n.enName)}>\n                                  <ListItemText primary={n.faName}/>\n                                  {openList[n.enName] ? <ExpandLess/> : <ExpandMore/>}\n                                </ListItem>\n                                <Collapse in={openList[n.enName]} timeout=\"auto\" unmountOnExit>\n                                  <List component=\"div\" disablePadding>\n                                    {Object.keys(n.items).filter(value => {\n                                      return n.items[value].indexOf(search) >= 0\n                                    }).map((item, j) => (\n                                        <ListItem\n                                            className={classes.listItem}\n                                            key={j}\n                                            button\n                                            onClick={\n                                              selectNeed(index, Object.keys(needCategories).filter(t => needCategories[t] === n)[0], parseInt(item))\n                                            }\n                                        >\n                                          <ListItemIcon style={{minWidth: Theme.spacing(4)}}>\n                                            <span>{j + 1}</span>\n                                          </ListItemIcon>\n                                          <ListItemText\n                                              primary={n.items[item]}/>\n                                        </ListItem>\n                                    ))}\n                                  </List>\n                                </Collapse>\n                              </div>\n                          ))}\n                        </Collapse>\n                      </List>\n                  ) : (\n                      <div className={classes.selectedNeed}>\n                        <Chip color={\"primary\"} label={needCategories[need[index].category.toString()].faName}/>\n                        <span>{needCategories[need[index].category.toString()].items[need[index].title.toString()]}</span>\n                        <IconButton edge={\"end\"} color={\"inherit\"} onClick={selectNeed(index, '', '')}>\n                          <EditRoundedIcon/>\n                        </IconButton>\n                      </div>\n                  )}\n                </div>\n                <div className={classes.needPart}>\n                  <Typography>نیازتان چقدر ضروری است؟</Typography>\n                  <Slider\n                      min={1}\n                      max={5}\n                      step={1}\n                      marks={marks}\n                      defaultValue={1}\n                      name={'urgent'}\n                      value={need[index].urgent}\n                      onChange={handleSliderChange(index)}\n                  />\n                </div>\n                <div className={classes.needPart}>\n                  <Typography>آیا توضیح خاصی لازم است؟ (اختیاری)</Typography>\n                  <TextField\n                      multiline\n                      variant={\"filled\"}\n                      label={\"توضیحات\"}\n                      name={'desc'}\n                      value={need[index].desc}\n                      onChange={setNeedInfo(index)}\n                  />\n                </div>\n              </MuiThemeProvider>\n            </RTL>\n            {need.length > 1 && <div className={classnames(classes.needPart, \"deleteBtn\")}>\n              <Button variant={\"outlined\"} color={\"primary\"} size={\"small\"} onClick={deleteRequest(index)}>\n                حذف درخواست\n              </Button>\n            </div>}\n          </AccordionDetails>\n        </Accordion>\n    )\n  }\n\n  return pageLoading ? <Loader/> : (\n      showRecentRequests ? (\n          <RecentNeeds\n              requests={recentRequests}\n              select={(i, j, k) => setPreSelected([i, j, k])}\n              close={() => setShowRecentRequests(false)}\n          />\n      ) : (\n          <div className={classes.container}>\n            <Helmet><title>{showReceipt ? 'تأیید اطلاعات' : 'ثبت نیاز'}</title></Helmet>\n            <div className={classes.title}>\n              <Typography variant={\"h3\"}>{showReceipt ? 'تأیید اطلاعات' : 'ثبت نیاز'}</Typography>\n            </div>\n            <hr/>\n\n            <div className={classnames(classes.media, {\"receiptOnly\": showReceipt})}>\n              {!showReceipt && <div className={classes.form}>\n                <Typography color={disasterError ? \"error\" : \"inherit\"}>نوع حادثه را مشخص کنید</Typography>\n                <CardSlider>\n                  {Object.keys(disasterCategories).map((d, i) => (\n                      <Card\n                          k={i}\n                          icon={disasterIcons[d]}\n                          selected={disaster === d}\n                          onClick={handleDisaster(d)}\n                          error={disasterError}\n                      >\n                        <div>{disasterCategories[d]}</div>\n                      </Card>\n                  ))}\n                </CardSlider>\n\n                <Typography style={{marginTop: Theme.spacing(2)}} gutterBottom>درخواست‌های خود را با وارد کردن اطلاعات\n                  خواسته‌شده ثبت کنید</Typography>\n\n                {need.map((n, i) => needItemForm(i))}\n\n              </div>}\n              {(showReceipt || !isMobileDisplay) && <div className={classes.receipt}>\n                <Receipt\n                    disasterCategories={disasterCategories}\n                    needCategories={needCategories}\n                    receipts={need}\n                    type={disaster}\n                    current={expanded ? parseInt(expanded.slice(5)) : 0}\n                />\n                <div className={classes.desktopBtn}>\n                  <CustomButton variant={\"contained\"} onClick={showReceipt ? handleShowReceipt : addRequest}>\n                    {showReceipt ? 'ویرایش' : 'درخواست جدید'}\n                  </CustomButton>\n                  <CustomButton variant={\"contained\"} onClick={showReceipt ? submitNeed : handleShowReceipt}>\n                    {loading ? <CircularProgress size={26}/> : showReceipt ? 'تأیید و ثبت' : 'مرحله‌ی بعد'}\n                  </CustomButton>\n                </div>\n              </div>}\n            </div>\n\n            {isMobileDisplay && <Fab buttons={[\n              {\n                title: showReceipt ? 'ویرایش' : 'درخواست جدید',\n                onClickFn: showReceipt ? handleShowReceipt : addRequest,\n              },\n              {\n                loading: loading,\n                title: showReceipt ? 'تأیید و ثبت' : 'مرحله‌ی بعد',\n                onClickFn: showReceipt ? submitNeed : handleShowReceipt,\n              },\n            ]}/>}\n\n            <FloatingAlert text={message} open={open} handleClose={closeAlert} duration={duration} type={type}/>\n          </div>\n      )\n  );\n};\n\nAddNeed.propTypes = {};\n\nexport default geolocated({\n  positionOptions: {\n    enableHighAccuracy: false,\n  },\n  userDecisionTimeout: 5000,\n})(AddNeed);","/home/pmoghadam/WebstormProjects/crisis-management-system/src/assets/categories.js",[],["334","335"],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/types/needType.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/assets/icons/iconComponents/FloodIcon.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/assets/icons/iconComponents/FireIcon.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/assets/icons/iconComponents/EarthquakeIcon.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/assets/icons/iconComponents/AvalancheIcon.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/assets/icons/iconComponents/TwisterIcon.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/assets/icons/iconComponents/LandslideIcon.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/Receipt.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/Done.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/hooks/useAlert.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/FloatingAlert.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/Loader.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/Popup.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/Context.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/table/DataTable.js",["336"],"import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport DataTableRow from \"./DataTableRow\";\nimport DataTableHead from \"./DataTableHead\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport AdminDataTableRow from \"./AdminDataTableRow\";\n\n\nconst columns = [\n  {id: 'name', numeric: false, disablePadding: false, label: 'عنوان نیاز'},\n  {id: 'amount', numeric: true, disablePadding: false, label: 'تعداد'},\n  {id: 'urgent', numeric: true, disablePadding: false, label: 'ضروری'},\n  {id: 'askDate', numeric: false, disablePadding: false, label: 'تاریخ درخواست'},\n  {id: 'changeDate', numeric: false, disablePadding: false, label: 'آخرین بروزرسانی'},\n  {id: 'helpDate', numeric: false, disablePadding: false, label: 'تاریخ امدادرسانی'},\n  {id: 'status', numeric: false, disablePadding: false, label: 'وضعیت'},\n  {id: 'type', numeric: false, disablePadding: false, label: 'نوع حادثه'},\n  {id: 'desc', numeric: false, disablePadding: false, label: 'توضیحات'},\n];\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    direction: \"rtl\",\n    marginBottom: theme.spacing(2),\n    backgroundColor: theme.palette.secondary.light,\n  },\n  table: {\n    minWidth: 750,\n  },\n  footer: {\n    '& > div': {\n      display: \"flex\",\n      padding: theme.spacing(0, 2),\n      '& > *': {\n        flex: \"unset\",\n        '&:nth-child(3)': {\n          margin: theme.spacing(0, 1, 0, 2),\n        },\n        '&:last-child': {\n          marginRight: \"auto\",\n          marginLeft: 0,\n        },\n      },\n    },\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nconst descendingComparator = (a, b, orderBy) => {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n};\n\nconst getComparator = (order, orderBy) => order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n\nconst stableSort = (array, comparator) => {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) {\n      return order;\n    }\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n};\n\nconst DataTable = props => {\n  const classes = useStyles();\n  const [order, setOrder] = useState('asc');\n  const [orderBy, setOrderBy] = useState('');\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(order === 'desc' && orderBy === property ? '' : property);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    if (props.isAdmin) {\n      props.getNewResults(newPage, props.limit)\n    } else {\n      setPage(newPage);\n    }\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    if (props.isAdmin) {\n      props.getNewResults(0, parseInt(event.target.value, 10))\n    } else {\n      setRowsPerPage(parseInt(event.target.value, 10));\n      setPage(0);\n    }\n  };\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.rows.length - page * rowsPerPage);\n  const rowsArray = props.isAdmin\n      ? stableSort(props.rows, getComparator(order, orderBy))\n      : stableSort(props.rows, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n\n  return (\n      <div className={classes.root}>\n        <Paper className={classes.paper}>\n          <Toolbar>\n            <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n              {props.title}\n            </Typography>\n          </Toolbar>\n          <TableContainer>\n            <Table\n                className={classes.table}\n                aria-labelledby=\"tableTitle\"\n                size={'medium'}\n                aria-label=\"enhanced table\"\n            >\n              <DataTableHead\n                  columns={props.columns}\n                  classes={classes}\n                  order={order}\n                  orderBy={orderBy}\n                  onRequestSort={handleRequestSort}\n                  rowCount={props.rows.length}\n              />\n              <TableBody>\n                {props.loading ? <CircularProgress size={26}/> : rowsArray.map((row, i) => props.isAdmin\n                    ? <AdminDataTableRow key={i} row={row} loading={props.rowLoading[i]}\n                                         statusFn={x => props.statusFn(i, x, row.id)}/>\n                    : <DataTableRow key={i} row={row}/>)}\n                {props.showEmptyRows && emptyRows > 0 && (\n                    <TableRow style={{height: 53 * emptyRows}}>\n                      <TableCell colSpan={6}/>\n                    </TableRow>\n                )}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <TablePagination\n              rowsPerPageOptions={[10, 25, 50]}\n              component=\"div\"\n              count={props.isAdmin ? props.total : props.rows.length}\n              rowsPerPage={props.isAdmin ? props.limit : rowsPerPage}\n              labelDisplayedRows={({from, to, count}) => `[${from} تا ${to}] از ${count}`}\n              labelRowsPerPage={'تعداد:'}\n              page={props.isAdmin ? props.page : page}\n              onChangePage={handleChangePage}\n              onChangeRowsPerPage={handleChangeRowsPerPage}\n              className={classes.footer}\n          />\n        </Paper>\n      </div>\n  );\n};\n\nDataTable.propTypes = {\n  title: PropTypes.string,\n  showEmptyRows: PropTypes.bool,\n  isAdmin: PropTypes.bool,\n  columns: PropTypes.array,\n  rows: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    amount: PropTypes.number.isRequired,\n    urgent: PropTypes.string.isRequired,\n    askDate: PropTypes.string.isRequired,\n    changeDate: PropTypes.string,\n    helpDate: PropTypes.string,\n    type: PropTypes.string,\n    status: PropTypes.string.isRequired,\n    desc: PropTypes.string.isRequired,\n    info: PropTypes.shape({\n      address: PropTypes.string.isRequired,\n      location: PropTypes.shape({\n        lat: PropTypes.string,\n        long: PropTypes.string,\n      }),\n    }).isRequired,\n  })).isRequired,\n  statusFn: PropTypes.func,\n  getNewResults: PropTypes.func,\n  loading: PropTypes.bool,\n  rowLoading: PropTypes.bool,\n  total: PropTypes.number,\n  limit: PropTypes.number,\n  page: PropTypes.number,\n}\n\nDataTable.defaultProps = {\n  columns: columns,\n}\n\nexport default DataTable;","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/table/DataTableHead.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/table/DataTableRow.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/NotFound.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/serviceWorker.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/Footer.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/helpers/api.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/helpers/PrivateRoute.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/AccessDenied.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/AdminPanel.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/RecentNeeds.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/admin/Dashboard.js",["337"],"import React, { useEffect, useState } from 'react';\nimport { api, config, rest } from \"../../helpers/api\";\nimport { useAlert } from \"../../hooks/useAlert\";\nimport FloatingAlert from \"../common/FloatingAlert\";\nimport Loader from \"../common/Loader\";\nimport { makeStyles, Typography } from \"@material-ui/core\";\nimport CardSlider from \"../card/CardSlider\";\nimport DataChart from \"../common/DataChart\";\nimport classnames from 'classnames';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  top: {\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n  bottom: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    flexWrap: \"wrap\",\n\n    [theme.breakpoints.down('sm')]: {\n      flexDirection: \"column\",\n    },\n  },\n  numbers: {\n    background: theme.palette.common.white,\n    padding: theme.spacing(3, 2),\n    boxShadow: \"0 0 8px 1px #00000052\",\n    borderRadius: theme.spacing(.5),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    margin: theme.spacing(1),\n    width: \"calc(100% / 5)\",\n    minWidth: theme.spacing(18.75),\n\n    '&:first-child': {\n      marginRight: theme.spacing(.5),\n    },\n\n    '&:last-child': {\n      marginLeft: theme.spacing(.5),\n    },\n  },\n  number: {\n    fontSize: theme.spacing(6),\n    color: theme.palette.primary.light,\n  },\n  title: {\n    textAlign: \"center\",\n  },\n  chart: {\n    background: theme.palette.common.white,\n    padding: theme.spacing(1),\n    boxShadow: \"0 0 8px 1px #00000052\",\n    borderRadius: theme.spacing(.5),\n    display: \"flex\",\n    flexDirection: \"column\",\n    // alignItems: \"center\",\n    margin: theme.spacing(1, 0),\n    width: \"calc(50% - 8px)\",\n    // minWidth: theme.spacing(18.75),\n\n    '& $title': {\n      margin: theme.spacing(-1, -1, 1),\n      borderRadius: theme.spacing(.5, .5, 0, 0),\n      padding: theme.spacing(.5),\n      backgroundColor: theme.palette.info.main,\n    },\n\n    [theme.breakpoints.down('sm')]: {\n      width: \"100%\",\n    },\n  },\n  flex1: {\n    flex: 1,\n    width: '100%',\n  }\n}));\n\nconst Dashboard = () => {\n  const classes = useStyles()\n  const {open, message, type, duration, closeAlert, showAlert} = useAlert();\n\n  const [data, setData] = useState({})\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    api.get(rest.admin.dashboard, config(\"json\"))\n        .then((response) => {\n          setData(response.data)\n        })\n        .catch((err) => {\n          showAlert(err.response.data.error, \"error\", 3000);\n        })\n        .finally(() => setLoading(false))\n  }, [])\n\n  return (\n      loading ? <Loader/> : <div className={classes.container}>\n        <div className={classes.top}>\n          <CardSlider>\n            <div className={classes.numbers}>\n              <Typography className={classes.number}>{data.users}</Typography>\n              <Typography className={classes.title}>کل کاربران</Typography>\n            </div>\n            <div className={classes.numbers}>\n              <Typography className={classes.number}>{data.requests?.total}</Typography>\n              <Typography className={classes.title}>کل درخواست‌ها</Typography>\n            </div>\n            <div className={classes.numbers}>\n              <Typography className={classes.number}>{data.recent_requests}</Typography>\n              <Typography className={classes.title}>درخواست‌های ۲۴ ساعت اخیر</Typography>\n            </div>\n            <div className={classes.numbers}>\n              <Typography className={classes.number}>{data.recent_disasters?.total}</Typography>\n              <Typography className={classes.title}>حوادث ۳۰ روز اخیر</Typography>\n            </div>\n            <div className={classes.numbers}>\n              <Typography className={classes.number}>{data.processed_requests}</Typography>\n              <Typography className={classes.title}>کل درخواست‌های پردازش‌شده</Typography>\n            </div>\n          </CardSlider>\n        </div>\n        <div className={classes.bottom}>\n          <div className={classes.chart}>\n            <Typography className={classes.title}>پراکندگی دسته‌بندی‌های درخواست‌ها</Typography>\n            <DataChart type={\"pie\"} data={data.requests?.data} label={'تعداد درخواست‌ها'}/>\n          </div>\n          <div className={classes.chart}>\n            <Typography className={classes.title}>درخواست‌های دریافت‌شده به تفکیک حادثه</Typography>\n            <DataChart type={\"bar\"} data={data.recent_disasters?.data} label={'تعداد درخواست‌ها'}/>\n          </div>\n          <div className={classnames(classes.chart, classes.flex1)}>\n            <Typography className={classes.title}>تعداد نیازهای درخواست‌شده</Typography>\n            <DataChart type={\"bar\"} data={data.needs_amount} label={'تعداد درخواست‌ها'}/>\n          </div>\n        </div>\n\n        <FloatingAlert text={message} open={open} handleClose={closeAlert} duration={duration} type={type}/>\n      </div>\n  );\n};\n\nDashboard.propTypes = {};\n\nexport default Dashboard;","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/DataChart.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/admin/Users.js",["338","339","340","341","342","343","344","345","346","347"],"import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { api, config, rest } from \"../../helpers/api\";\nimport { useAlert } from \"../../hooks/useAlert\";\nimport FloatingAlert from \"../common/FloatingAlert\";\nimport Loader from \"../common/Loader\";\nimport {\n  Collapse,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  ListSubheader,\n  makeStyles,\n  Typography\n} from \"@material-ui/core\";\nimport { ExpandLess, ExpandMore, AccountBoxRounded } from \"@material-ui/icons\";\nimport UserListRow from \"../common/UserListRow\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '70%',\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: \"0 0 8px 1px #00000052\",\n\n    [theme.breakpoints.down('sm')]: {\n      width: '100%',\n    },\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n}));\n\nconst Users = props => {\n  const classes = useStyles()\n  const {open, message, type, duration, closeAlert, showAlert} = useAlert();\n\n  const [userOpen, setUserOpen] = React.useState([])\n  const [data, setData] = useState([])\n  const [loading, setLoading] = useState(true)\n  const [deleteLoading, setDeleteLoading] = useState([])\n  const [adminLoading, setAdminLoading] = useState([])\n\n  useEffect(() => {\n    api.get(rest.admin.users, config(\"json\"))\n      .then((response) => {\n        setData(response.data)\n        setUserOpen(new Array(response.data.length).fill(false))\n        setDeleteLoading(new Array(response.data.length).fill(false))\n        setAdminLoading(new Array(response.data.length).fill(false))\n      })\n      .catch((err) => {\n        showAlert(err.response.data.error, \"error\", 3000);\n      })\n      .finally(() => setLoading(false))\n  }, [])\n\n  const handleClick = i => () => {\n    setUserOpen([\n      ...userOpen.slice(0, i).fill(false),\n      !userOpen[i],\n      ...userOpen.slice(i + 1).fill(false),\n    ]);\n  };\n\n  const handleDelete = (i, id) => () => {\n    setDeleteLoading([\n      ...deleteLoading.slice(0, i),\n      true,\n      ...deleteLoading.slice(i + 1),\n    ])\n    api.delete(`${rest.admin.user}/${id}`, config(\"json\"))\n      .then((response) => {\n        showAlert(response.data.msg, \"success\", 3000);\n        setData([\n          ...data.slice(0, i),\n          ...data.slice(i + 1),\n        ])\n        setUserOpen([\n          ...userOpen.slice(0, i),\n          ...userOpen.slice(i + 1),\n        ]);\n      })\n      .catch((err) => {\n        showAlert(err.response.data.error, \"error\", 3000);\n      })\n      .finally(() => setDeleteLoading([\n        ...deleteLoading.slice(0, i),\n        false,\n        ...deleteLoading.slice(i + 1),\n      ]))\n  }\n\n  const handleAdmin = (i, id) => () => {\n    setAdminLoading([\n      ...adminLoading.slice(0, i),\n      true,\n      ...adminLoading.slice(i + 1),\n    ])\n    api.patch(`${rest.admin.user}/${id}`, {}, config(\"json\"))\n      .then((response) => {\n        setData(response.data.result)\n        showAlert(response.data.msg, \"success\", 3000)\n      })\n      .catch((err) => {\n        showAlert(err.response.data.error, \"error\", 3000)\n      })\n      .finally(() => setAdminLoading([\n        ...adminLoading.slice(0, i),\n        false,\n        ...adminLoading.slice(i + 1),\n      ]))\n  }\n\n  return (\n    loading ? <Loader/> : <div className={classes.container}>\n      <List\n        component=\"nav\"\n        aria-labelledby=\"nested-list-subheader\"\n        subheader={\n          <ListSubheader component=\"div\" id=\"nested-list-subheader\">\n            لیست کاربران\n          </ListSubheader>\n        }\n        className={classes.root}\n      >\n        {data.map((user, i) => <UserListRow\n          key={i}\n          open={userOpen[i]}\n          userId={user.id}\n          title={user.fullname}\n          items={user.data}\n          handleClick={handleClick(i)}\n          handleDelete={id => handleDelete(i, id)()}\n          handleAdmin={id => handleAdmin(i, id)()}\n          loading={[deleteLoading[i], adminLoading[i]]}\n        />)}\n      </List>\n\n      <FloatingAlert text={message} open={open} handleClose={closeAlert} duration={duration} type={type}/>\n    </div>\n  );\n};\n\nUsers.propTypes = {};\n\nexport default Users;","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/admin/Requests.js",["348","349","350","351"],"import React, { useEffect, useState } from 'react';\nimport DataTable from \"../table/DataTable\";\nimport FloatingAlert from \"../common/FloatingAlert\";\nimport { useAlert } from \"../../hooks/useAlert\";\nimport { api, config, rest } from \"../../helpers/api\";\n\nconst columns = [\n  {id: 'name', numeric: false, disablePadding: false, label: 'عنوان نیاز'},\n  {id: 'amount', numeric: true, disablePadding: false, label: 'تعداد'},\n  {id: 'urgent', numeric: true, disablePadding: false, label: 'ضروری'},\n  {id: 'askDate', numeric: false, disablePadding: false, label: 'تاریخ درخواست'},\n  {id: 'changeDate', numeric: false, disablePadding: false, label: 'آخرین بروزرسانی'},\n  {id: 'helpDate', numeric: false, disablePadding: false, label: 'تاریخ امدادرسانی'},\n  {id: 'status', numeric: false, disablePadding: false, label: 'وضعیت'},\n  {id: 'type', numeric: false, disablePadding: false, label: 'نوع حادثه'},\n  {id: 'desc', numeric: false, disablePadding: false, label: 'توضیحات'},\n  {id: 'actions', numeric: false, disablePadding: false, label: 'عملیات'},\n];\n\nconst Requests = () => {\n  const {open, message, type, duration, closeAlert, showAlert} = useAlert();\n\n  const [loading, setLoading] = useState(true)\n  const [rowLoading, setRowLoading] = useState([])\n  const [data, setData] = useState([])\n  const [total, setTotal] = useState(0)\n  const [page, setPage] = useState(0)\n  const [limit, setLimit] = useState(10)\n\n  useEffect(() => {\n    setLoading(true)\n    api.get(rest.admin.requests, config(\"json\", {page, limit}))\n      .then((response) => {\n        setData(response.data.data)\n        setTotal(response.data.total)\n        setRowLoading(new Array(response.data.data.length).fill(false))\n      })\n      .catch((err) => {\n        showAlert(err.response.data.error, \"error\", 3000);\n      })\n      .finally(() => setLoading(false))\n  }, [page, limit])\n\n  const changeStatus = (k, i, id) => {\n    setRowLoading([\n      ...rowLoading.slice(0, k),\n      true,\n      ...rowLoading.slice(k + 1),\n    ])\n    api.patch(`${rest.admin.request}/${id}`, {status: i}, config(\"json\", {page, limit}))\n      .then((response) => {\n        setData(response.data.data)\n        setTotal(response.data.total)\n        showAlert(response.data.msg, \"success\", 3000);\n      })\n      .catch((err) => {\n        showAlert(err.response.data.error, \"error\", 3000);\n      })\n      .finally(() => setRowLoading([\n        ...rowLoading.slice(0, k),\n        false,\n        ...rowLoading.slice(k + 1),\n      ]))\n  }\n\n  const getNewResults = (p, l) => {\n    setPage(p)\n    setLimit(l)\n  }\n\n  return (\n    <div>\n      <DataTable\n        title={'وضعیت درخواست‌ها'}\n        rows={data}\n        loading={loading}\n        rowLoading={rowLoading}\n        columns={columns}\n        isAdmin\n        statusFn={changeStatus}\n        total={total}\n        limit={limit}\n        page={page}\n        getNewResults={getNewResults}\n      />\n\n      <FloatingAlert text={message} open={open} handleClose={closeAlert} duration={duration} type={type}/>\n    </div>\n  );\n};\n\nRequests.propTypes = {};\n\nexport default Requests;","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/table/AdminDataTableRow.js",["352","353"],"import { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport HelpOutlineRoundedIcon from '@material-ui/icons/HelpOutlineRounded';\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport PropTypes from \"prop-types\";\nimport {\n  CircularProgress,\n  ClickAwayListener,\n  MenuItem,\n  Select,\n  Tooltip,\n  useMediaQuery,\n  useTheme,\n  withStyles\n} from \"@material-ui/core\";\n\nconst useRowStyles = makeStyles((theme) => ({\n  root: {\n    borderBottom: 'unset',\n  },\n  desc: {\n    whiteSpace: \"nowrap\",\n    maxWidth: theme.spacing(5),\n    textOverflow: \"ellipsis\",\n    overflow: \"hidden\"\n  },\n  tooltip: {\n    // maxWidth: theme.spacing(25),\n  },\n  deleteIcon: {\n    color: theme.palette.error.main,\n  },\n  actions: {\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  select: {\n    width: theme.spacing(20),\n\n    '& > div': {\n      padding: theme.spacing(1, 4, 1, 2)\n    },\n  },\n  row: {\n    backgroundColor: props => props === 2\n        ? theme.palette.error.light\n        : (props === 6\n            ? theme.palette.info.light\n            : 'inherit')\n  },\n}));\n\nconst CustomTooltip = withStyles((theme) => ({\n  tooltip: {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.primary.contrastText,\n    boxShadow: theme.shadows[1],\n    fontSize: theme.spacing(1.75),\n    lineHeight: theme.spacing(0.2),\n  },\n}))(Tooltip);\n\nconst AdminDataTableRow = props => {\n  const {row} = props;\n  const [open, setOpen] = React.useState(false);\n  const [openTooltip, setOpenTooltip] = React.useState(false);\n  const theme = useTheme()\n  const classes = useRowStyles(row.status?.id);\n  const isMobileDisplay = useMediaQuery(theme.breakpoints.down('sm'))\n\n  const handleTooltipClose = () => {\n    setOpenTooltip(false);\n  };\n\n  const handleTooltipOpen = () => {\n    setOpenTooltip(true);\n  };\n\n  return (\n      <React.Fragment>\n        <TableRow className={classes.row}>\n          <TableCell>\n            <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\n              {open ? <KeyboardArrowUpIcon/> : <KeyboardArrowDownIcon/>}\n            </IconButton>\n          </TableCell>\n          <TableCell align=\"right\" component=\"th\" scope=\"row\">\n            {row.name}\n          </TableCell>\n          <TableCell align=\"right\">{row.amount || '-'}</TableCell>\n          <TableCell align=\"right\">{row.urgent || '-'}</TableCell>\n          <TableCell align=\"right\">{row.askDate || '-'}</TableCell>\n          <TableCell align=\"right\">{row.changeDate || '-'}</TableCell>\n          <TableCell align=\"right\">{row.helpDate || '-'}</TableCell>\n          <TableCell align=\"right\">{row.status?.text || '-'}</TableCell>\n          <TableCell align=\"right\">{row.type || '-'}</TableCell>\n          {row.desc ? <ClickAwayListener onClickAway={handleTooltipClose}>\n            <CustomTooltip\n                // PopperProps={{disablePortal: false}}\n                disableFocusListener={isMobileDisplay}\n                disableHoverListener={isMobileDisplay}\n                // disableTouchListener\n                open={openTooltip}\n                onClose={handleTooltipClose}\n                title={row.desc}\n                placement=\"right\"\n                className={classes.tooltip}\n                classes={{tooltip: classes.tooltip}}\n            >\n              <TableCell className={classes.desc} onClick={handleTooltipOpen} align=\"center\">\n                <HelpOutlineRoundedIcon/>\n              </TableCell>\n            </CustomTooltip>\n          </ClickAwayListener> : <TableCell align=\"center\">-</TableCell>}\n          <TableCell align=\"right\">\n            <div className={classes.actions}>\n              {props.loading ? <CircularProgress/> :\n                  <Select\n                      variant={\"outlined\"}\n                      className={classes.select}\n                      disabled={row.status?.id === 6}\n                      color={\"primary\"}\n                      value={row.status?.id}\n                      onChange={e => props.statusFn(e.target.value)}\n                      inputProps={{\n                        name: 'age',\n                        id: 'outlined-age-native-simple',\n                      }}\n                  >\n                    <MenuItem value={0}>در انتظار تأیید</MenuItem>\n                    <MenuItem value={1}>تأیید شده</MenuItem>\n                    <MenuItem value={2}>رد شده</MenuItem>\n                    <MenuItem value={3}>در حال ارسال</MenuItem>\n                    <MenuItem value={4}>در حال آماده‌سازی</MenuItem>\n                    <MenuItem value={5}>ارسال شده</MenuItem>\n                    <MenuItem value={6}>دریافت شده</MenuItem>\n                  </Select>}\n            </div>\n          </TableCell>\n        </TableRow>\n        <TableRow>\n          <TableCell className={classes.root} style={{paddingBottom: 0, paddingTop: 0}} colSpan={8}>\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\n              <Box margin={1}>\n                <Typography variant=\"h6\" gutterBottom component=\"div\">\n                  اطلاعات ارسال\n                </Typography>\n                <Table size=\"small\" aria-label=\"purchases\">\n                  <TableHead>\n                    <TableRow>\n                      <TableCell align={\"right\"}>درخواست‌دهنده</TableCell>\n                      <TableCell align={\"right\"}>آدرس</TableCell>\n                      <TableCell align={\"right\"}>موقعیت مکانی</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    <TableRow className={classes.root}>\n                      <TableCell align=\"right\">{row.user_info.fullname}</TableCell>\n                      <TableCell align=\"right\" component=\"th\" scope=\"row\">\n                        {row.user_info.address}\n                      </TableCell>\n                      <TableCell align=\"right\">[{row.user_info.location.lat}, {row.user_info.location.long}]</TableCell>\n                    </TableRow>\n                  </TableBody>\n                </Table>\n              </Box>\n            </Collapse>\n          </TableCell>\n        </TableRow>\n      </React.Fragment>\n  );\n};\n\nAdminDataTableRow.propTypes = {\n  k: PropTypes.any,\n  row: PropTypes.object.isRequired,\n  statusFn: PropTypes.func,\n  deleteFn: PropTypes.func,\n  loading: PropTypes.bool,\n};\n\nexport default AdminDataTableRow;","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/admin/Needs.js",["354","355","356","357","358","359"],"import React, { useEffect, useState } from 'react';\nimport Loader from \"../common/Loader\";\nimport {\n  Button,\n  CircularProgress,\n  List,\n  ListSubheader,\n  makeStyles,\n  MenuItem,\n  MuiThemeProvider,\n  TextField\n} from \"@material-ui/core\";\nimport FloatingAlert from \"../common/FloatingAlert\";\nimport { useAlert } from \"../../hooks/useAlert\";\nimport { api, config, rest } from \"../../helpers/api\";\nimport NeedListRow from \"../common/NeedListRow\";\nimport Theme from \"../../helpers/Theme\";\nimport RTL from \"../../helpers/RTL\";\nimport Popup from \"../common/Popup\";\nimport { messages } from \"../../assets/messages\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '70%',\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: \"0 0 8px 1px #00000052\",\n\n    [theme.breakpoints.down('sm')]: {\n      width: '100%',\n    },\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  subheader: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  form: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  formInput: {\n    marginTop: theme.spacing(2)\n  },\n}));\n\nconst Needs = () => {\n  const classes = useStyles()\n  const {open, message, type, duration, closeAlert, showAlert} = useAlert()\n\n  const [categoryOpen, setCategoryOpen] = React.useState([])\n  const [data, setData] = useState({})\n  const [loading, setLoading] = useState(true)\n  const [needLoading, setNeedLoading] = useState(null)\n  const [addLoading, setAddLoading] = useState(null)\n  const [needEdit, setNeedEdit] = useState(null)\n  const [needEditValue, setNeedEditValue] = useState(null)\n  const [dialogOpen, setDialogOpen] = useState(false)\n  const [newCategory, setNewCategory] = useState(null)\n  const [newTitle, setNewTitle] = useState(null)\n  const [error, setError] = useState({title: null, category: null})\n\n  useEffect(() => {\n    api.get(rest.getNeeds, config(\"json\"))\n      .then((response) => {\n        setData(response.data.needsCategory)\n        setCategoryOpen(new Array(Object.keys(response.data.needsCategory).length).fill(false))\n      })\n      .catch((err) => {\n        showAlert(err.response.data.error, \"error\", 3000);\n      })\n      .finally(() => setLoading(false))\n  }, [])\n\n  const handleDialogClose = () => {\n    setDialogOpen(false);\n  };\n\n  const handleDialogOpen = () => {\n    setDialogOpen(true);\n  };\n\n  const handleDialogConfirm = () => {\n    if (error.title || error.category) {\n      showAlert(messages.ERR_EMPTY_NEED, \"error\", 3000);\n      return\n    }\n\n    setAddLoading(true)\n    api.post(rest.admin.need, {title: newTitle, category_id: newCategory}, config(\"json\"))\n      .then((response) => {\n        showAlert(response.data.msg, \"success\", 3000);\n        setData(response.data.needsCategory)\n        handleDialogClose()\n        setNewCategory(null)\n        setNewTitle(null)\n      })\n      .catch((err) => {\n        showAlert(err.response.data.error, \"error\", 3000);\n      })\n      .finally(() => {\n        setAddLoading(false)\n      })\n  };\n\n  const checkError = () => {\n    setError({\n      title: newTitle === \"\" ? messages.ERR_EMPTY : null,\n      category: (newCategory === \"\" || newCategory === null) ? messages.ERR_EMPTY : null,\n    })\n  };\n\n  useEffect(checkError, [newCategory, newTitle])\n\n  const handleClick = i => () => {\n    setCategoryOpen([\n      ...categoryOpen.slice(0, i).fill(false),\n      !categoryOpen[i],\n      ...categoryOpen.slice(i + 1).fill(false),\n    ]);\n  };\n\n  const handleDelete = (categoryId, needId) => () => {\n    setNeedLoading(needId)\n    api.delete(`${rest.admin.need}/${needId}`, config(\"json\"))\n      .then((response) => {\n        showAlert(response.data.msg, \"success\", 3000);\n        let temp = data\n        delete temp[categoryId].items[needId]\n        setData(temp)\n      })\n      .catch((err) => {\n        showAlert(err.response.data.error, \"error\", 3000);\n      })\n      .finally(() => setNeedLoading(null))\n  }\n\n  const handleEdit = (needId) => () => {\n    // console.log(needId)\n    setNeedLoading(needId)\n    api.patch(`${rest.admin.need}/${needId}`, {title: needEditValue}, config(\"json\"))\n      .then((response) => {\n        showAlert(response.data.msg, \"success\", 3000);\n        setData(response.data.needsCategory)\n        setNeedEdit(null)\n      })\n      .catch((err) => {\n        showAlert(err.response.data.error, \"error\", 3000);\n      })\n      .finally(() => setNeedLoading(null))\n  }\n\n  const handleChange = e => {\n    console.log(e.target.value)\n    setNeedEditValue(e.target.value)\n  }\n\n  const toggleEditMode = needId => {\n    setNeedEdit(needId)\n  }\n\n  const addForm = (\n    <RTL>\n      <MuiThemeProvider theme={Theme}>\n        <div className={classes.form}>\n          <TextField\n            select\n            variant={\"filled\"}\n            className={classes.formInput}\n            label={\"دسته‌بندی\"}\n            value={newCategory}\n            onChange={e => setNewCategory(e.target.value)}\n            inputProps={{\n              name: 'category',\n              id: 'category',\n            }}\n            helperText={error.category}\n            error={!!error.category}\n          >\n            {Object.values(data).map((cat, i) => (\n              <MenuItem key={i} value={cat.id}>{cat.faName}</MenuItem>\n            ))}\n          </TextField>\n          <TextField\n            className={classes.formInput}\n            variant={\"filled\"}\n            type=\"text\"\n            id={'need'}\n            name={'need'}\n            label={'عنوان نیاز'}\n            value={newTitle}\n            onChange={e => setNewTitle(e.target.value)}\n            error={!!error.title}\n            helperText={error.title}\n          />\n        </div>\n      </MuiThemeProvider>\n    </RTL>\n  )\n\n  return (\n    loading ? <Loader/> : <div className={classes.container}>\n      <RTL>\n        <MuiThemeProvider theme={Theme}>\n          <List\n            component=\"nav\"\n            aria-labelledby=\"nested-list-subheader\"\n            subheader={\n              <ListSubheader component=\"div\" id=\"nested-list-subheader\" className={classes.subheader}>\n                <span>لیست نیازها</span>\n                <Button variant=\"contained\" color=\"primary\" size={\"small\"} onClick={handleDialogOpen}>افزودن نیاز\n                  جدید</Button>\n              </ListSubheader>\n            }\n            className={classes.root}\n          >\n            {Object.values(data).map((category, i) => <NeedListRow\n              key={i}\n              open={categoryOpen[i]}\n              categoryId={category.id}\n              category={category.faName}\n              items={category.items}\n              handleClick={handleClick(i)}\n              loading={needLoading}\n              handleDelete={j => handleDelete(category.id, j)()}\n              editMode={needEdit}\n              toggleEditMode={i => toggleEditMode(i)}\n              handleEdit={(id, value) => handleEdit(id, value)()}\n              editValue={needEditValue}\n              handleChange={handleChange}\n\n            />)}\n          </List>\n        </MuiThemeProvider>\n      </RTL>\n\n      <Popup\n        open={dialogOpen}\n        onClose={handleDialogClose}\n        onDeny={handleDialogClose}\n        onConfirm={handleDialogConfirm}\n        title={'اضافه کردن نیاز جدید'}\n        text={'لطفاً دسته‌بندی و عنوان نیاز را وارد کنید.'}\n        context={addForm}\n        denyBtn={'انصراف'}\n        confirmBtn={addLoading ? <CircularProgress color={\"secondary\"} size={24} /> : 'ثبت'}\n      />\n\n      <FloatingAlert text={message} open={open} handleClose={closeAlert} duration={duration} type={type}/>\n    </div>\n  );\n};\n\nNeeds.propTypes = {};\n\nexport default Needs;","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/forms/OtpForm.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/forms/SignInForm.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/forms/SignUpForm.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/UserListRow.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/NeedListRow.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/card/CardSlider.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/card/Card.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/buttons/FAB.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/buttons/CustomButton.js",[],{"ruleId":"360","replacedBy":"361"},{"ruleId":"362","replacedBy":"363"},{"ruleId":"364","severity":1,"message":"365","line":9,"column":8,"nodeType":"366","messageId":"367","endLine":9,"endColumn":11},{"ruleId":"364","severity":1,"message":"368","line":12,"column":8,"nodeType":"366","messageId":"367","endLine":12,"endColumn":14},{"ruleId":"364","severity":1,"message":"369","line":13,"column":8,"nodeType":"366","messageId":"367","endLine":13,"endColumn":18},{"ruleId":"364","severity":1,"message":"370","line":2,"column":8,"nodeType":"366","messageId":"367","endLine":2,"endColumn":17},{"ruleId":"364","severity":1,"message":"371","line":3,"column":10,"nodeType":"366","messageId":"367","endLine":3,"endColumn":16},{"ruleId":"364","severity":1,"message":"372","line":6,"column":8,"nodeType":"366","messageId":"367","endLine":6,"endColumn":13},{"ruleId":"364","severity":1,"message":"373","line":5,"column":11,"nodeType":"366","messageId":"367","endLine":5,"endColumn":18},{"ruleId":"364","severity":1,"message":"374","line":7,"column":3,"nodeType":"366","messageId":"367","endLine":7,"endColumn":7},{"ruleId":"364","severity":1,"message":"375","line":8,"column":3,"nodeType":"366","messageId":"367","endLine":8,"endColumn":11},{"ruleId":"364","severity":1,"message":"376","line":9,"column":3,"nodeType":"366","messageId":"367","endLine":9,"endColumn":15},{"ruleId":"364","severity":1,"message":"377","line":9,"column":17,"nodeType":"366","messageId":"367","endLine":9,"endColumn":32},{"ruleId":"364","severity":1,"message":"378","line":13,"column":8,"nodeType":"366","messageId":"367","endLine":13,"endColumn":17},{"ruleId":"364","severity":1,"message":"379","line":1,"column":17,"nodeType":"366","messageId":"367","endLine":1,"endColumn":25},{"ruleId":"360","replacedBy":"380"},{"ruleId":"362","replacedBy":"381"},{"ruleId":"360","replacedBy":"382"},{"ruleId":"362","replacedBy":"383"},{"ruleId":"384","severity":1,"message":"385","line":104,"column":6,"nodeType":"386","endLine":104,"endColumn":12,"suggestions":"387"},{"ruleId":"384","severity":1,"message":"388","line":126,"column":6,"nodeType":"386","endLine":126,"endColumn":8,"suggestions":"389"},{"ruleId":"364","severity":1,"message":"390","line":6,"column":3,"nodeType":"366","messageId":"367","endLine":6,"endColumn":12},{"ruleId":"364","severity":1,"message":"391","line":13,"column":3,"nodeType":"366","messageId":"367","endLine":13,"endColumn":10},{"ruleId":"364","severity":1,"message":"392","line":21,"column":10,"nodeType":"366","messageId":"367","endLine":21,"endColumn":17},{"ruleId":"364","severity":1,"message":"371","line":4,"column":3,"nodeType":"366","messageId":"367","endLine":4,"endColumn":9},{"ruleId":"364","severity":1,"message":"393","line":5,"column":3,"nodeType":"366","messageId":"367","endLine":5,"endColumn":11},{"ruleId":"364","severity":1,"message":"394","line":7,"column":3,"nodeType":"366","messageId":"367","endLine":7,"endColumn":19},{"ruleId":"364","severity":1,"message":"395","line":16,"column":10,"nodeType":"366","messageId":"367","endLine":16,"endColumn":22},{"ruleId":"384","severity":1,"message":"396","line":149,"column":6,"nodeType":"386","endLine":149,"endColumn":8,"suggestions":"397"},{"ruleId":"364","severity":1,"message":"398","line":185,"column":9,"nodeType":"366","messageId":"367","endLine":185,"endColumn":29},{"ruleId":"364","severity":1,"message":"399","line":323,"column":31,"nodeType":"366","messageId":"367","endLine":323,"endColumn":36},{"ruleId":"384","severity":1,"message":"400","line":356,"column":6,"nodeType":"386","endLine":356,"endColumn":55,"suggestions":"401"},{"ruleId":"384","severity":1,"message":"402","line":370,"column":6,"nodeType":"386","endLine":370,"endColumn":15,"suggestions":"403"},{"ruleId":"384","severity":1,"message":"404","line":377,"column":6,"nodeType":"386","endLine":377,"endColumn":26,"suggestions":"405"},{"ruleId":"384","severity":1,"message":"406","line":384,"column":6,"nodeType":"386","endLine":384,"endColumn":42,"suggestions":"407"},{"ruleId":"360","replacedBy":"408"},{"ruleId":"362","replacedBy":"409"},{"ruleId":"364","severity":1,"message":"410","line":15,"column":8,"nodeType":"366","messageId":"367","endLine":15,"endColumn":14},{"ruleId":"384","severity":1,"message":"411","line":102,"column":6,"nodeType":"386","endLine":102,"endColumn":8,"suggestions":"412"},{"ruleId":"364","severity":1,"message":"370","line":2,"column":8,"nodeType":"366","messageId":"367","endLine":2,"endColumn":17},{"ruleId":"364","severity":1,"message":"413","line":8,"column":3,"nodeType":"366","messageId":"367","endLine":8,"endColumn":11},{"ruleId":"364","severity":1,"message":"375","line":10,"column":3,"nodeType":"366","messageId":"367","endLine":10,"endColumn":11},{"ruleId":"364","severity":1,"message":"414","line":11,"column":3,"nodeType":"366","messageId":"367","endLine":11,"endColumn":15},{"ruleId":"364","severity":1,"message":"376","line":12,"column":3,"nodeType":"366","messageId":"367","endLine":12,"endColumn":15},{"ruleId":"364","severity":1,"message":"415","line":15,"column":3,"nodeType":"366","messageId":"367","endLine":15,"endColumn":13},{"ruleId":"364","severity":1,"message":"416","line":17,"column":10,"nodeType":"366","messageId":"367","endLine":17,"endColumn":20},{"ruleId":"364","severity":1,"message":"417","line":17,"column":22,"nodeType":"366","messageId":"367","endLine":17,"endColumn":32},{"ruleId":"364","severity":1,"message":"418","line":17,"column":34,"nodeType":"366","messageId":"367","endLine":17,"endColumn":51},{"ruleId":"384","severity":1,"message":"411","line":64,"column":6,"nodeType":"386","endLine":64,"endColumn":8,"suggestions":"419"},{"ruleId":"364","severity":1,"message":"370","line":2,"column":8,"nodeType":"366","messageId":"367","endLine":2,"endColumn":17},{"ruleId":"364","severity":1,"message":"415","line":4,"column":22,"nodeType":"366","messageId":"367","endLine":4,"endColumn":32},{"ruleId":"364","severity":1,"message":"420","line":61,"column":9,"nodeType":"366","messageId":"367","endLine":61,"endColumn":16},{"ruleId":"384","severity":1,"message":"411","line":83,"column":6,"nodeType":"386","endLine":83,"endColumn":19,"suggestions":"421"},{"ruleId":"364","severity":1,"message":"422","line":18,"column":22,"nodeType":"366","messageId":"367","endLine":18,"endColumn":33},{"ruleId":"364","severity":1,"message":"423","line":25,"column":10,"nodeType":"366","messageId":"367","endLine":25,"endColumn":23},{"ruleId":"364","severity":1,"message":"370","line":2,"column":8,"nodeType":"366","messageId":"367","endLine":2,"endColumn":17},{"ruleId":"364","severity":1,"message":"422","line":5,"column":29,"nodeType":"366","messageId":"367","endLine":5,"endColumn":40},{"ruleId":"364","severity":1,"message":"424","line":5,"column":42,"nodeType":"366","messageId":"367","endLine":5,"endColumn":52},{"ruleId":"364","severity":1,"message":"425","line":11,"column":3,"nodeType":"366","messageId":"367","endLine":11,"endColumn":9},{"ruleId":"364","severity":1,"message":"426","line":14,"column":8,"nodeType":"366","messageId":"367","endLine":14,"endColumn":19},{"ruleId":"384","severity":1,"message":"411","line":82,"column":6,"nodeType":"386","endLine":82,"endColumn":8,"suggestions":"427"},"no-native-reassign",["428"],"no-negated-in-lhs",["429"],"no-unused-vars","'RTL' is defined but never used.","Identifier","unusedVar","'styles' is defined but never used.","'classNames' is defined but never used.","'PropTypes' is defined but never used.","'Button' is defined but never used.","'Hands' is defined but never used.","'Divider' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'ListItemText' is defined but never used.","'SwipeableDrawer' is defined but never used.","'CloseIcon' is defined but never used.","'useState' is defined but never used.",["428"],["429"],["428"],["429"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setIsAdmin'. Either include it or remove the dependency array.","ArrayExpression",["430"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["431"],"'Container' is defined but never used.","'Toolbar' is defined but never used.","'Context' is defined but never used.","'Checkbox' is defined but never used.","'FormControlLabel' is defined but never used.","'CustomButton' is defined but never used.","React Hook useEffect has missing dependencies: 'loading', 'setIsAdmin', and 'showAlert'. Either include them or remove the dependency array. You can also do a functional update 'setLoading(l => ...)' if you only need 'loading' in the 'setLoading' call.",["432"],"'updateLocationAccess' is assigned a value but never used.","'error' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'needCategories', 'recentRequests', and 'showAlert'. Either include them or remove the dependency array.",["433"],"React Hook useEffect has missing dependencies: 'getData', 'props.coords?.latitude', 'props.coords?.longitude', and 'recentRequests'. Either include them or remove the dependency array.",["434"],"React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["435"],"React Hook useEffect has missing dependencies: 'handleDisaster', 'preSelected', and 'selectNeed'. Either include them or remove the dependency array.",["436"],["428"],["429"],"'Loader' is defined but never used.","React Hook useEffect has a missing dependency: 'showAlert'. Either include it or remove the dependency array.",["437"],"'Collapse' is defined but never used.","'ListItemIcon' is defined but never used.","'Typography' is defined but never used.","'ExpandLess' is defined but never used.","'ExpandMore' is defined but never used.","'AccountBoxRounded' is defined but never used.",["438"],"'classes' is assigned a value but never used.",["439"],"'FormControl' is defined but never used.","'DeleteRounded' is defined but never used.","'InputLabel' is defined but never used.","'Select' is defined but never used.","'UserListRow' is defined but never used.",["440"],"no-global-assign","no-unsafe-negation",{"desc":"441","fix":"442"},{"desc":"443","fix":"444"},{"desc":"445","fix":"446"},{"desc":"447","fix":"448"},{"desc":"449","fix":"450"},{"desc":"451","fix":"452"},{"desc":"453","fix":"454"},{"desc":"455","fix":"456"},{"desc":"455","fix":"457"},{"desc":"458","fix":"459"},{"desc":"455","fix":"460"},"Update the dependencies array to be: [path, setIsAdmin]",{"range":"461","text":"462"},"Update the dependencies array to be: [history]",{"range":"463","text":"464"},"Update the dependencies array to be: [loading, setIsAdmin, showAlert]",{"range":"465","text":"466"},"Update the dependencies array to be: [needCategories, props.coords?.latitude, props.coords?.longitude, recentRequests, showAlert]",{"range":"467","text":"468"},"Update the dependencies array to be: [getData, props.coords?.latitude, props.coords?.longitude, recentRequests, trigger]",{"range":"469","text":"470"},"Update the dependencies array to be: [getData, showRecentRequests]",{"range":"471","text":"472"},"Update the dependencies array to be: [needCategories, disasterCategories, preSelected, selectNeed, handleDisaster]",{"range":"473","text":"474"},"Update the dependencies array to be: [showAlert]",{"range":"475","text":"476"},{"range":"477","text":"476"},"Update the dependencies array to be: [page, limit, showAlert]",{"range":"478","text":"479"},{"range":"480","text":"476"},[2882,2888],"[path, setIsAdmin]",[3962,3964],"[history]",[4334,4336],"[loading, setIsAdmin, showAlert]",[10184,10233],"[needCategories, props.coords?.latitude, props.coords?.longitude, recentRequests, showAlert]",[10530,10539],"[getData, props.coords?.latitude, props.coords?.longitude, recentRequests, trigger]",[10656,10676],"[getData, showRecentRequests]",[10906,10942],"[needCategories, disasterCategories, preSelected, selectNeed, handleDisaster]",[2603,2605],"[showAlert]",[1853,1855],[2640,2653],"[page, limit, showAlert]",[2442,2444]]