[{"/home/pmoghadam/WebstormProjects/help/src/index.js":"1","/home/pmoghadam/WebstormProjects/help/src/reportWebVitals.js":"2","/home/pmoghadam/WebstormProjects/help/src/App.js":"3","/home/pmoghadam/WebstormProjects/help/src/components/Home.js":"4","/home/pmoghadam/WebstormProjects/help/src/components/common/Header.js":"5","/home/pmoghadam/WebstormProjects/help/src/components/helpers/Theme.js":"6","/home/pmoghadam/WebstormProjects/help/src/components/helpers/RTL.js":"7","/home/pmoghadam/WebstormProjects/help/src/components/helpers/HeaderScrollEffect.js":"8","/home/pmoghadam/WebstormProjects/help/src/components/common/CustomButton.js":"9","/home/pmoghadam/WebstormProjects/help/src/assets/routes.js":"10","/home/pmoghadam/WebstormProjects/help/src/components/Drawer.js":"11","/home/pmoghadam/WebstormProjects/crisis-management-system/src/index.js":"12","/home/pmoghadam/WebstormProjects/crisis-management-system/src/reportWebVitals.js":"13","/home/pmoghadam/WebstormProjects/crisis-management-system/src/App.js":"14","/home/pmoghadam/WebstormProjects/crisis-management-system/src/assets/routes.js":"15","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/Home.js":"16","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/Header.js":"17","/home/pmoghadam/WebstormProjects/crisis-management-system/src/hooks/usePosition.js":"18","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/About.js":"19","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/OtpInput.js":"20","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/Account.js":"21","/home/pmoghadam/WebstormProjects/crisis-management-system/src/types/userInfoType.js":"22","/home/pmoghadam/WebstormProjects/crisis-management-system/src/assets/messages.js":"23","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/NavDrawer.js":"24","/home/pmoghadam/WebstormProjects/crisis-management-system/src/helpers/Theme.js":"25","/home/pmoghadam/WebstormProjects/crisis-management-system/src/helpers/RTL.js":"26","/home/pmoghadam/WebstormProjects/crisis-management-system/src/helpers/HeaderScrollEffect.js":"27","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/Profile.js":"28","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/AddNeed.js":"29","/home/pmoghadam/WebstormProjects/crisis-management-system/src/assets/categories.js":"30","/home/pmoghadam/WebstormProjects/crisis-management-system/src/types/needType.js":"31","/home/pmoghadam/WebstormProjects/crisis-management-system/src/assets/icons/iconComponents/FloodIcon.js":"32","/home/pmoghadam/WebstormProjects/crisis-management-system/src/assets/icons/iconComponents/FireIcon.js":"33","/home/pmoghadam/WebstormProjects/crisis-management-system/src/assets/icons/iconComponents/EarthquakeIcon.js":"34","/home/pmoghadam/WebstormProjects/crisis-management-system/src/assets/icons/iconComponents/AvalancheIcon.js":"35","/home/pmoghadam/WebstormProjects/crisis-management-system/src/assets/icons/iconComponents/TwisterIcon.js":"36","/home/pmoghadam/WebstormProjects/crisis-management-system/src/assets/icons/iconComponents/LandslideIcon.js":"37","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/Receipt.js":"38","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/Done.js":"39","/home/pmoghadam/WebstormProjects/crisis-management-system/src/hooks/useAlert.js":"40","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/FloatingAlert.js":"41","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/Loader.js":"42","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/Popup.js":"43","/home/pmoghadam/WebstormProjects/crisis-management-system/src/Context.js":"44","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/table/DataTable.js":"45","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/table/DataTableHead.js":"46","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/table/DataTableRow.js":"47","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/buttons/FAB.js":"48","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/buttons/CustomButton.js":"49","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/card/CardSlider.js":"50","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/card/Card.js":"51","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/forms/SignUpForm.js":"52","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/forms/OtpForm.js":"53","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/forms/SignInForm.js":"54","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/NotFound.js":"55","/home/pmoghadam/WebstormProjects/crisis-management-system/src/serviceWorker.js":"56","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/Footer.js":"57","/home/pmoghadam/WebstormProjects/crisis-management-system/src/helpers/api.js":"58","/home/pmoghadam/WebstormProjects/crisis-management-system/src/helpers/PrivateRoute.js":"59","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/AccessDenied.js":"60","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/AdminPanel.js":"61","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/RecentNeeds.js":"62"},{"size":586,"mtime":1616398485398,"results":"63","hashOfConfig":"64"},{"size":362,"mtime":1616398485398,"results":"65","hashOfConfig":"64"},{"size":1257,"mtime":1616404252778,"results":"66","hashOfConfig":"64"},{"size":1905,"mtime":1616398485398,"results":"67","hashOfConfig":"64"},{"size":1530,"mtime":1616405159633,"results":"68","hashOfConfig":"64"},{"size":769,"mtime":1616404268601,"results":"69","hashOfConfig":"64"},{"size":592,"mtime":1616398485398,"results":"70","hashOfConfig":"64"},{"size":571,"mtime":1616398485398,"results":"71","hashOfConfig":"64"},{"size":511,"mtime":1616398485398,"results":"72","hashOfConfig":"64"},{"size":61,"mtime":1616404207087,"results":"73","hashOfConfig":"64"},{"size":1775,"mtime":1616405222756,"results":"74","hashOfConfig":"64"},{"size":872,"mtime":1617362094248,"results":"75","hashOfConfig":"76"},{"size":362,"mtime":1616427207741,"results":"77","hashOfConfig":"76"},{"size":2757,"mtime":1629153043326,"results":"78","hashOfConfig":"76"},{"size":185,"mtime":1629066153691,"results":"79","hashOfConfig":"76"},{"size":4613,"mtime":1629158241961,"results":"80","hashOfConfig":"76"},{"size":6114,"mtime":1629153217324,"results":"81","hashOfConfig":"76"},{"size":1020,"mtime":1629155208537,"results":"82","hashOfConfig":"76"},{"size":1869,"mtime":1617264662959,"results":"83","hashOfConfig":"76"},{"size":1756,"mtime":1616936065611,"results":"84","hashOfConfig":"76"},{"size":13476,"mtime":1629157649114,"results":"85","hashOfConfig":"76"},{"size":406,"mtime":1617391951648,"results":"86","hashOfConfig":"76"},{"size":1228,"mtime":1629154288099,"results":"87","hashOfConfig":"76"},{"size":4320,"mtime":1629066153663,"results":"88","hashOfConfig":"76"},{"size":858,"mtime":1629158316065,"results":"89","hashOfConfig":"76"},{"size":592,"mtime":1616427207741,"results":"90","hashOfConfig":"76"},{"size":517,"mtime":1617011124559,"results":"91","hashOfConfig":"76"},{"size":8908,"mtime":1629157243921,"results":"92","hashOfConfig":"76"},{"size":27317,"mtime":1629158316045,"results":"93","hashOfConfig":"76"},{"size":3005,"mtime":1616767823864,"results":"94","hashOfConfig":"76"},{"size":216,"mtime":1616750248027,"results":"95","hashOfConfig":"76"},{"size":4104,"mtime":1616674128194,"results":"96","hashOfConfig":"76"},{"size":3386,"mtime":1616674143678,"results":"97","hashOfConfig":"76"},{"size":3117,"mtime":1616674220339,"results":"98","hashOfConfig":"76"},{"size":4511,"mtime":1616708153840,"results":"99","hashOfConfig":"76"},{"size":3059,"mtime":1616674315844,"results":"100","hashOfConfig":"76"},{"size":3472,"mtime":1616708153824,"results":"101","hashOfConfig":"76"},{"size":6320,"mtime":1617397657082,"results":"102","hashOfConfig":"76"},{"size":2654,"mtime":1629065739851,"results":"103","hashOfConfig":"76"},{"size":748,"mtime":1617388311582,"results":"104","hashOfConfig":"76"},{"size":1217,"mtime":1616794714946,"results":"105","hashOfConfig":"76"},{"size":469,"mtime":1616868965175,"results":"106","hashOfConfig":"76"},{"size":1267,"mtime":1616936753788,"results":"107","hashOfConfig":"76"},{"size":131,"mtime":1629063425212,"results":"108","hashOfConfig":"76"},{"size":6433,"mtime":1629062376916,"results":"109","hashOfConfig":"76"},{"size":2000,"mtime":1616595766388,"results":"110","hashOfConfig":"76"},{"size":5563,"mtime":1629050801700,"results":"111","hashOfConfig":"76"},{"size":755,"mtime":1617391673732,"results":"112","hashOfConfig":"76"},{"size":415,"mtime":1616792806629,"results":"113","hashOfConfig":"76"},{"size":472,"mtime":1616708074869,"results":"114","hashOfConfig":"76"},{"size":1885,"mtime":1617267616402,"results":"115","hashOfConfig":"76"},{"size":3783,"mtime":1629158090258,"results":"116","hashOfConfig":"76"},{"size":1232,"mtime":1617398109310,"results":"117","hashOfConfig":"76"},{"size":2357,"mtime":1629158316057,"results":"118","hashOfConfig":"76"},{"size":1300,"mtime":1617264662963,"results":"119","hashOfConfig":"76"},{"size":5204,"mtime":1617362094268,"results":"120","hashOfConfig":"76"},{"size":1005,"mtime":1617264662963,"results":"121","hashOfConfig":"76"},{"size":1406,"mtime":1629156772358,"results":"122","hashOfConfig":"76"},{"size":681,"mtime":1618294312089,"results":"123","hashOfConfig":"76"},{"size":1392,"mtime":1617448785906,"results":"124","hashOfConfig":"76"},{"size":473,"mtime":1629066153699,"results":"125","hashOfConfig":"76"},{"size":2389,"mtime":1629151068062,"results":"126","hashOfConfig":"76"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},"mcjzsk",{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"129"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"154"},"1hsr5lm",{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"154"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"154"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"189","messages":"190","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"154"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"154"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"154"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"154"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"154"},"/home/pmoghadam/WebstormProjects/help/src/index.js",[],["263","264"],"/home/pmoghadam/WebstormProjects/help/src/reportWebVitals.js",[],"/home/pmoghadam/WebstormProjects/help/src/App.js",["265","266","267"],"/home/pmoghadam/WebstormProjects/help/src/components/Home.js",["268","269","270"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Typography } from \"@material-ui/core\";\nimport HealingIcon from '@material-ui/icons/Healing';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Hands from '../assets/icons/helping-hand.svg';\nimport { CustomButton } from \"./common/CustomButton\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100%\",\n  },\n  icon: {\n    fontSize: theme.spacing(8),\n    margin: theme.spacing(2, 0),\n    color: theme.palette.text.secondary,\n  },\n  title: {\n    textAlign: \"center\",\n    fontSize: theme.spacing(5),\n    fontWeight: \"bold\",\n    color: theme.palette.text.secondary,\n  },\n  image: {\n    width: theme.spacing(25),\n    height: theme.spacing(25),\n    margin: theme.spacing(1, 0),\n  },\n  hr: {\n    color: theme.palette.text.secondary,\n  },\n  text: {\n    color: theme.palette.text.secondary,\n    fontSize: theme.spacing(2.5),\n    textAlign: \"center\",\n    textAlignLast: \"center\",\n    margin: theme.spacing(6, 0),\n  },\n  btn: {\n    width: \"100%\",\n    margin: theme.spacing(2, 0),\n  }\n}));\n\nconst Home = props => {\n  const classes = useStyles();\n\n  return (\n      <>\n        <HealingIcon className={classes.icon}/>\n        <Typography variant=\"h4\" className={classes.title}>\n          سامانه‌ی ثبت نیازمندی‌ها\n        </Typography>\n        {/*<hr className={classes.hr}/>*/}\n        {/*<img className={classes.image} src={Hands} alt=\"hands\"/>*/}\n        <Typography variant=\"span\" className={classes.text}>\n          در این سامانه شما می‌توانید در زمان وقوع بحران نیازهای خود را وارد کنید تا در اسرع وقت، برطرف شود.\n        </Typography>\n        <CustomButton className={classes.btn} variant={\"contained\"}>شروع ثبت نیاز</CustomButton>\n      </>\n  );\n};\n\nHome.propTypes = {};\n\nexport default Home;","/home/pmoghadam/WebstormProjects/help/src/components/common/Header.js",["271","272","273","274","275","276"],"/home/pmoghadam/WebstormProjects/help/src/components/helpers/Theme.js",[],"/home/pmoghadam/WebstormProjects/help/src/components/helpers/RTL.js",[],"/home/pmoghadam/WebstormProjects/help/src/components/helpers/HeaderScrollEffect.js",[],"/home/pmoghadam/WebstormProjects/help/src/components/common/CustomButton.js",[],"/home/pmoghadam/WebstormProjects/help/src/assets/routes.js",[],"/home/pmoghadam/WebstormProjects/help/src/components/Drawer.js",["277"],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/index.js",["278"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nif (module.hot) {\n  module.hot.accept()\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n",["279","280"],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/reportWebVitals.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/App.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/assets/routes.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/Home.js",["281","282","283"],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/Header.js",["284"],"import React, { useContext, useEffect, useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport {\n  AppBar,\n  Button,\n  Container,\n  IconButton,\n  Toolbar,\n  Typography,\n  useMediaQuery,\n  useScrollTrigger, useTheme\n} from \"@material-ui/core\";\nimport MenuRoundedIcon from '@material-ui/icons/MenuRounded';\nimport { HeaderScrollEffect } from \"../../helpers/HeaderScrollEffect\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport NavDrawer from \"./NavDrawer\";\nimport { NavLink } from \"react-router-dom\";\nimport { routes } from \"../../assets/routes\";\nimport Logo from '../../assets/icons/simorgh.svg';\nimport PersonRoundedIcon from '@material-ui/icons/PersonRounded';\nimport { Context, UserContext } from \"../../Context\";\nimport { api, config, get_token, get_user_info, rest } from \"../../helpers/api\";\nimport AccessDenied from \"./AccessDenied\";\n\nconst useStyles = makeStyles((theme) => ({\n  btn: {\n    color: theme.palette.text.secondary,\n    '&#home': {\n      marginLeft: theme.spacing(-1),\n      [theme.breakpoints.up('md')]: {\n        display: \"none\",\n      },\n    },\n    '& img': {\n      width: theme.spacing(5),\n      height: theme.spacing(5),\n    },\n    '& > button > span': {\n      direction: \"ltr\",\n    },\n  },\n  admin: {\n    border: \"1px solid\",\n    borderRadius: theme.spacing(.5),\n  },\n  navContainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifySelf: \"flex-start\",\n    width: \"100%\",\n    [theme.breakpoints.down('sm')]: {\n      display: \"none\",\n    },\n  },\n  icon: {\n    color: theme.palette.text.secondary,\n    marginLeft: \"auto\",\n    [theme.breakpoints.up('md')]: {\n      display: \"none\",\n    },\n  },\n  header: {\n    backgroundColor: theme.palette.secondary.light,\n    margin: theme.spacing(0, -2),\n    right: \"unset\",\n    borderRadius: \"0 0 8px 8px\",\n  },\n  container: {\n    padding: 0,\n  },\n}));\n\nconst Header = props => {\n  const {window} = props;\n  const classes = useStyles();\n  const {context} = useContext(Context);\n  const {isAdmin, setIsAdmin} = useContext(UserContext);\n  const [open, setOpen] = useState(false);\n  const [dialogOpen, setDialogOpen] = React.useState(false);\n  const history = useHistory();\n  const theme = useTheme()\n  const isMobileDisplay = useMediaQuery(theme.breakpoints.down('sm'))\n  const trigger = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 80,\n    target: window ? window() : undefined,\n  });\n\n\n  useEffect(() => {\n    if (get_token()) {\n      api.get(`${rest.profile}/${get_user_info().id}`, config(\"json\"))\n        .then((res) => {\n          setIsAdmin(res.data.isAdmin)\n        })\n    }\n  }, [props.location.pathname])\n\n  const toggleDrawer = open => event => {\n    if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setOpen(open);\n  };\n\n  const handleDialogClose = () => {\n    setDialogOpen(false);\n  };\n\n  const handleDialogOpen = () => {\n    if (get_token()) {\n      history.push(routes.ADD_NEED)\n    } else {\n      setDialogOpen(true);\n    }\n  };\n\n  return (\n    <HeaderScrollEffect {...props}>\n      <AppBar position={\"fixed\"} className={classes.header}>\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Toolbar>\n            {\n              <div className={classes.navContainer}>\n                <NavLink exact to={routes.HOME} className={classes.btn}>\n                  <Button color=\"inherit\">صفحه‌ی اصلی</Button>\n                </NavLink>\n                {get_token()\n                  ? <NavLink to={routes.ADD_NEED} className={classes.btn}>\n                    <Button color=\"inherit\">ثبت نیاز</Button>\n                  </NavLink>\n                  : <div onClick={handleDialogOpen} className={classes.btn}>\n                    <Button color=\"inherit\">ثبت نیاز</Button>\n                  </div>}\n                <NavLink to={routes.ABOUT} className={classes.btn}>\n                  <Button color=\"inherit\">درباره‌ی ما</Button>\n                </NavLink>\n                {get_token()\n                  ? <NavLink to={routes.PROFILE} className={classes.btn}>\n                    <Button color=\"inherit\">پروفایل</Button>\n                  </NavLink>\n                  : <NavLink to={routes.SIGN_IN} className={classes.btn}>\n                    <Button color=\"inherit\">ورود | ثبت‌نام</Button>\n                  </NavLink>}\n                {isAdmin && <NavLink to={routes.ADMIN} className={classnames(classes.btn, classes.admin)}>\n                  <Button color=\"inherit\">پنل ادمین</Button>\n                </NavLink>}\n              </div>\n            }\n            <IconButton edge=\"end\" className={classes.icon} aria-label=\"menu\" onClick={toggleDrawer(true)}>\n              <MenuRoundedIcon/>\n            </IconButton>\n            {isMobileDisplay && trigger &&\n            <Typography color={\"textSecondary\"} className=\"ml-auto\">{context}</Typography>}\n            {\n              props.location.pathname === routes.HOME\n                ?\n                get_token()\n                  ? <NavLink to={routes.PROFILE} className={classes.btn} id='home'>\n                    <Button color=\"inherit\" startIcon={<PersonRoundedIcon/>}>پروفایل</Button>\n                  </NavLink>\n                  : <NavLink to={routes.SIGN_IN} className={classes.btn} id='home'>\n                    <Button color=\"inherit\">ورود | ثبت‌نام</Button>\n                  </NavLink>\n                :\n                <NavLink to={routes.HOME} className={classes.btn}>\n                  <IconButton edge=\"start\"><img src={Logo} alt=\"logo\"/></IconButton>\n                </NavLink>\n            }\n            <NavDrawer open={open} toggleFn={toggleDrawer}/>\n          </Toolbar>\n          <AccessDenied open={dialogOpen} handleClose={handleDialogClose}\n                        action={() => history.push(routes.ADD_NEED)}/>\n        </Container>\n      </AppBar>\n    </HeaderScrollEffect>\n  );\n};\n\nHeader.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default Header;","/home/pmoghadam/WebstormProjects/crisis-management-system/src/hooks/usePosition.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/About.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/OtpInput.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/Account.js",["285","286","287","288"],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/types/userInfoType.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/assets/messages.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/NavDrawer.js",["289","290","291"],"import React, { useContext } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  Container,\n  Divider,\n  Drawer,\n  IconButton,\n  List,\n  ListItem,\n  ListItemText,\n  Toolbar\n} from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { routes } from \"../../assets/routes\";\nimport { NavLink } from \"react-router-dom\";\nimport { Swipe } from \"react-swipe-component\";\nimport Footer from \"./Footer\";\nimport { Context, UserContext } from \"../../Context\";\nimport { get_token } from \"../../helpers/api\";\nimport AccessDenied from \"./AccessDenied\";\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    color: theme.palette.text.secondary,\n  },\n  nav: {\n    color: theme.palette.text.secondary,\n  },\n  close: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  list: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: theme.spacing(30),\n    height: '100%',\n    '& *': {\n      textAlign: \"center\",\n      justifyContent: \"center\",\n    },\n  },\n  swipeArea: {\n    width: theme.spacing(2),\n    position: \"fixed\",\n    top: 0,\n    bottom: 0,\n    right: 0,\n  },\n}));\n\nconst NavDrawer = props => {\n  const classes = useStyles();\n  const {isAdmin} = useContext(UserContext);\n  const [dialogOpen, setDialogOpen] = React.useState(false);\n  const history = useHistory();\n\n  const listItems = [\n    {\n      text: 'صفحه‌ی اصلی',\n      url: routes.HOME,\n    },\n    {\n      text: get_token() ? 'پروفایل' : 'ورود | ثبت‌نام',\n      url: get_token() ? routes.PROFILE : routes.SIGN_IN,\n    },\n    {\n      text: 'ثبت نیاز',\n      url: routes.ADD_NEED,\n    },\n    {\n      text: 'درباره‌ی ما',\n      url: routes.ABOUT,\n    },\n    {\n      text: 'پنل ادمین',\n      url: routes.ADMIN,\n    },\n  ];\n\n  const handleDialogClose = () => {\n    setDialogOpen(false);\n  };\n\n  const handleDialogOpen = () => {\n    if (get_token()) {\n      history.push(routes.ADD_NEED)\n    } else {\n      setDialogOpen(true);\n    }\n  };\n\n  const list = (\n    <div className={classes.list} role=\"presentation\" onClick={props.toggleFn(false)}>\n      <List>\n        {listItems.map((navItem, index) => (\n          <div key={navItem.text}>\n            <ListItem button>\n              {navItem.text === 'ثبت نیاز'\n                ? (get_token()\n                  ? <NavLink to={routes.ADD_NEED} className={classes.nav}>\n                    <Button color=\"inherit\">ثبت نیاز</Button>\n                  </NavLink>\n                  : <div onClick={handleDialogOpen} className={classes.nav}>\n                    <Button color=\"inherit\">ثبت نیاز</Button>\n                  </div>)\n                : navItem.text === 'پنل ادمین'\n                  ? (isAdmin\n                    ? <NavLink exact to={navItem.url} className={classes.nav}>\n                      <ListItemText primary={navItem.text}/>\n                    </NavLink>\n                    : null)\n                  : <NavLink exact to={navItem.url} className={classes.nav}>\n                    <ListItemText primary={navItem.text}/>\n                  </NavLink>}\n            </ListItem>\n            {index !== listItems.length - 1 && <Divider/>}\n          </div>\n        ))}\n      </List>\n    </div>\n  )\n\n  return (\n    <nav>\n      <Swipe\n        nodeName=\"div\"\n        onSwipedLeft={props.toggleFn(true)}\n        detectTouch\n      >\n        <div className={classes.swipeArea}/>\n      </Swipe>\n      <Swipe\n        nodeName=\"div\"\n        onSwipedRight={props.toggleFn(false)}\n        detectTouch\n      >\n        <Drawer anchor=\"left\" open={props.open} onClose={props.toggleFn(false)}>\n          <div className={classes.close}>\n            <IconButton edge=\"end\" className={classes.icon} aria-label=\"close\" onClick={props.toggleFn(false)}>\n              <CloseIcon/>\n            </IconButton>\n          </div>\n          {list}\n          <Footer/>\n        </Drawer>\n        <AccessDenied open={dialogOpen} handleClose={handleDialogClose} action={() => history.push(routes.ADD_NEED)}/>\n      </Swipe>\n    </nav>\n  );\n};\n\nNavDrawer.propTypes = {\n  open: PropTypes.bool,\n  toggleFn: PropTypes.func,\n};\n\nexport default NavDrawer;","/home/pmoghadam/WebstormProjects/crisis-management-system/src/helpers/Theme.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/helpers/RTL.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/helpers/HeaderScrollEffect.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/Profile.js",["292","293","294","295","296","297"],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/AddNeed.js",["298","299","300","301"],"import React, { useContext, useEffect, useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { geolocated } from \"react-geolocated\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Button,\n  Chip,\n  CircularProgress,\n  Collapse,\n  IconButton,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  ListSubheader,\n  MuiThemeProvider,\n  Slider,\n  TextField,\n  Typography,\n  useMediaQuery,\n  useTheme\n} from \"@material-ui/core\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport InfoRoundedIcon from '@material-ui/icons/InfoRounded';\nimport classnames from \"classnames\";\nimport Helmet from 'react-helmet';\nimport RTL from \"../helpers/RTL\";\nimport Theme from \"../helpers/Theme\";\nimport Card from \"./card/Card\";\nimport CardSlider from \"./card/CardSlider\";\nimport { ExpandLess, ExpandMore } from \"@material-ui/icons\";\nimport type { NeedType } from \"../types/needType\";\nimport { emptyNeed } from \"../types/needType\";\nimport FireIcon from \"../assets/icons/iconComponents/FireIcon\";\nimport Fab from \"./buttons/FAB\";\nimport EarthquakeIcon from \"../assets/icons/iconComponents/EarthquakeIcon\";\nimport FloodIcon from \"../assets/icons/iconComponents/FloodIcon\";\nimport TwisterIcon from \"../assets/icons/iconComponents/TwisterIcon\";\nimport LandslideIcon from \"../assets/icons/iconComponents/LandslideIcon\";\nimport AvalancheIcon from \"../assets/icons/iconComponents/AvalancheIcon\";\nimport EditRoundedIcon from \"@material-ui/icons/EditRounded\";\nimport ErrorRoundedIcon from '@material-ui/icons/ErrorRounded';\nimport SearchRoundedIcon from '@material-ui/icons/SearchRounded';\nimport CloseRoundedIcon from \"@material-ui/icons/CloseRounded\";\nimport { CustomButton } from \"./buttons/CustomButton\";\nimport Receipt from \"./common/Receipt\";\nimport { routes } from \"../assets/routes\";\nimport FloatingAlert from \"./common/FloatingAlert\";\nimport { useAlert } from \"../hooks/useAlert\";\nimport { messages } from \"../assets/messages\";\nimport Loader from \"./common/Loader\";\nimport { Context } from \"../Context\";\nimport { api, config, get_user_info, rest } from \"../helpers/api\";\nimport { usePosition } from \"../hooks/usePosition\";\nimport RecentNeeds from \"./RecentNeeds\";\n\nconst emptyOpenList = {\n  menu: false,\n  food: false,\n  medical: false,\n  life: false,\n  cloth: false,\n  health: false,\n  warming: false\n};\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    width: '100%',\n    paddingBottom: theme.spacing(9),\n  },\n  title: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    width: \"100%\",\n  },\n  accordion: {\n    width: \"100%\",\n    backgroundColor: theme.palette.secondary.light,\n    '& .details': {\n      display: \"flex\",\n      flexDirection: \"column\",\n      '& > *:not(.deleteBtn)': {\n        position: \"relative\",\n        '&:before': {\n          content: '\"\"',\n          position: \"absolute\",\n          top: 0,\n          right: theme.spacing(-2),\n          borderStyle: \"solid\",\n          borderColor: theme.palette.primary.main,\n          borderWidth: theme.spacing(1.5, .5),\n        },\n      },\n    },\n    '& > .header': {\n      '& > div:first-child': {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n      },\n      '& > div:last-child': {\n        marginLeft: -12,\n        marginRight: 0,\n      },\n      '&.error': {\n        backgroundColor: theme.palette.error.light,\n        '& > *': {\n          color: theme.palette.error.main,\n        },\n      },\n    },\n  },\n  list: {\n    borderRadius: theme.spacing(.7, .7, .5, .5),\n    border: \"1px solid\",\n    position: \"relative\",\n    '&.error': {\n      borderColor: theme.palette.error.main,\n    },\n    '& > .header': {\n      backgroundColor: theme.palette.secondary.dark,\n      borderRadius: theme.spacing(.5, .5, 0, 0),\n      borderBottom: \"2px solid\",\n      // backgroundColor: theme.palette.primary.main,\n      color: theme.palette.primary.main,\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n      '&.error': {\n        color: theme.palette.error.main,\n      },\n    },\n  },\n  listItem: {\n    borderBottom: \"1px solid #D0D0D0\",\n    '&  *': {\n      fontSize: theme.spacing(1.75),\n    },\n  },\n  needPart: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    '&:not(:first-child)': {\n      marginTop: theme.spacing(3),\n    },\n    '& > p': {\n      marginBottom: theme.spacing(2),\n    },\n    '& > span': {\n      alignSelf: \"center\",\n      width: \"60%\",\n      fontSize: theme.spacing(1.5),\n    },\n    '&.deleteBtn': {\n      alignSelf: \"flex-end\",\n    },\n    '&.suggest': {\n      padding: theme.spacing(1),\n      backgroundColor: theme.palette.background.box,\n      borderRadius: theme.spacing(.5),\n    },\n  },\n  headerAmount: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginBottom: theme.spacing(2),\n    '& > div': {\n      display: \"flex\",\n      alignItems: \"center\",\n      marginRight: \"auto\",\n    },\n    '& .amountBtn': {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.primary.contrastText,\n      width: theme.spacing(3),\n      height: theme.spacing(3),\n      borderRadius: theme.spacing(.5),\n      margin: theme.spacing(0, .5),\n      fontSize: theme.spacing(4),\n      userSelect: \"none\",\n      cursor: \"pointer\",\n      '&:last-child': {\n        marginLeft: 0,\n      },\n    },\n    '& .needAmount': {\n      width: theme.spacing(10),\n      height: theme.spacing(3),\n      textAlignLast: \"center\",\n      '& input': {\n        direction: \"ltr\",\n        padding: theme.spacing(.25, 0),\n        '&[type=number]': {\n          MozAppearance: \"textfield\",\n        },\n        '&::-webkit-outer-spin-button, &::-webkit-inner-spin-button,': {\n          WebkitAppearance: \"none\",\n          margin: 0,\n        },\n      },\n    },\n  },\n  hideBorders: {\n    position: \"absolute\",\n    top: -2,\n    right: -1,\n    left: -1,\n    height: theme.spacing(6.25),\n    // backgroundColor: \"#f59e39\",\n    borderRadius: theme.spacing(.5, .5, 0, 0),\n    backgroundColor: theme.palette.secondary.dark,\n  },\n  selectedNeed: {\n    backgroundColor: theme.palette.secondary.dark,\n    borderBottom: \"2px solid\",\n    borderRadius: theme.spacing(.5, .5, 0, 0),\n    padding: theme.spacing(0, 2),\n    // backgroundColor: theme.palette.primary.main,\n    color: theme.palette.primary.main,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    position: \"relative\",\n    '& > .label': {\n      fontSize: theme.spacing(1.25),\n      position: \"absolute\",\n    },\n  },\n  suggestionCard: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-start\",\n    flexDirection: \"column\",\n    height: \"100%\",\n  },\n  media: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    '&.receiptOnly': {\n      justifyContent: \"center\",\n      '& $receipt': {\n        flex: \"unset\",\n      },\n    },\n  },\n  form: {\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      flex: \"0 0 65%\"\n    },\n  },\n  receipt: {\n    flex: \"0 0 28%\",\n    position: \"sticky\",\n    top: theme.spacing(10),\n    alignSelf: \"flex-start\",\n    [theme.breakpoints.down('sm')]: {\n      // display: \"none\",\n    },\n  },\n  desktopBtn: {\n    display: \"flex\",\n    '& > *': {\n      flex: 1,\n      margin: theme.spacing(2, 1),\n      '&:first-child': {\n        marginRight: theme.spacing(0),\n      },\n      '&:last-child': {\n        marginLeft: theme.spacing(0),\n      },\n    },\n    [theme.breakpoints.down('sm')]: {\n      display: \"none\",\n    },\n  },\n}));\n\nconst disasterIcons = {\n  earthquake: EarthquakeIcon,\n  flood: FloodIcon,\n  fire: FireIcon,\n  twister: TwisterIcon,\n  landslide: LandslideIcon,\n  avalanche: AvalancheIcon,\n}\n\nconst AddNeed = props => {\n  const classes = useStyles()\n  const {setContext} = useContext(Context)\n  const theme = useTheme()\n  const history = useHistory()\n  const isMobileDisplay = useMediaQuery(theme.breakpoints.down('sm'))\n  const [pageLoading, setPageLoading] = useState(true)\n  const [loading, setLoading] = useState(false)\n  const [needCategories, setNeedCategories] = useState(true)\n  const [disasterCategories, setDisasterCategories] = useState(true)\n  const [expanded, setExpanded] = React.useState('panel0')\n  const [openList, setOpenList] = useState(emptyOpenList)\n  const [isSearchMode, setIsSearchMode] = useState(false)\n  const [search, setSearch] = useState('')\n  const [need: NeedType[], setNeed] = useState([emptyNeed])\n  const [needError: NeedType[], setNeedError] = useState([emptyNeed])\n  const [disaster, setDisaster] = useState(false)\n  const [disasterError, setDisasterError] = useState(false)\n  const [showReceipt, setShowReceipt] = useState(false)\n  const [showRecentRequests, setShowRecentRequests] = useState(null)\n  const [recentRequests, setRecentRequests] = useState(null)\n  const [preSelected, setPreSelected] = useState(null)\n\n  const {open, message, type, duration, closeAlert, showAlert} = useAlert()\n  const {latitude, longitude, error} = usePosition(get_user_info().allow_location);\n\n  const getData = () => {\n    api.get(rest.getNeeds)\n      .then((res) => {\n        setNeedCategories(res.data.needsCategory)\n        setDisasterCategories(res.data.DisasterCategory)\n      })\n      .catch((err) => {\n        showAlert(err.response?.data?.error, \"error\", 3000);\n      })\n      .finally(() => setPageLoading(false))\n  }\n\n  useEffect(() => {\n    if (props.coords?.latitude && props.coords?.longitude && recentRequests === null) {\n      api.get(`${rest.recent}/${props.coords?.latitude}/${props.coords?.longitude}`)\n        .then(res => {\n          console.log(res)\n          setShowRecentRequests(res.data.status)\n          if (res.data.status) {\n            setRecentRequests(res.data.result)\n          } else {\n            getData()\n            setRecentRequests(null)\n          }\n          setPageLoading(false)\n        })\n        .catch((err) => {\n          showAlert(err.response.data.error, \"error\", 3000);\n        })\n    }\n  }, [props.coords?.latitude, props.coords?.longitude])\n\n  useEffect(() => {\n    if (showRecentRequests === false) {\n      console.log('eeeee')\n      setPageLoading(true)\n      getData()\n    }\n  }, [showRecentRequests])\n\n  useEffect(() => {\n    if (typeof needCategories === \"object\" && typeof disasterCategories === \"object\" && preSelected) {\n      selectNeed(0, preSelected[0], preSelected[1])()\n      handleDisaster(preSelected[2])()\n    }\n  }, [needCategories, disasterCategories])\n\n  // useEffect(() => {\n  //   console.log(1)\n  //   api.get(rest.getNeeds)\n  //       .then((res) => {\n  //         setNeedCategories(res.data.needsCategory)\n  //         setDisasterCategories(res.data.DisasterCategory)\n  //       })\n  //       .catch((err) => {\n  //         showAlert(err.response.data.error, \"error\", 3000);\n  //       })\n  //       .finally(() => setPageLoading(false))\n  // }, [])\n\n  useEffect(() => {\n    setContext(showReceipt ? 'تأیید اطلاعات' : 'ثبت نیاز')\n  }, [setContext, showReceipt])\n\n  const handleOpenList = (e, name) => {\n    setOpenList({\n      ...openList,\n      [name]: !openList[name],\n    })\n  };\n\n  const handleExpand = panel => (event, newExpanded) => {\n    setExpanded(newExpanded ? panel : false);\n  };\n\n  const handleDisaster = dis => () => {\n    setDisaster(disaster === dis ? false : dis)\n    setDisasterError(false)\n  };\n\n  const handleShowReceipt = () => {\n    if (checkError()) {\n      showAlert(messages.ERR_EMPTY_NEED, \"error\", 3000)\n      return\n    }\n    setShowReceipt(!showReceipt)\n  }\n\n  const addRequest = () => {\n    setNeed([...need, emptyNeed])\n    setNeedError([...needError, emptyNeed])\n    setExpanded('panel' + need.length)\n  }\n\n  const deleteRequest = index => () => {\n    setNeed([\n      ...need.slice(0, index),\n      ...need.slice(index + 1),\n    ])\n    setNeedError([\n      ...needError.slice(0, index),\n      ...needError.slice(index + 1),\n    ])\n    setExpanded(expanded && expanded.slice(5) !== \"0\" ? 'panel' + (parseInt(expanded.slice(5)) - 1) : false)\n  }\n\n  const selectNeed = (index, i, j) => () => {\n    console.log(index, i, j)\n    setNeed([\n      ...need.slice(0, index),\n      {...need[index], category: i, title: j},\n      ...need.slice(index + 1),\n    ])\n    setNeedError([\n      ...needError.slice(0, index),\n      emptyNeed,\n      ...needError.slice(index + 1),\n    ])\n    setOpenList(emptyOpenList)\n    setSearch('')\n    setIsSearchMode(false)\n  }\n\n  const setNeedInfo = index => e => {\n    setNeed([\n      ...need.slice(0, index),\n      {...need[index], [e.target.name]: e.target.value},\n      ...need.slice(index + 1),\n    ])\n    setNeedError([\n      ...needError.slice(0, index),\n      emptyNeed,\n      ...needError.slice(index + 1),\n    ])\n  }\n\n  const setNeedAmountBtn = (index, val) => () => {\n    const tempAmount = parseInt(need[index].amount) ? parseInt(need[index].amount) : 0\n\n    setNeed([\n      ...need.slice(0, index),\n      {...need[index], amount: (tempAmount + val >= 0 ? tempAmount + val : 0).toString()},\n      ...need.slice(index + 1),\n    ])\n    setNeedError([\n      ...needError.slice(0, index),\n      emptyNeed,\n      ...needError.slice(index + 1),\n    ])\n  }\n\n  const handleSliderChange = index => (event, newValue) => {\n    setNeed([\n      ...need.slice(0, index),\n      {...need[index], urgent: newValue},\n      ...need.slice(index + 1),\n    ])\n  }\n\n  const checkError = () => {\n    let errorState = []\n    let hasError = false\n\n    for (const n of need) {\n      hasError = hasError || n.amount === \"\" || parseInt(n.amount) <= 0 || n.title === \"\"\n      errorState.push({\n        ...(emptyNeed),\n        amount: n.amount === \"\" || parseInt(n.amount) <= 0,\n        title: n.title === \"\",\n      })\n    }\n    hasError = hasError || !disaster\n    if (!disaster) {\n      setDisasterError(true)\n    }\n\n    setNeedError(errorState)\n    return hasError\n  }\n\n  const submitNeed = () => {\n    setLoading(true)\n    const data = {\n      type: disaster,\n      lat: props.coords?.latitude || latitude,\n      long: props.coords?.longitude || longitude,\n      needs: need,\n    }\n    api.post(`${rest.request}/${get_user_info().id}`, data, config(\"json\"))\n      .then((res) => {\n        setLoading(false)\n        showAlert(res.data.msg, \"success\", 3000)\n        history.push(routes.DONE)\n      })\n      .catch((err) => {\n        showAlert(err.response.data.error, \"error\", 3000);\n      })\n      .finally(() => setLoading(false))\n  }\n\n  const toggleSearchMode = e => {\n    e.stopPropagation()\n    setIsSearchMode(!isSearchMode)\n    if (isSearchMode) {\n      setSearch('')\n    }\n  }\n\n  const searchNeed = e => {\n    setOpenList({...openList, menu: !!e.target.value.length})\n    setSearch(e.target.value)\n  }\n\n  const needItemForm = index => {\n    const marks = [\n      {\n        value: 1,\n        label: 'خیلی کم',\n      },\n      {\n        value: 2,\n        label: 'کم',\n      },\n      {\n        value: 3,\n        label: 'متوسط',\n      },\n      {\n        value: 4,\n        label: 'زیاد',\n      },\n      {\n        value: 5,\n        label: 'خیلی زیاد',\n      },\n    ];\n\n    return (\n      <Accordion className={classes.accordion} expanded={expanded === `panel${index}`}\n                 onChange={handleExpand(`panel${index}`)} key={index}>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon/>}\n          className={classnames('header', {\"error\": needError[index].amount || needError[index].title})}\n        >\n            <span>\n              {need[index].title !== \"\"\n                ? `درخواست برای ${needCategories[need[index].category.toString()].items[need[index].title.toString()]}`\n                : need.length > 1\n                  ? `جزئیات درخواست ${index + 1}`\n                  : `جزئیات درخواست`}\n            </span>\n          {(needError[index].amount || needError[index].title) && <ErrorRoundedIcon/>}\n        </AccordionSummary>\n        <AccordionDetails className={\"details\"}>\n          {index !== 0 && <div className={classnames(classes.needPart, \"suggest\")}>\n            <Typography>شاید به این موارد هم نیاز داشته باشید:</Typography>\n            <CardSlider>\n              {[[1, 4], [1, 2], [2, 30], [3, 50], [5, 70]].map((x, k) => (\n                <Card\n                  k={k}\n                  onClick={selectNeed(index, ...x)}\n                  selected={x[0] === need[index].category && x[1] === need[index].title}\n                >\n                  <div className={classes.suggestionCard}>\n                    <Chip\n                      label={needCategories[x[0].toString()].faName}\n                      color={x[0] === need[index].category && x[1] === need[index].title ? \"secondary\" : \"primary\"}\n                      size={\"small\"}\n                      style={{fontSize: 10}}\n                    />\n                    <div className={\"text-center\"}>{needCategories[x[0].toString()].items[x[1].toString()]}</div>\n                  </div>\n                </Card>\n              ))}\n            </CardSlider>\n          </div>}\n          <RTL>\n            <MuiThemeProvider theme={Theme}>\n              <div className={classes.needPart}>\n                <div className={classes.headerAmount}>\n                  <Typography>چه نیازی دارید؟</Typography>\n                  <div>\n                    <div className=\"amountBtn\" onClick={setNeedAmountBtn(index, 1)}>+</div>\n                    <TextField\n                      placeholder={'تعداد'}\n                      type={\"number\"}\n                      variant={\"outlined\"}\n                      size={\"small\"}\n                      inputProps={{\n                        \"min\": 0\n                      }}\n                      name={'amount'}\n                      className={\"needAmount\"}\n                      value={need[index].amount || ''}\n                      onChange={setNeedInfo(index)}\n                      error={!!needError[index].amount}\n                    />\n                    <div className=\"amountBtn\" onClick={setNeedAmountBtn(index, -1)}>-</div>\n                  </div>\n                </div>\n                <caption style={{paddingTop: 0, display: 'flex',}}>\n                  <InfoRoundedIcon/>\n                  <span>چنانچه نیاز مورد نظر شما در موارد زیر نبود، گزینه‌ی «غیره» را انتخاب نموده در قسمت توضیحات نیاز خود را شرح دهید.</span>\n                </caption>\n                {need[index].category === '' || need[index].title === '' ? (\n                  <List\n                    disablePadding\n                    className={classnames(classes.list, {\"error\": needError[index].amount || needError[index].title})}\n                    subheader={\n                      <ListSubheader\n                        className={classnames('header', {\"error\": needError[index].amount || needError[index].title})}\n                        component=\"div\"\n                        id=\"nested-list-subheader\"\n                        onClick={e => handleOpenList(e, 'menu')}\n                      >\n                        {isSearchMode\n                          ? <TextField\n                            style={{width: 150}}\n                            size={\"small\"}\n                            value={search}\n                            onChange={searchNeed}\n                            placeholder={\"عنوان نیاز\"}\n                            onClick={e => e.stopPropagation()}\n                            autoFocus\n                          />\n                          : <span>دسته‌بندی نیازمندی‌ها</span>}\n                        <div>\n                          <IconButton color={\"inherit\"} className={\"\"} onClick={toggleSearchMode}>\n                            {isSearchMode ? <CloseRoundedIcon/> : <SearchRoundedIcon/>}\n                          </IconButton>\n                          <IconButton edge={\"end\"} color={\"inherit\"}>\n                            {openList.menu ? <ExpandLess/> : <ExpandMore/>}\n                          </IconButton>\n                        </div>\n                      </ListSubheader>\n                    }\n                  >\n                    <div className={classes.hideBorders}/>\n                    <Collapse in={openList.menu} timeout=\"auto\" unmountOnExit>\n                      {Object.values(needCategories).filter(val => {\n                        return Object.values(val.items).join().indexOf(search) >= 0\n                      }).map((n, i) => (\n                        <div key={n.enName}>\n                          <ListItem button onClick={e => handleOpenList(e, n.enName)}>\n                            <ListItemText primary={n.faName}/>\n                            {openList[n.enName] ? <ExpandLess/> : <ExpandMore/>}\n                          </ListItem>\n                          <Collapse in={openList[n.enName]} timeout=\"auto\" unmountOnExit>\n                            <List component=\"div\" disablePadding>\n                              {Object.keys(n.items).filter(value => {\n                                return n.items[value].indexOf(search) >= 0\n                              }).map((item, j) => (\n                                <ListItem\n                                  className={classes.listItem}\n                                  key={j}\n                                  button\n                                  onClick={\n                                    selectNeed(index, Object.keys(needCategories).filter(t => needCategories[t] === n)[0], parseInt(item))\n                                  }\n                                >\n                                  <ListItemIcon style={{minWidth: Theme.spacing(4)}}>\n                                    <span>{j + 1}</span>\n                                  </ListItemIcon>\n                                  <ListItemText\n                                    primary={n.items[item]}/>\n                                </ListItem>\n                              ))}\n                            </List>\n                          </Collapse>\n                        </div>\n                      ))}\n                    </Collapse>\n                  </List>\n                ) : (\n                  <div className={classes.selectedNeed}>\n                    <Chip color={\"primary\"} label={needCategories[need[index].category.toString()].faName}/>\n                    <span>{needCategories[need[index].category.toString()].items[need[index].title.toString()]}</span>\n                    <IconButton edge={\"end\"} color={\"inherit\"} onClick={selectNeed(index, '', '')}>\n                      <EditRoundedIcon/>\n                    </IconButton>\n                  </div>\n                )}\n              </div>\n              <div className={classes.needPart}>\n                <Typography>نیازتان چقدر ضروری است؟</Typography>\n                <Slider\n                  min={1}\n                  max={5}\n                  step={1}\n                  marks={marks}\n                  defaultValue={1}\n                  name={'urgent'}\n                  value={need[index].urgent}\n                  onChange={handleSliderChange(index)}\n                />\n              </div>\n              <div className={classes.needPart}>\n                <Typography>آیا توضیح خاصی لازم است؟ (اختیاری)</Typography>\n                <TextField\n                  multiline\n                  variant={\"filled\"}\n                  label={\"توضیحات\"}\n                  name={'desc'}\n                  value={need[index].desc}\n                  onChange={setNeedInfo(index)}\n                />\n              </div>\n            </MuiThemeProvider>\n          </RTL>\n          {need.length > 1 && <div className={classnames(classes.needPart, \"deleteBtn\")}>\n            <Button variant={\"outlined\"} color={\"primary\"} size={\"small\"} onClick={deleteRequest(index)}>\n              حذف درخواست\n            </Button>\n          </div>}\n        </AccordionDetails>\n      </Accordion>\n    )\n  }\n\n  return pageLoading ? <Loader/> : (\n    showRecentRequests ? (\n      <RecentNeeds\n        requests={recentRequests}\n        select={(i, j, k) => setPreSelected([i, j, k])}\n        close={() => setShowRecentRequests(false)}\n      />\n    ) : (\n      <div className={classes.container}>\n        <Helmet><title>{showReceipt ? 'تأیید اطلاعات' : 'ثبت نیاز'}</title></Helmet>\n        <div className={classes.title}>\n          <Typography variant={\"h3\"}>{showReceipt ? 'تأیید اطلاعات' : 'ثبت نیاز'}</Typography>\n        </div>\n        <hr/>\n\n        <div className={classnames(classes.media, {\"receiptOnly\": showReceipt})}>\n          {!showReceipt && <div className={classes.form}>\n            <Typography color={disasterError ? \"error\" : \"inherit\"}>نوع حادثه را مشخص کنید</Typography>\n            <CardSlider>\n              {Object.keys(disasterCategories).map((d, i) => (\n                <Card\n                  k={i}\n                  icon={disasterIcons[d]}\n                  selected={disaster === d}\n                  onClick={handleDisaster(d)}\n                  error={disasterError}\n                >\n                  <div>{disasterCategories[d]}</div>\n                </Card>\n              ))}\n            </CardSlider>\n\n            <Typography style={{marginTop: Theme.spacing(2)}} gutterBottom>درخواست‌های خود را با وارد کردن اطلاعات\n              خواسته‌شده ثبت کنید</Typography>\n\n            {need.map((n, i) => needItemForm(i))}\n\n          </div>}\n          {(showReceipt || !isMobileDisplay) && <div className={classes.receipt}>\n            <Receipt\n              disasterCategories={disasterCategories}\n              needCategories={needCategories}\n              receipts={need}\n              type={disaster}\n              current={expanded ? parseInt(expanded.slice(5)) : 0}\n            />\n            <div className={classes.desktopBtn}>\n              <CustomButton variant={\"contained\"} onClick={showReceipt ? handleShowReceipt : addRequest}>\n                {showReceipt ? 'ویرایش' : 'درخواست جدید'}\n              </CustomButton>\n              <CustomButton variant={\"contained\"} onClick={showReceipt ? submitNeed : handleShowReceipt}>\n                {loading ? <CircularProgress size={26}/> : showReceipt ? 'تأیید و ثبت' : 'مرحله‌ی بعد'}\n              </CustomButton>\n            </div>\n          </div>}\n        </div>\n\n        {isMobileDisplay && <Fab buttons={[\n          {\n            title: showReceipt ? 'ویرایش' : 'درخواست جدید',\n            onClickFn: showReceipt ? handleShowReceipt : addRequest,\n          },\n          {\n            loading: loading,\n            title: showReceipt ? 'تأیید و ثبت' : 'مرحله‌ی بعد',\n            onClickFn: showReceipt ? submitNeed : handleShowReceipt,\n          },\n        ]}/>}\n\n        <FloatingAlert text={message} open={open} handleClose={closeAlert} duration={duration} type={type}/>\n      </div>\n    )\n  );\n};\n\nAddNeed.propTypes = {};\n\nexport default geolocated({\n  positionOptions: {\n    enableHighAccuracy: false,\n  },\n  userDecisionTimeout: 5000,\n})(AddNeed);","/home/pmoghadam/WebstormProjects/crisis-management-system/src/assets/categories.js",[],["302","303"],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/types/needType.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/assets/icons/iconComponents/FloodIcon.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/assets/icons/iconComponents/FireIcon.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/assets/icons/iconComponents/EarthquakeIcon.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/assets/icons/iconComponents/AvalancheIcon.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/assets/icons/iconComponents/TwisterIcon.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/assets/icons/iconComponents/LandslideIcon.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/Receipt.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/Done.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/hooks/useAlert.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/FloatingAlert.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/Loader.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/Popup.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/Context.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/table/DataTable.js",["304"],"import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport DataTableRow from \"./DataTableRow\";\nimport DataTableHead from \"./DataTableHead\";\nimport Loader from \"../common/Loader\";\nimport { CircularProgress } from \"@material-ui/core\";\n\n\nconst columns = [\n  {id: 'name', numeric: false, disablePadding: false, label: 'عنوان نیاز'},\n  {id: 'amount', numeric: true, disablePadding: false, label: 'تعداد'},\n  {id: 'urgent', numeric: true, disablePadding: false, label: 'ضروری'},\n  {id: 'askDate', numeric: false, disablePadding: false, label: 'تاریخ درخواست'},\n  {id: 'changeDate', numeric: false, disablePadding: false, label: 'آخرین بروزرسانی'},\n  {id: 'helpDate', numeric: false, disablePadding: false, label: 'تاریخ امدادرسانی'},\n  {id: 'status', numeric: false, disablePadding: false, label: 'وضعیت'},\n  {id: 'type', numeric: false, disablePadding: false, label: 'نوع حادثه'},\n  {id: 'desc', numeric: false, disablePadding: false, label: 'توضیحات'},\n];\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    direction: \"rtl\",\n    marginBottom: theme.spacing(2),\n    backgroundColor: theme.palette.secondary.light,\n  },\n  table: {\n    minWidth: 750,\n  },\n  footer: {\n    '& > div': {\n      display: \"flex\",\n      padding: theme.spacing(0, 2),\n      '& > *': {\n        flex: \"unset\",\n        '&:nth-child(3)': {\n          margin: theme.spacing(0, 1, 0, 2),\n        },\n        '&:last-child': {\n          marginRight: \"auto\",\n          marginLeft: 0,\n        },\n      },\n    },\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nconst descendingComparator = (a, b, orderBy) => {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n};\n\nconst getComparator = (order, orderBy) => order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n\nconst stableSort = (array, comparator) => {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) {\n      return order;\n    }\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n};\n\nconst DataTable = props => {\n  const classes = useStyles();\n  const [order, setOrder] = useState('asc');\n  const [orderBy, setOrderBy] = useState('');\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(order === 'desc' && orderBy === property ? '' : property);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.rows.length - page * rowsPerPage);\n\n  return (\n      <div className={classes.root}>\n        <Paper className={classes.paper}>\n          <Toolbar>\n            <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n              {props.title}\n            </Typography>\n          </Toolbar>\n          <TableContainer>\n            <Table\n                className={classes.table}\n                aria-labelledby=\"tableTitle\"\n                size={'medium'}\n                aria-label=\"enhanced table\"\n            >\n              <DataTableHead\n                  columns={columns}\n                  classes={classes}\n                  order={order}\n                  orderBy={orderBy}\n                  onRequestSort={handleRequestSort}\n                  rowCount={props.rows.length}\n              />\n              <TableBody>\n                {props.loading ? <CircularProgress size={26}/> : stableSort(props.rows, getComparator(order, orderBy))\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                  .map(row => <DataTableRow k={row.name} row={row}/>)}\n                {props.showEmptyRows && emptyRows > 0 && (\n                    <TableRow style={{height: 53 * emptyRows}}>\n                      <TableCell colSpan={6}/>\n                    </TableRow>\n                )}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <TablePagination\n              rowsPerPageOptions={[5, 10, 25, 50]}\n              component=\"div\"\n              count={props.rows.length}\n              rowsPerPage={rowsPerPage}\n              labelDisplayedRows={({from, to, count}) => `[${from} تا ${to}] از ${count}`}\n              labelRowsPerPage={'تعداد:'}\n              page={page}\n              onChangePage={handleChangePage}\n              onChangeRowsPerPage={handleChangeRowsPerPage}\n              className={classes.footer}\n          />\n        </Paper>\n      </div>\n  );\n};\n\nDataTable.propTypes = {\n  title: PropTypes.string,\n  showEmptyRows: PropTypes.bool,\n  rows: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    amount: PropTypes.number.isRequired,\n    urgent: PropTypes.string.isRequired,\n    askDate: PropTypes.string.isRequired,\n    changeDate: PropTypes.string,\n    helpDate: PropTypes.string,\n    type: PropTypes.string,\n    status: PropTypes.string.isRequired,\n    desc: PropTypes.string.isRequired,\n    info: PropTypes.shape({\n      address: PropTypes.string.isRequired,\n      location: PropTypes.shape({\n        lat: PropTypes.string,\n        long: PropTypes.string,\n      }),\n    }).isRequired,\n  })).isRequired,\n}\n\nexport default DataTable;","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/table/DataTableHead.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/table/DataTableRow.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/buttons/FAB.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/buttons/CustomButton.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/card/CardSlider.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/card/Card.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/forms/SignUpForm.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/forms/OtpForm.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/forms/SignInForm.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/NotFound.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/serviceWorker.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/Footer.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/helpers/api.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/helpers/PrivateRoute.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/AccessDenied.js",["305"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\n\nconst AccessDenied = props => {\n\n  return (\n      <Dialog\n          open={props.open}\n          onClose={props.handleClose}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n      >\n        {/*<DialogTitle id=\"alert-dialog-title\">خطای دسترسی</DialogTitle>*/}\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            برای ورود به این قسمت باید وارد حساب کاربری خود شوید و اگر حساب کاربری ندارید ثبت‌نام کنید.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={props.handleClose} color=\"primary\">\n            انصراف\n          </Button>\n          <Button onClick={() => {\n            props.handleClose()\n            props.action()\n          }} color=\"primary\" variant={\"contained\"} autoFocus>\n            ورود | ثبت‌نام\n          </Button>\n        </DialogActions>\n      </Dialog>\n  );\n};\n\nAccessDenied.propTypes = {\n  open: PropTypes.bool,\n  action: PropTypes.func,\n  handleClose: PropTypes.func,\n};\n\nexport default AccessDenied;","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/AdminPanel.js",["306","307","308","309"],"import React from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles, Typography, useMediaQuery, useTheme } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({}));\n\nconst AdminPanel = () => {\n  const classes = useStyles()\n  const theme = useTheme()\n  const history = useHistory()\n  const isMobileDisplay = useMediaQuery(theme.breakpoints.down('sm'))\n\n  return (\n    <div>\n      admin\n    </div>\n  );\n};\n\nexport default AdminPanel;","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/RecentNeeds.js",["310","311","312","313","314"],"import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useMediaQuery, useTheme, makeStyles, Chip, Typography } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport { api, rest } from \"../helpers/api\";\nimport Card from \"./card/Card\";\nimport CardSlider from \"./card/CardSlider\";\nimport { CustomButton } from \"./buttons/CustomButton\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    paddingBottom: theme.spacing(9),\n  },\n  wrapper: {\n    backgroundColor: theme.palette.secondary.light,\n    display: \"flex\",\n    flexDirection: \"column\",\n    border: \"1px solid\",\n    borderColor: theme.palette.primary.main,\n    borderRadius: theme.spacing(.5),\n    color: theme.palette.primary.main,\n    padding: theme.spacing(1.5),\n    margin: theme.spacing(1, 0),\n    width: 'calc(100vw - 32px)',\n    maxWidth: theme.spacing(56.25),\n  },\n  suggestionCard: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-start\",\n    flexDirection: \"column\",\n    height: \"100%\",\n  },\n  btn : {\n    width: \"100%\",\n  },\n}));\n\nconst RecentNeeds = props => {\n  const classes = useStyles()\n  const theme = useTheme()\n  const history = useHistory()\n  const isMobileDisplay = useMediaQuery(theme.breakpoints.down('sm'))\n\n  return (\n    <div className={classes.container}>\n      <Typography>\n        اخیراً در حوادث اطراف شما اقلام زیر درخواست شده‌اند:\n      </Typography>\n      {Object.keys(props.requests).map((req, i) => (\n        <div className={classes.wrapper}>\n          <span>{req}</span>\n          <CardSlider>\n            {props.requests[req].slice(0, 4).map((item, k) => (\n              <Card\n                k={k}\n                onClick={() => {\n                  props.close()\n                  props.select(item.category.id, item.need.id, item.disaster.en_title)\n                  // props.select(item.category.id, item.need.id)()\n                }}\n              >\n                <div className={classes.suggestionCard}>\n                  <Chip\n                    label={item.category.title}\n                    color={\"primary\"}\n                    size={\"small\"}\n                    style={{fontSize: 10}}\n                  />\n                  <div className={\"text-center\"}>{item.need.title}</div>\n                </div>\n              </Card>\n            ))}\n          </CardSlider>\n        </div>\n      ))}\n      <CustomButton variant={\"contained\"} onClick={props.close} className={classes.btn}>رد کردن</CustomButton>\n    </div>\n  );\n};\n\nRecentNeeds.propTypes = {\n  requests: PropTypes.object,\n  select: PropTypes.func,\n};\n\nexport default RecentNeeds;",{"ruleId":"315","replacedBy":"316"},{"ruleId":"317","replacedBy":"318"},{"ruleId":"319","severity":1,"message":"320","line":9,"column":8,"nodeType":"321","messageId":"322","endLine":9,"endColumn":11},{"ruleId":"319","severity":1,"message":"323","line":12,"column":8,"nodeType":"321","messageId":"322","endLine":12,"endColumn":14},{"ruleId":"319","severity":1,"message":"324","line":13,"column":8,"nodeType":"321","messageId":"322","endLine":13,"endColumn":18},{"ruleId":"319","severity":1,"message":"325","line":2,"column":8,"nodeType":"321","messageId":"322","endLine":2,"endColumn":17},{"ruleId":"319","severity":1,"message":"326","line":3,"column":10,"nodeType":"321","messageId":"322","endLine":3,"endColumn":16},{"ruleId":"319","severity":1,"message":"327","line":6,"column":8,"nodeType":"321","messageId":"322","endLine":6,"endColumn":13},{"ruleId":"319","severity":1,"message":"328","line":5,"column":11,"nodeType":"321","messageId":"322","endLine":5,"endColumn":18},{"ruleId":"319","severity":1,"message":"329","line":7,"column":3,"nodeType":"321","messageId":"322","endLine":7,"endColumn":7},{"ruleId":"319","severity":1,"message":"330","line":8,"column":3,"nodeType":"321","messageId":"322","endLine":8,"endColumn":11},{"ruleId":"319","severity":1,"message":"331","line":9,"column":3,"nodeType":"321","messageId":"322","endLine":9,"endColumn":15},{"ruleId":"319","severity":1,"message":"332","line":9,"column":17,"nodeType":"321","messageId":"322","endLine":9,"endColumn":32},{"ruleId":"319","severity":1,"message":"333","line":13,"column":8,"nodeType":"321","messageId":"322","endLine":13,"endColumn":17},{"ruleId":"319","severity":1,"message":"334","line":1,"column":17,"nodeType":"321","messageId":"322","endLine":1,"endColumn":25},{"ruleId":"319","severity":1,"message":"335","line":5,"column":8,"nodeType":"321","messageId":"322","endLine":5,"endColumn":23},{"ruleId":"315","replacedBy":"336"},{"ruleId":"317","replacedBy":"337"},{"ruleId":"319","severity":1,"message":"338","line":1,"column":17,"nodeType":"321","messageId":"322","endLine":1,"endColumn":27},{"ruleId":"319","severity":1,"message":"339","line":9,"column":26,"nodeType":"321","messageId":"322","endLine":9,"endColumn":30},{"ruleId":"319","severity":1,"message":"340","line":10,"column":10,"nodeType":"321","messageId":"322","endLine":10,"endColumn":17},{"ruleId":"341","severity":1,"message":"342","line":99,"column":6,"nodeType":"343","endLine":99,"endColumn":31,"suggestions":"344"},{"ruleId":"319","severity":1,"message":"345","line":14,"column":25,"nodeType":"321","messageId":"322","endLine":14,"endColumn":37},{"ruleId":"319","severity":1,"message":"346","line":99,"column":10,"nodeType":"321","messageId":"322","endLine":99,"endColumn":17},{"ruleId":"341","severity":1,"message":"347","line":126,"column":6,"nodeType":"343","endLine":126,"endColumn":8,"suggestions":"348"},{"ruleId":"319","severity":1,"message":"349","line":133,"column":31,"nodeType":"321","messageId":"322","endLine":133,"endColumn":36},{"ruleId":"319","severity":1,"message":"350","line":6,"column":3,"nodeType":"321","messageId":"322","endLine":6,"endColumn":12},{"ruleId":"319","severity":1,"message":"351","line":13,"column":3,"nodeType":"321","messageId":"322","endLine":13,"endColumn":10},{"ruleId":"319","severity":1,"message":"340","line":21,"column":10,"nodeType":"321","messageId":"322","endLine":21,"endColumn":17},{"ruleId":"319","severity":1,"message":"326","line":4,"column":3,"nodeType":"321","messageId":"322","endLine":4,"endColumn":9},{"ruleId":"319","severity":1,"message":"352","line":5,"column":3,"nodeType":"321","messageId":"322","endLine":5,"endColumn":11},{"ruleId":"319","severity":1,"message":"353","line":7,"column":3,"nodeType":"321","messageId":"322","endLine":7,"endColumn":19},{"ruleId":"319","severity":1,"message":"354","line":16,"column":10,"nodeType":"321","messageId":"322","endLine":16,"endColumn":22},{"ruleId":"341","severity":1,"message":"355","line":149,"column":6,"nodeType":"343","endLine":149,"endColumn":8,"suggestions":"356"},{"ruleId":"319","severity":1,"message":"357","line":185,"column":9,"nodeType":"321","messageId":"322","endLine":185,"endColumn":29},{"ruleId":"319","severity":1,"message":"349","line":322,"column":10,"nodeType":"321","messageId":"322","endLine":322,"endColumn":15},{"ruleId":"341","severity":1,"message":"358","line":355,"column":6,"nodeType":"343","endLine":355,"endColumn":55,"suggestions":"359"},{"ruleId":"341","severity":1,"message":"360","line":363,"column":6,"nodeType":"343","endLine":363,"endColumn":26,"suggestions":"361"},{"ruleId":"341","severity":1,"message":"362","line":370,"column":6,"nodeType":"343","endLine":370,"endColumn":42,"suggestions":"363"},{"ruleId":"315","replacedBy":"364"},{"ruleId":"317","replacedBy":"365"},{"ruleId":"319","severity":1,"message":"366","line":15,"column":8,"nodeType":"321","messageId":"322","endLine":15,"endColumn":14},{"ruleId":"319","severity":1,"message":"367","line":3,"column":67,"nodeType":"321","messageId":"322","endLine":3,"endColumn":78},{"ruleId":"319","severity":1,"message":"368","line":3,"column":22,"nodeType":"321","messageId":"322","endLine":3,"endColumn":32},{"ruleId":"319","severity":1,"message":"369","line":8,"column":9,"nodeType":"321","messageId":"322","endLine":8,"endColumn":16},{"ruleId":"319","severity":1,"message":"370","line":10,"column":9,"nodeType":"321","messageId":"322","endLine":10,"endColumn":16},{"ruleId":"319","severity":1,"message":"371","line":11,"column":9,"nodeType":"321","messageId":"322","endLine":11,"endColumn":24},{"ruleId":"319","severity":1,"message":"372","line":1,"column":17,"nodeType":"321","messageId":"322","endLine":1,"endColumn":26},{"ruleId":"319","severity":1,"message":"373","line":5,"column":10,"nodeType":"321","messageId":"322","endLine":5,"endColumn":13},{"ruleId":"319","severity":1,"message":"339","line":5,"column":15,"nodeType":"321","messageId":"322","endLine":5,"endColumn":19},{"ruleId":"319","severity":1,"message":"370","line":42,"column":9,"nodeType":"321","messageId":"322","endLine":42,"endColumn":16},{"ruleId":"319","severity":1,"message":"371","line":43,"column":9,"nodeType":"321","messageId":"322","endLine":43,"endColumn":24},"no-native-reassign",["374"],"no-negated-in-lhs",["375"],"no-unused-vars","'RTL' is defined but never used.","Identifier","unusedVar","'styles' is defined but never used.","'classNames' is defined but never used.","'PropTypes' is defined but never used.","'Button' is defined but never used.","'Hands' is defined but never used.","'Divider' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'ListItemText' is defined but never used.","'SwipeableDrawer' is defined but never used.","'CloseIcon' is defined but never used.","'useState' is defined but never used.","'reportWebVitals' is defined but never used.",["374"],["375"],"'useContext' is defined but never used.","'rest' is defined but never used.","'Context' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setIsAdmin'. Either include it or remove the dependency array.","ArrayExpression",["376"],"'UserInfoType' is defined but never used.","'context' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["377"],"'error' is assigned a value but never used.","'Container' is defined but never used.","'Toolbar' is defined but never used.","'Checkbox' is defined but never used.","'FormControlLabel' is defined but never used.","'CustomButton' is defined but never used.","React Hook useEffect has missing dependencies: 'loading', 'setIsAdmin', and 'showAlert'. Either include them or remove the dependency array. You can also do a functional update 'setLoading(l => ...)' if you only need 'loading' in the 'setLoading' call.",["378"],"'updateLocationAccess' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getData', 'recentRequests', and 'showAlert'. Either include them or remove the dependency array.",["379"],"React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["380"],"React Hook useEffect has missing dependencies: 'handleDisaster', 'preSelected', and 'selectNeed'. Either include them or remove the dependency array.",["381"],["374"],["375"],"'Loader' is defined but never used.","'DialogTitle' is defined but never used.","'Typography' is defined but never used.","'classes' is assigned a value but never used.","'history' is assigned a value but never used.","'isMobileDisplay' is assigned a value but never used.","'useEffect' is defined but never used.","'api' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"382","fix":"383"},{"desc":"384","fix":"385"},{"desc":"386","fix":"387"},{"desc":"388","fix":"389"},{"desc":"390","fix":"391"},{"desc":"392","fix":"393"},"Update the dependencies array to be: [props.location.pathname, setIsAdmin]",{"range":"394","text":"395"},"Update the dependencies array to be: [history]",{"range":"396","text":"397"},"Update the dependencies array to be: [loading, setIsAdmin, showAlert]",{"range":"398","text":"399"},"Update the dependencies array to be: [getData, props.coords?.latitude, props.coords?.longitude, recentRequests, showAlert]",{"range":"400","text":"401"},"Update the dependencies array to be: [getData, showRecentRequests]",{"range":"402","text":"403"},"Update the dependencies array to be: [needCategories, disasterCategories, preSelected, selectNeed, handleDisaster]",{"range":"404","text":"405"},[2683,2708],"[props.location.pathname, setIsAdmin]",[3978,3980],"[history]",[4334,4336],"[loading, setIsAdmin, showAlert]",[10157,10206],"[getData, props.coords?.latitude, props.coords?.longitude, recentRequests, showAlert]",[10350,10370],"[getData, showRecentRequests]",[10600,10636],"[needCategories, disasterCategories, preSelected, selectNeed, handleDisaster]"]