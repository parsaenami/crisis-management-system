[{"/home/pmoghadam/WebstormProjects/help/src/index.js":"1","/home/pmoghadam/WebstormProjects/help/src/reportWebVitals.js":"2","/home/pmoghadam/WebstormProjects/help/src/App.js":"3","/home/pmoghadam/WebstormProjects/help/src/components/Home.js":"4","/home/pmoghadam/WebstormProjects/help/src/components/common/Header.js":"5","/home/pmoghadam/WebstormProjects/help/src/components/helpers/Theme.js":"6","/home/pmoghadam/WebstormProjects/help/src/components/helpers/RTL.js":"7","/home/pmoghadam/WebstormProjects/help/src/components/helpers/HeaderScrollEffect.js":"8","/home/pmoghadam/WebstormProjects/help/src/components/common/CustomButton.js":"9","/home/pmoghadam/WebstormProjects/help/src/assets/routes.js":"10","/home/pmoghadam/WebstormProjects/help/src/components/Drawer.js":"11","/home/pmoghadam/WebstormProjects/crisis-management-system/src/index.js":"12","/home/pmoghadam/WebstormProjects/crisis-management-system/src/reportWebVitals.js":"13","/home/pmoghadam/WebstormProjects/crisis-management-system/src/App.js":"14","/home/pmoghadam/WebstormProjects/crisis-management-system/src/assets/routes.js":"15","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/Home.js":"16","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/Header.js":"17","/home/pmoghadam/WebstormProjects/crisis-management-system/src/hooks/usePosition.js":"18","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/About.js":"19","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/OtpInput.js":"20","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/Account.js":"21","/home/pmoghadam/WebstormProjects/crisis-management-system/src/types/userInfoType.js":"22","/home/pmoghadam/WebstormProjects/crisis-management-system/src/assets/messages.js":"23","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/NavDrawer.js":"24","/home/pmoghadam/WebstormProjects/crisis-management-system/src/helpers/Theme.js":"25","/home/pmoghadam/WebstormProjects/crisis-management-system/src/helpers/RTL.js":"26","/home/pmoghadam/WebstormProjects/crisis-management-system/src/helpers/HeaderScrollEffect.js":"27","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/Profile.js":"28","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/AddNeed.js":"29","/home/pmoghadam/WebstormProjects/crisis-management-system/src/assets/categories.js":"30","/home/pmoghadam/WebstormProjects/crisis-management-system/src/types/needType.js":"31","/home/pmoghadam/WebstormProjects/crisis-management-system/src/assets/icons/iconComponents/FloodIcon.js":"32","/home/pmoghadam/WebstormProjects/crisis-management-system/src/assets/icons/iconComponents/FireIcon.js":"33","/home/pmoghadam/WebstormProjects/crisis-management-system/src/assets/icons/iconComponents/EarthquakeIcon.js":"34","/home/pmoghadam/WebstormProjects/crisis-management-system/src/assets/icons/iconComponents/AvalancheIcon.js":"35","/home/pmoghadam/WebstormProjects/crisis-management-system/src/assets/icons/iconComponents/TwisterIcon.js":"36","/home/pmoghadam/WebstormProjects/crisis-management-system/src/assets/icons/iconComponents/LandslideIcon.js":"37","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/Receipt.js":"38","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/Done.js":"39","/home/pmoghadam/WebstormProjects/crisis-management-system/src/hooks/useAlert.js":"40","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/FloatingAlert.js":"41","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/Loader.js":"42","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/Popup.js":"43","/home/pmoghadam/WebstormProjects/crisis-management-system/src/Context.js":"44","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/table/DataTable.js":"45","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/table/DataTableHead.js":"46","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/table/DataTableRow.js":"47","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/NotFound.js":"48","/home/pmoghadam/WebstormProjects/crisis-management-system/src/serviceWorker.js":"49","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/Footer.js":"50","/home/pmoghadam/WebstormProjects/crisis-management-system/src/helpers/api.js":"51","/home/pmoghadam/WebstormProjects/crisis-management-system/src/helpers/PrivateRoute.js":"52","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/AccessDenied.js":"53","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/AdminPanel.js":"54","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/RecentNeeds.js":"55","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/admin/Dashboard.js":"56","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/DataChart.js":"57","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/admin/Users.js":"58","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/admin/Requests.js":"59","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/table/AdminDataTableRow.js":"60","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/admin/Needs.js":"61","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/forms/OtpForm.js":"62","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/forms/SignInForm.js":"63","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/forms/SignUpForm.js":"64","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/UserListRow.js":"65","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/NeedListRow.js":"66","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/card/CardSlider.js":"67","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/card/Card.js":"68","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/buttons/FAB.js":"69","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/buttons/CustomButton.js":"70","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/RequestMap.js":"71"},{"size":586,"mtime":1616398485398,"results":"72","hashOfConfig":"73"},{"size":362,"mtime":1616398485398,"results":"74","hashOfConfig":"73"},{"size":1257,"mtime":1616404252778,"results":"75","hashOfConfig":"73"},{"size":1905,"mtime":1616398485398,"results":"76","hashOfConfig":"73"},{"size":1530,"mtime":1616405159633,"results":"77","hashOfConfig":"73"},{"size":769,"mtime":1616404268601,"results":"78","hashOfConfig":"73"},{"size":592,"mtime":1616398485398,"results":"79","hashOfConfig":"73"},{"size":571,"mtime":1616398485398,"results":"80","hashOfConfig":"73"},{"size":511,"mtime":1616398485398,"results":"81","hashOfConfig":"73"},{"size":61,"mtime":1616404207087,"results":"82","hashOfConfig":"73"},{"size":1775,"mtime":1616405222756,"results":"83","hashOfConfig":"73"},{"size":869,"mtime":1629451155710,"results":"84","hashOfConfig":"85"},{"size":362,"mtime":1616427207741,"results":"86","hashOfConfig":"85"},{"size":2809,"mtime":1629447087247,"results":"87","hashOfConfig":"85"},{"size":185,"mtime":1629066153691,"results":"88","hashOfConfig":"85"},{"size":4521,"mtime":1629670712464,"results":"89","hashOfConfig":"85"},{"size":6421,"mtime":1629469987958,"results":"90","hashOfConfig":"85"},{"size":1020,"mtime":1629447068135,"results":"91","hashOfConfig":"85"},{"size":1869,"mtime":1617264662959,"results":"92","hashOfConfig":"85"},{"size":1754,"mtime":1629446939018,"results":"93","hashOfConfig":"85"},{"size":13440,"mtime":1629447542581,"results":"94","hashOfConfig":"85"},{"size":406,"mtime":1617391951648,"results":"95","hashOfConfig":"85"},{"size":1228,"mtime":1629154288099,"results":"96","hashOfConfig":"85"},{"size":4468,"mtime":1629446393428,"results":"97","hashOfConfig":"85"},{"size":858,"mtime":1629158316065,"results":"98","hashOfConfig":"85"},{"size":592,"mtime":1616427207741,"results":"99","hashOfConfig":"85"},{"size":517,"mtime":1617011124559,"results":"100","hashOfConfig":"85"},{"size":8211,"mtime":1629479006812,"results":"101","hashOfConfig":"85"},{"size":28929,"mtime":1631058047025,"results":"102","hashOfConfig":"85"},{"size":3005,"mtime":1616767823864,"results":"103","hashOfConfig":"85"},{"size":216,"mtime":1616750248027,"results":"104","hashOfConfig":"85"},{"size":4104,"mtime":1616674128194,"results":"105","hashOfConfig":"85"},{"size":3386,"mtime":1616674143678,"results":"106","hashOfConfig":"85"},{"size":3117,"mtime":1616674220339,"results":"107","hashOfConfig":"85"},{"size":4511,"mtime":1616708153840,"results":"108","hashOfConfig":"85"},{"size":3059,"mtime":1616674315844,"results":"109","hashOfConfig":"85"},{"size":3472,"mtime":1616708153824,"results":"110","hashOfConfig":"85"},{"size":6320,"mtime":1617397657082,"results":"111","hashOfConfig":"85"},{"size":2654,"mtime":1629447542605,"results":"112","hashOfConfig":"85"},{"size":751,"mtime":1629447068127,"results":"113","hashOfConfig":"85"},{"size":1217,"mtime":1616794714946,"results":"114","hashOfConfig":"85"},{"size":469,"mtime":1616868965175,"results":"115","hashOfConfig":"85"},{"size":1326,"mtime":1629405280874,"results":"116","hashOfConfig":"85"},{"size":131,"mtime":1629063425212,"results":"117","hashOfConfig":"85"},{"size":7337,"mtime":1629446938954,"results":"118","hashOfConfig":"85"},{"size":2000,"mtime":1616595766388,"results":"119","hashOfConfig":"85"},{"size":5310,"mtime":1629448718019,"results":"120","hashOfConfig":"85"},{"size":1300,"mtime":1629447542565,"results":"121","hashOfConfig":"85"},{"size":5204,"mtime":1617362094268,"results":"122","hashOfConfig":"85"},{"size":1005,"mtime":1617264662963,"results":"123","hashOfConfig":"85"},{"size":1665,"mtime":1629479227759,"results":"124","hashOfConfig":"85"},{"size":680,"mtime":1629447068111,"results":"125","hashOfConfig":"85"},{"size":1379,"mtime":1629446393436,"results":"126","hashOfConfig":"85"},{"size":3697,"mtime":1631058465439,"results":"127","hashOfConfig":"85"},{"size":2524,"mtime":1629447542597,"results":"128","hashOfConfig":"85"},{"size":5203,"mtime":1629447541565,"results":"129","hashOfConfig":"85"},{"size":1521,"mtime":1629364584990,"results":"130","hashOfConfig":"85"},{"size":4219,"mtime":1629447539325,"results":"131","hashOfConfig":"85"},{"size":3264,"mtime":1629446393412,"results":"132","hashOfConfig":"85"},{"size":7099,"mtime":1629448718035,"results":"133","hashOfConfig":"85"},{"size":8166,"mtime":1629447539317,"results":"134","hashOfConfig":"85"},{"size":1232,"mtime":1629447542573,"results":"135","hashOfConfig":"85"},{"size":2357,"mtime":1629447542541,"results":"136","hashOfConfig":"85"},{"size":3783,"mtime":1629447542593,"results":"137","hashOfConfig":"85"},{"size":2615,"mtime":1629446938982,"results":"138","hashOfConfig":"85"},{"size":2890,"mtime":1629446415725,"results":"139","hashOfConfig":"85"},{"size":472,"mtime":1616708074869,"results":"140","hashOfConfig":"85"},{"size":1885,"mtime":1617267616402,"results":"141","hashOfConfig":"85"},{"size":756,"mtime":1629446393388,"results":"142","hashOfConfig":"85"},{"size":415,"mtime":1616792806629,"results":"143","hashOfConfig":"85"},{"size":6330,"mtime":1631058465419,"results":"144","hashOfConfig":"85"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},"mcjzsk",{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"147"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},"1hsr5lm",{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"171"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"171"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"171"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"171"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"171"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"171"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"171"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"171"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"171"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"171"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/pmoghadam/WebstormProjects/help/src/index.js",[],["302","303"],"/home/pmoghadam/WebstormProjects/help/src/reportWebVitals.js",[],"/home/pmoghadam/WebstormProjects/help/src/App.js",["304","305","306"],"/home/pmoghadam/WebstormProjects/help/src/components/Home.js",["307","308","309"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Typography } from \"@material-ui/core\";\nimport HealingIcon from '@material-ui/icons/Healing';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Hands from '../assets/icons/helping-hand.svg';\nimport { CustomButton } from \"./common/CustomButton\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100%\",\n  },\n  icon: {\n    fontSize: theme.spacing(8),\n    margin: theme.spacing(2, 0),\n    color: theme.palette.text.secondary,\n  },\n  title: {\n    textAlign: \"center\",\n    fontSize: theme.spacing(5),\n    fontWeight: \"bold\",\n    color: theme.palette.text.secondary,\n  },\n  image: {\n    width: theme.spacing(25),\n    height: theme.spacing(25),\n    margin: theme.spacing(1, 0),\n  },\n  hr: {\n    color: theme.palette.text.secondary,\n  },\n  text: {\n    color: theme.palette.text.secondary,\n    fontSize: theme.spacing(2.5),\n    textAlign: \"center\",\n    textAlignLast: \"center\",\n    margin: theme.spacing(6, 0),\n  },\n  btn: {\n    width: \"100%\",\n    margin: theme.spacing(2, 0),\n  }\n}));\n\nconst Home = props => {\n  const classes = useStyles();\n\n  return (\n      <>\n        <HealingIcon className={classes.icon}/>\n        <Typography variant=\"h4\" className={classes.title}>\n          سامانه‌ی ثبت نیازمندی‌ها\n        </Typography>\n        {/*<hr className={classes.hr}/>*/}\n        {/*<img className={classes.image} src={Hands} alt=\"hands\"/>*/}\n        <Typography variant=\"span\" className={classes.text}>\n          در این سامانه شما می‌توانید در زمان وقوع بحران نیازهای خود را وارد کنید تا در اسرع وقت، برطرف شود.\n        </Typography>\n        <CustomButton className={classes.btn} variant={\"contained\"}>شروع ثبت نیاز</CustomButton>\n      </>\n  );\n};\n\nHome.propTypes = {};\n\nexport default Home;","/home/pmoghadam/WebstormProjects/help/src/components/common/Header.js",["310","311","312","313","314","315"],"/home/pmoghadam/WebstormProjects/help/src/components/helpers/Theme.js",[],"/home/pmoghadam/WebstormProjects/help/src/components/helpers/RTL.js",[],"/home/pmoghadam/WebstormProjects/help/src/components/helpers/HeaderScrollEffect.js",[],"/home/pmoghadam/WebstormProjects/help/src/components/common/CustomButton.js",[],"/home/pmoghadam/WebstormProjects/help/src/assets/routes.js",[],"/home/pmoghadam/WebstormProjects/help/src/components/Drawer.js",["316"],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/index.js",[],["317","318"],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/reportWebVitals.js",[],["319","320"],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/App.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/assets/routes.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/Home.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/Header.js",["321"],"import React, { useContext, useEffect, useState } from 'react';\nimport { NavLink, useHistory } from \"react-router-dom\";\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport {\n  AppBar,\n  Button,\n  Container,\n  IconButton,\n  Toolbar,\n  Typography,\n  useMediaQuery,\n  useScrollTrigger,\n  useTheme\n} from \"@material-ui/core\";\nimport MenuRoundedIcon from '@material-ui/icons/MenuRounded';\nimport { HeaderScrollEffect } from \"../../helpers/HeaderScrollEffect\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport NavDrawer from \"./NavDrawer\";\nimport { routes } from \"../../assets/routes\";\nimport Logo from '../../assets/icons/simorgh.svg';\nimport PersonRoundedIcon from '@material-ui/icons/PersonRounded';\nimport { Context, UserContext } from \"../../Context\";\nimport { api, config, get_token, get_user_info, rest } from \"../../helpers/api\";\nimport AccessDenied from \"./AccessDenied\";\n\nconst useStyles = makeStyles((theme) => ({\n  btn: {\n    color: theme.palette.text.secondary,\n    '&#home': {\n      marginLeft: theme.spacing(-1),\n      [theme.breakpoints.up('md')]: {\n        display: \"none\",\n      },\n    },\n    '& img': {\n      width: theme.spacing(5),\n      height: theme.spacing(5),\n    },\n    '& > button > span': {\n      direction: \"ltr\",\n    },\n  },\n  admin: {\n    border: \"1px solid\",\n    borderRadius: theme.spacing(.5),\n  },\n  navContainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifySelf: \"flex-start\",\n    width: \"100%\",\n    [theme.breakpoints.down('sm')]: {\n      display: \"none\",\n    },\n  },\n  icon: {\n    color: theme.palette.text.secondary,\n    marginLeft: \"auto\",\n    [theme.breakpoints.up('md')]: {\n      display: \"none\",\n    },\n  },\n  header: {\n    backgroundColor: theme.palette.secondary.light,\n    margin: theme.spacing(0, -2),\n    right: \"unset\",\n    borderRadius: \"0 0 8px 8px\",\n  },\n  container: {\n    padding: 0,\n  },\n}));\n\nconst Header = props => {\n  const {window} = props;\n  const classes = useStyles();\n  const {context} = useContext(Context);\n  const {isAdmin, setIsAdmin} = useContext(UserContext);\n  const [open, setOpen] = useState(false);\n  const [path, setPath] = useState(props.location.pathname);\n  const [dialogOpen, setDialogOpen] = React.useState(false);\n  const history = useHistory();\n  const theme = useTheme()\n  const isMobileDisplay = useMediaQuery(theme.breakpoints.down('sm'))\n  const trigger = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 80,\n    target: window ? window() : undefined,\n  });\n\n  useEffect(() => setPath(props.location.pathname), [props.location.pathname])\n\n  useEffect(() => {\n    if (get_token()) {\n      api.get(`${rest.profile}/${get_user_info().id}`, config(\"json\"))\n          .then((res) => {\n            setIsAdmin(res.data.isAdmin)\n          })\n    } else {\n      setIsAdmin(false)\n    }\n  }, [path])\n\n  const toggleDrawer = open => event => {\n    if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setOpen(open);\n  };\n\n  const handleDialogClose = () => {\n    setDialogOpen(false);\n  };\n\n  const handleDialogOpen = () => {\n    if (get_token()) {\n      history.push(routes.ADD_NEED)\n    } else {\n      setDialogOpen(true);\n    }\n  };\n\n  return (\n      <HeaderScrollEffect {...props}>\n        <AppBar position={\"fixed\"} className={classes.header}>\n          <Container maxWidth=\"lg\" className={classes.container}>\n            <Toolbar>\n              {\n                <div className={classes.navContainer}>\n                  <NavLink exact to={routes.HOME} className={classes.btn}>\n                    <Button color=\"inherit\">صفحه‌ی اصلی</Button>\n                  </NavLink>\n                  {get_token()\n                      ? <NavLink to={routes.ADD_NEED} className={classes.btn}>\n                        <Button color=\"inherit\">ثبت نیاز</Button>\n                      </NavLink>\n                      : <div onClick={handleDialogOpen} className={classes.btn}>\n                        <Button color=\"inherit\">ثبت نیاز</Button>\n                      </div>}\n                  <NavLink to={routes.ABOUT} className={classes.btn}>\n                    <Button color=\"inherit\">درباره‌ی ما</Button>\n                  </NavLink>\n                  {get_token()\n                      ? <NavLink to={routes.PROFILE} className={classes.btn}>\n                        <Button color=\"inherit\">پروفایل</Button>\n                      </NavLink>\n                      : <NavLink to={routes.SIGN_IN} className={classes.btn}>\n                        <Button color=\"inherit\">ورود | ثبت‌نام</Button>\n                      </NavLink>}\n                  {isAdmin && <NavLink to={routes.ADMIN} className={classnames(classes.btn, classes.admin)}>\n                    <Button color=\"inherit\">پنل ادمین</Button>\n                  </NavLink>}\n                </div>\n              }\n              <IconButton edge=\"end\" className={classes.icon} aria-label=\"menu\" onClick={toggleDrawer(true)}>\n                <MenuRoundedIcon/>\n              </IconButton>\n              {isMobileDisplay && trigger &&\n              <Typography color={\"textSecondary\"} className=\"ml-auto\">{context}</Typography>}\n              {\n                props.location.pathname === routes.HOME\n                    ?\n                    get_token()\n                        ? <NavLink to={routes.PROFILE} className={classes.btn} id='home'>\n                          <Button color=\"inherit\" startIcon={<PersonRoundedIcon/>}>پروفایل</Button>\n                        </NavLink>\n                        : <NavLink to={routes.SIGN_IN} className={classes.btn} id='home'>\n                          <Button color=\"inherit\">ورود | ثبت‌نام</Button>\n                        </NavLink>\n                    :\n                    <NavLink to={routes.HOME} className={classes.btn}>\n                      <IconButton edge=\"start\"><img src={Logo} alt=\"logo\"/></IconButton>\n                    </NavLink>\n              }\n              <NavDrawer open={open} toggleFn={toggleDrawer}/>\n            </Toolbar>\n            <AccessDenied open={dialogOpen} handleClose={handleDialogClose}\n                          action={() => history.push(routes.ADD_NEED)}/>\n          </Container>\n        </AppBar>\n      </HeaderScrollEffect>\n  );\n};\n\nHeader.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default Header;","/home/pmoghadam/WebstormProjects/crisis-management-system/src/hooks/usePosition.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/About.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/OtpInput.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/Account.js",["322"],"import React, { useContext, useEffect, useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { geolocated } from \"react-geolocated\";\nimport classnames from 'classnames';\nimport { Button, MuiThemeProvider, Typography, useMediaQuery, useTheme } from \"@material-ui/core\";\nimport RTL from \"../helpers/RTL\";\nimport Theme from \"../helpers/Theme\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Fab from \"./buttons/FAB\";\nimport ArrowBackIosRoundedIcon from '@material-ui/icons/ArrowBackIosRounded';\nimport SignUpForm from \"./forms/SignUpForm\";\nimport SignInForm from \"./forms/SignInForm\";\nimport OtpForm from \"./forms/OtpForm\";\nimport { emptyUserInfo } from '../types/userInfoType'\nimport { usePosition } from \"../hooks/usePosition\";\nimport { messages } from \"../assets/messages\";\nimport { routes } from \"../assets/routes\";\nimport FloatingAlert from \"./common/FloatingAlert\";\nimport { useAlert } from \"../hooks/useAlert\";\nimport Popup from \"./common/Popup\";\nimport { Context } from \"../Context\";\nimport Helmet from 'react-helmet';\nimport { api, config, get_token, rest, set_token } from \"../helpers/api\";\nimport Loader from \"./common/Loader\";\n\nconst useStyles = makeStyles((theme) => ({\n  media: {\n    width: \"100%\",\n    paddingBottom: theme.spacing(9),\n    [theme.breakpoints.up('md')]: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      alignItems: \"flex-start\",\n    },\n    '& hr': {\n      transform: \"rotate(90deg)\",\n      alignSelf: \"center\",\n      maxWidth: theme.spacing(32.5),\n    },\n  },\n  container: {\n    position: \"relative\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    width: '100%',\n    '& > *': {\n      direction: 'rtl',\n      margin: theme.spacing(1, 0),\n      width: 400,\n      [theme.breakpoints.down('xs')]: {\n        width: '100%',\n      }\n    },\n  },\n  blurForm: {\n    transition: \"ease .3s\",\n    filter: props => !props.breakpoint && props.isOtp ? \"blur(3px)\" : \"\",\n  },\n  blurOtp: {\n    transition: \"ease .3s\",\n    filter: props => !props.breakpoint && !props.isOtp ? \"blur(3px)\" : \"\",\n  },\n  title: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    width: \"100%\",\n  },\n  overlay: {\n    position: \"absolute\",\n    top: 0,\n    right: 0,\n    left: 0,\n    bottom: 0,\n    opacity: 0.4,\n    zIndex: 999,\n    backgroundColor: theme.palette.secondary.main,\n  },\n  icon: {\n    fontSize: theme.spacing(4),\n    margin: theme.spacing(2, 0),\n    color: theme.palette.text.light,\n    position: \"absolute\",\n    top: 0,\n    right: \"50%\",\n    transform: \"translate(45%, -50%)\",\n    backgroundColor: theme.palette.secondary.main,\n  },\n}));\n\nconst objectCheckEmpty = obj => {\n  return Object.values(obj).join('') === ''\n}\n\nconst Account = props => {\n  const theme = useTheme();\n  const {setContext} = useContext(Context)\n  const isMobileDisplay = useMediaQuery(theme.breakpoints.down('sm'));\n  const [pageLoading, setPageLoading] = useState(true);\n  const [loading, setLoading] = useState({otp: false, account: false});\n  const [permission, setPermission] = useState(false);\n  const [dialogOpen, setDialogOpen] = useState(false);\n\n  const [isRegister, setIsRegister] = useState(true);\n  const [isOtp, setIsOtp] = useState(false);\n  const classes = useStyles({...props, breakpoint: isMobileDisplay, isOtp});\n  const history = useHistory();\n  const {open, message, type, duration, closeAlert, showAlert} = useAlert();\n\n  // otpForm state\n  const [code, setCode] = useState('');\n  const [codeError, setCodeError] = useState('');\n  const [countdown, setCountdown] = useState(30);\n  // sign-in/sign-up states\n  const [signInWithNid, setSignInWithNid] = useState(false);\n  const [userInfo, setUserInfo] = useState(emptyUserInfo);\n  const [userInfoError, setUserInfoError] = useState(emptyUserInfo);\n\n  useEffect(() => {\n    if (get_token()) {\n      history.push(routes.PROFILE)\n    }\n    setPageLoading(false)\n  }, [])\n\n  useEffect(() => {\n    setContext(isOtp ? 'تأیید شماره‌ی تماس' : isRegister ? 'ثبت‌نام' : 'ورود')\n  }, [setContext, isOtp, isRegister])\n\n  useEffect(() => setDialogOpen(true), [])\n  const {latitude, longitude} = usePosition(permission);\n\n  useEffect(() => {\n    if (isOtp && countdown > 0) {\n      setTimeout(() => setCountdown(countdown - 1), 1000)\n    }\n\n    return clearTimeout()\n  }, [isOtp, countdown])\n\n  const handleDialogClose = confirmed => () => {\n    setPermission(confirmed)\n    setDialogOpen(false);\n  };\n\n  const handleCodeChange = e => {\n    setCode(e.target.value);\n\n    if (e.target.value === '') {\n      setCodeError(messages.ERR_EMPTY)\n    } else {\n      setCodeError('')\n    }\n  }\n\n  const sendOtp = (code) => {\n    setCountdown(30)\n    setTimeout(() => {\n      showAlert(\"کد شما: \" + code, \"success\", 8000)\n    }, 4000)\n  }\n\n  const sendOtpAgain = () => {\n    setCountdown(30)\n    api.patch(rest.getOtp, {\n      [signInWithNid ? 'nationalId' : 'phoneNumber']: signInWithNid ? userInfo.nationalId : userInfo.phoneNumber\n    }, config(\"json\"))\n        .then((res) => {\n          setTimeout(() => {\n            showAlert(\"کد شما: \" + res.data.otp.code, \"success\", 8000)\n          }, 4000)\n        })\n        .catch((err) => {\n          showAlert(err.response.data.error, \"error\", 3000);\n        })\n  }\n\n  const checkError = () => {\n    const errors = {\n      fn: !userInfo.firstName.length ? messages.ERR_EMPTY : '',\n      ln: !userInfo.lastName.length ? messages.ERR_EMPTY : '',\n      pn: !userInfo.phoneNumber.length\n          ? messages.ERR_EMPTY\n          : !(userInfo.phoneNumber.startsWith('09') || userInfo.phoneNumber.startsWith('+989'))\n              ? messages.ERR_WRONG_PHONE\n              : '',\n      ni: !userInfo.nationalId.length\n          ? messages.ERR_EMPTY\n          : userInfo.nationalId.length !== 10\n              ? messages.ERR_WRONG_NID_LENGTH\n              : '',\n      ad: !userInfo.address.length ? messages.ERR_EMPTY : '',\n    }\n\n    if (isRegister) {\n      setUserInfoError({\n        ...userInfoError,\n        firstName: errors.fn,\n        lastName: errors.ln,\n        phoneNumber: errors.pn,\n        nationalId: errors.ni,\n        address: errors.ad,\n      })\n    } else {\n      const errMsg = signInWithNid ? errors.ni : errors.pn;\n\n      setUserInfoError({\n        ...userInfoError,\n        [signInWithNid ? 'nationalId' : 'phoneNumber']: errMsg,\n      })\n    }\n\n    return !objectCheckEmpty(isRegister\n        ? errors\n        : {[signInWithNid ? 'nationalId' : 'phoneNumber']: signInWithNid ? errors.ni : errors.pn})\n  }\n\n  const submit = e => {\n    e.preventDefault();\n    const signInMethod = signInWithNid ? userInfo.nationalId : userInfo.phoneNumber;\n    let data = {};\n\n    if (!checkError()) {\n      setLoading({...loading, account: true})\n      if (isRegister) {\n        data = {\n          firstName: userInfo.firstName,\n          lastName: userInfo.lastName,\n          phoneNumber: userInfo.phoneNumber,\n          nationalId: userInfo.nationalId,\n          address: userInfo.address,\n          locationAccess: true,\n          lat: props.coords?.latitude || latitude,\n          long: props.coords?.longitude || longitude,\n        }\n      } else {\n        data = {\n          [signInWithNid ? 'nationalId' : 'phoneNumber']: signInMethod,\n        }\n      }\n\n      api.post(isRegister ? rest.signUp : rest.signIn, data, config('json'))\n          .then((res) => {\n            showAlert(res.data.msg, \"success\", 3000);\n            setIsOtp(true);\n            sendOtp(res.data.otp.code)\n          })\n          .catch((err) => {\n            showAlert(err.response.data.error, \"error\", 3000);\n          })\n          .finally(() => setLoading({...loading, account: false}))\n    }\n  }\n\n  const verify = e => {\n    e.preventDefault();\n\n    if (code.length < 5) {\n      setCodeError(messages.ERR_SHORT_OTP)\n    } else {\n      setLoading({...loading, otp: true})\n      const infoType = !isRegister && signInWithNid\n      const infoTemp = infoType ? userInfo.nationalId : userInfo.phoneNumber\n      api.get(`${rest.verify}/${infoType}/${infoTemp}/${code}`)\n          .then((res) => {\n            set_token(res.data.token)\n            showAlert(res.data.msg, \"success\", 5000);\n            history.push(routes.PROFILE)\n          })\n          .catch((err) => {\n            showAlert(err.response.data.error, \"error\", 3000);\n          })\n          .finally(() => setLoading({...loading, otp: false}))\n    }\n  }\n\n  const handleSignIn = e => {\n    setUserInfo({\n      ...userInfo,\n      [signInWithNid ? 'nationalId' : 'phoneNumber']: e.target.value\n    });\n    setUserInfoError({\n      ...userInfoError,\n      [signInWithNid ? 'nationalId' : 'phoneNumber']: e.target.value === '' ? messages.ERR_EMPTY : '',\n    })\n  }\n\n  const handleSignUp = e => {\n    setUserInfo({\n      ...userInfo,\n      [e.target.name]: e.target.value,\n    });\n    setUserInfoError({\n      ...userInfoError,\n      [e.target.name]: e.target.value === '' ? messages.ERR_EMPTY : '',\n    })\n  }\n\n  // const getLocation = e => {\n  //   setUserInfo({\n  //     ...userInfo,\n  //     location: {\n  //       allow: e.target.checked,\n  //       lat: e.target.checked && !error ? latitude : '',\n  //       long: e.target.checked && !error ? longitude : '',\n  //     }\n  //   })\n  // }\n\n  const handleToggle = () => {\n    setIsRegister(!isRegister)\n    setUserInfoError(emptyUserInfo)\n  }\n\n  const otpForm = () => <div className={classnames(classes.container, classes.blurOtp)}>\n    {!isMobileDisplay && !isOtp && <div className={classes.overlay}/>}\n    <OtpForm\n        isMobileDisplay={isMobileDisplay}\n        code={code}\n        handleChange={handleCodeChange}\n        submit={verify}\n        error={codeError}\n        loading={loading.otp}\n    />\n    <Button variant={\"text\"} color={\"primary\"} onClick={sendOtpAgain} disabled={countdown > 0}>\n      {countdown > 0 ? `ارسال مجدد کد بعد از ${countdown} ثانیه` : 'ارسال مجدد'}\n    </Button>\n  </div>\n\n  return pageLoading ? <Loader/> : (\n      <RTL>\n        <MuiThemeProvider theme={Theme}>\n          <Helmet><title>{isOtp ? 'تأیید شماره‌ی تماس' : isRegister ? 'ثبت‌نام' : 'ورود'}</title></Helmet>\n          <div className={classes.title}>\n            <Typography variant={\"h3\"}>{isOtp ? 'تأیید شماره‌ی تماس' : isRegister ? 'ثبت‌نام' : 'ورود'}</Typography>\n            {!isOtp &&\n            <Button\n                variant={\"outlined\"}\n                size={\"small\"}\n                onClick={handleToggle}\n            >\n              {isRegister ? 'ورود' : 'ثبت‌نام'}\n            </Button>}\n          </div>\n          <hr/>\n          <div className={classes.media}>\n            <form className={classnames(classes.container, classes.blurForm)} onSubmit={isOtp ? verify : submit}>\n              {!isMobileDisplay && isOtp && <div className={classes.overlay}/>}\n              {isMobileDisplay && isOtp\n                  ? otpForm()\n                  : isRegister\n                      ? <SignUpForm\n                          isMobileDisplay={isMobileDisplay}\n                          submit={submit}\n                          userInfo={userInfo}\n                          errors={userInfoError}\n                          onUserInfoChangeFn={handleSignUp}\n                          loading={loading.account}\n                          // accessLocation={x}\n                      />\n                      : <SignInForm\n                          isMobileDisplay={isMobileDisplay}\n                          submit={submit}\n                          type={signInWithNid}\n                          userNumber={signInWithNid ? userInfo.nationalId : userInfo.phoneNumber}\n                          onUserNumberChangeFn={handleSignIn}\n                          setType={e => setSignInWithNid(e.target.checked)}\n                          error={signInWithNid ? userInfoError.nationalId : userInfoError.phoneNumber}\n                          loading={loading.account}\n                      />\n              }\n            </form>\n            {!isMobileDisplay && <>\n              <div className={\"position-relative w-100 align-self-center\"}>\n                <hr style={{borderWidth: 2}}/>\n                <ArrowBackIosRoundedIcon className={classes.icon}/>\n              </div>\n              {otpForm()}\n            </>}\n\n          </div>\n\n          <Popup\n              open={dialogOpen}\n              onClose={handleDialogClose(false)}\n              onDeny={handleDialogClose(false)}\n              onConfirm={handleDialogClose(true)}\n              title={'اجازه‌ی دسترسی به موقعیت مکانی'}\n              text={messages.INFO_ALLOW_LOCATION}\n              // denyBtn={'فعلاً نه'}\n              confirmBtn={'قبول'}\n          />\n\n          {isMobileDisplay && <Fab buttons={[\n            {\n              loading: isOtp ? loading.otp : loading.account,\n              title: isOtp ? 'تأیید' : isRegister ? 'ثبت‌نامم کن' : 'ورود به حساب کاربری',\n              onClickFn: isOtp ? verify : submit,\n            }\n          ]}/>}\n\n          <FloatingAlert text={message} open={open} handleClose={closeAlert} duration={duration} type={type}/>\n        </MuiThemeProvider>\n      </RTL>\n  );\n};\n\nAccount.propTypes = {};\n\nexport default geolocated({\n  positionOptions: {\n    enableHighAccuracy: false,\n  },\n  userDecisionTimeout: 5000,\n})(Account);","/home/pmoghadam/WebstormProjects/crisis-management-system/src/types/userInfoType.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/assets/messages.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/NavDrawer.js",["323","324","325"],"import React, { useContext } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  Container,\n  Divider,\n  Drawer,\n  IconButton,\n  List,\n  ListItem,\n  ListItemText,\n  Toolbar\n} from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { routes } from \"../../assets/routes\";\nimport { NavLink } from \"react-router-dom\";\nimport { Swipe } from \"react-swipe-component\";\nimport Footer from \"./Footer\";\nimport { Context, UserContext } from \"../../Context\";\nimport { get_token } from \"../../helpers/api\";\nimport AccessDenied from \"./AccessDenied\";\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    color: theme.palette.text.secondary,\n  },\n  nav: {\n    color: theme.palette.text.secondary,\n  },\n  close: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  list: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: theme.spacing(30),\n    height: '100%',\n    '& *': {\n      textAlign: \"center\",\n      justifyContent: \"center\",\n    },\n  },\n  swipeArea: {\n    width: theme.spacing(2),\n    position: \"fixed\",\n    top: 0,\n    bottom: 0,\n    right: 0,\n  },\n}));\n\nconst NavDrawer = props => {\n  const classes = useStyles();\n  const {isAdmin} = useContext(UserContext);\n  const [dialogOpen, setDialogOpen] = React.useState(false);\n  const history = useHistory();\n\n  const listItems = [\n    {\n      text: 'صفحه‌ی اصلی',\n      url: routes.HOME,\n    },\n    {\n      text: get_token() ? 'پروفایل' : 'ورود | ثبت‌نام',\n      url: get_token() ? routes.PROFILE : routes.SIGN_IN,\n    },\n    {\n      text: 'ثبت نیاز',\n      url: routes.ADD_NEED,\n    },\n    {\n      text: 'درباره‌ی ما',\n      url: routes.ABOUT,\n    },\n    {\n      text: 'پنل ادمین',\n      url: routes.ADMIN,\n    },\n  ];\n\n  const handleDialogClose = () => {\n    setDialogOpen(false);\n  };\n\n  const handleDialogOpen = () => {\n    if (get_token()) {\n      history.push(routes.ADD_NEED)\n    } else {\n      setDialogOpen(true);\n    }\n  };\n\n  const list = (\n    <div className={classes.list} role=\"presentation\" onClick={props.toggleFn(false)}>\n      <List>\n        {listItems.map((navItem, index) => (\n          <div key={navItem.text}>\n            <ListItem button>\n              {navItem.text === 'ثبت نیاز'\n                ? (get_token()\n                  ? <NavLink to={routes.ADD_NEED} className={classes.nav}>\n                    <Button color=\"inherit\">ثبت نیاز</Button>\n                  </NavLink>\n                  : <div onClick={handleDialogOpen} className={classes.nav}>\n                    <Button color=\"inherit\">ثبت نیاز</Button>\n                  </div>)\n                : navItem.text === 'پنل ادمین'\n                  ? (isAdmin\n                    ? <NavLink exact to={navItem.url} className={classes.nav}>\n                      <ListItemText primary={navItem.text}/>\n                    </NavLink>\n                    : null)\n                  : <NavLink exact to={navItem.url} className={classes.nav}>\n                    <ListItemText primary={navItem.text}/>\n                  </NavLink>}\n            </ListItem>\n            {index !== listItems.length - 1 && <Divider/>}\n          </div>\n        ))}\n      </List>\n    </div>\n  )\n\n  return (\n    <nav>\n      <Swipe\n        nodeName=\"div\"\n        onSwipedLeft={props.toggleFn(true)}\n        detectTouch\n      >\n        <div className={classes.swipeArea}/>\n      </Swipe>\n      <Swipe\n        nodeName=\"div\"\n        onSwipedRight={props.toggleFn(false)}\n        detectTouch\n      >\n        <Drawer anchor=\"left\" open={props.open} onClose={props.toggleFn(false)}>\n          <div className={classes.close}>\n            <IconButton edge=\"end\" className={classes.icon} aria-label=\"close\" onClick={props.toggleFn(false)}>\n              <CloseIcon/>\n            </IconButton>\n          </div>\n          {list}\n          <Footer/>\n        </Drawer>\n        <AccessDenied open={dialogOpen} handleClose={handleDialogClose} action={() => history.push(routes.ADD_NEED)}/>\n      </Swipe>\n    </nav>\n  );\n};\n\nNavDrawer.propTypes = {\n  open: PropTypes.bool,\n  toggleFn: PropTypes.func,\n};\n\nexport default NavDrawer;","/home/pmoghadam/WebstormProjects/crisis-management-system/src/helpers/Theme.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/helpers/RTL.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/helpers/HeaderScrollEffect.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/Profile.js",["326"],"import React, { useContext, useEffect, useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { CircularProgress, IconButton, TextField, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport EditRoundedIcon from '@material-ui/icons/EditRounded';\nimport CheckRoundedIcon from '@material-ui/icons/CheckRounded';\nimport StarsRoundedIcon from '@material-ui/icons/StarsRounded';\nimport DataTable from \"./table/DataTable\";\nimport { useAlert } from \"../hooks/useAlert\";\nimport FloatingAlert from \"./common/FloatingAlert\";\nimport { messages } from \"../assets/messages\";\nimport { Context, UserContext } from \"../Context\";\nimport Helmet from 'react-helmet';\nimport Loader from \"./common/Loader\";\nimport { api, config, get_user_info, rest } from \"../helpers/api\";\nimport { routes } from \"../assets/routes\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: '100%',\n    paddingBottom: theme.spacing(9),\n  },\n  title: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    width: \"100%\",\n  },\n  infoTitle: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    '& + p': {\n      fontSize: theme.spacing(1.75)\n    }\n  },\n  infoContainer: {\n    border: \"1px solid #e7e7e7\",\n    backgroundColor: theme.palette.background.box,\n    borderRadius: theme.spacing(.5),\n    padding: theme.spacing(1),\n    margin: theme.spacing(.5),\n    flex: \"1 1 40%\",\n    minWidth: theme.spacing(31.25),\n    '& > *': {\n      direction: 'rtl',\n    },\n  },\n  cardContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    backgroundColor: theme.palette.secondary.light,\n    borderRadius: theme.spacing(.5),\n    padding: theme.spacing(.5),\n    marginBottom: theme.spacing(2),\n  },\n  card: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n  },\n  btn: {\n    margin: theme.spacing(.5),\n  },\n  admin: {\n    display: \"flex\",\n    alignItems: \"center\",\n    border: \"1px solid\",\n    borderRadius: theme.spacing(.5),\n    padding: theme.spacing(.5),\n    marginRight: theme.spacing(1.5),\n  },\n}));\n\nconst translate = {\n  firstname: 'نام',\n  lastname: 'نام‌خانوادگی',\n  phoneNumber: 'شماره‌ی تماس',\n  nationalId: 'کد ملی',\n  email: 'ایمیل',\n  address: 'آدرس',\n}\n\nconst info = {\n  firstname: '',\n  lastname: '',\n  email: '',\n  address: '',\n  phoneNumber: '',\n  nationalId: '',\n}\n\nconst Profile = () => {\n  const classes = useStyles();\n  const {setContext} = useContext(Context)\n  const {setIsAdmin} = useContext(UserContext);\n  const history = useHistory();\n  const [editMode, setEditMode] = useState(info);\n  const [profile, setProfile] = useState(info);\n  const [requests, setRequests] = useState([]);\n  const [admin, setAdmin] = useState(false);\n  const [location, setLocation] = useState(false);\n  const {open, message, type, duration, closeAlert, showAlert} = useAlert()\n  const [pageLoading, setPageLoading] = useState(true)\n  const [loading, setLoading] = useState({...info, allowLocation: '', logout: '', table: true,})\n\n  useEffect(() => {\n    api.get(`${rest.profile}/${get_user_info().id}`, config(\"json\"))\n        .then((res) => {\n          setAdmin(res.data.isAdmin)\n          setIsAdmin(res.data.isAdmin)\n          setLocation(res.data.allowLocation)\n          delete res.data.isAdmin\n          delete res.data.allowLocation\n          setProfile(res.data)\n\n          api.get(`${rest.request}/${get_user_info().id}`, config(\"json\"))\n              .then((res) => {\n                if (res.status === 200) {\n                  setRequests(res.data)\n                }\n              })\n              .catch((err) => {\n                showAlert(err.response.data.error, \"error\", 3000);\n              })\n              .finally(() => setLoading({...loading, table: false}))\n        })\n        .catch((err) => {\n          if (err.response) {\n            showAlert(err.response.data.error, \"error\", 3000);\n          }\n        })\n        .finally(() => setPageLoading(false))\n  }, [])\n\n  useEffect(() => {\n    setContext('پروفایل')\n  }, [setContext])\n\n  const editField = value => {\n    const currentEditState = editMode[value]\n    setEditMode({\n      ...editMode,\n      [value]: !editMode[value],\n    })\n    if (currentEditState) {\n      confirmChanges(value)\n    }\n  }\n\n  const handleEditProfile = e => {\n    setProfile({\n      ...profile,\n      [e.target.name]: e.target.value,\n    })\n  }\n\n  const confirmChanges = value => {\n    setLoading({...loading, [value]: true})\n    api.patch(`${rest.profile}/${get_user_info().id}`, {[value]: profile[value]}, config(\"json\"))\n        .then(() => {\n          showAlert(messages.INFO_CHANGES_SAVED, 'success');\n          setLoading({...loading, [value]: false})\n        })\n        .catch((err) => {\n          showAlert(err.response.data.error, \"error\", 3000);\n        })\n  }\n\n  const signOut = () => {\n    setLoading({...loading, logout: true})\n    api.patch(`${rest.signOut}/${get_user_info().id}`, {allowLocation: !location}, config(\"json\"))\n        .then((res) => {\n          localStorage.removeItem('token')\n          showAlert(res.data.msg, 'success', 3000);\n          setLoading({...loading, logout: false})\n          history.push(routes.HOME)\n        })\n        .catch((err) => {\n          showAlert(err.response.data.error, \"error\", 3000);\n        })\n  }\n\n  return pageLoading ? <Loader/> : (\n      <div className={classes.container}>\n        <Helmet><title>پروفایل</title></Helmet>\n        <div className={classes.title}>\n          <Typography variant={\"h3\"}>پروفایل</Typography>\n          {admin && <div className={classes.admin}>\n            <StarsRoundedIcon/>\n            <Typography>ادمین</Typography>\n          </div>}\n          <div className=\"btn btn-danger mr-auto\" onClick={signOut}>\n            {loading.logout ? <CircularProgress color={\"secondary\"} size={20}/> : 'خروج'}\n          </div>\n        </div>\n        <hr/>\n        <div className={classes.cardContainer}>\n          <div className={classes.card}>\n            {Object.keys(profile).map((value, index) => (\n                <div key={index} className={classes.infoContainer}>\n                  <div className={classes.infoTitle}>\n                    <Typography>{translate[value]}</Typography>\n                    <IconButton edge=\"end\" className={classes.icon} aria-label=\"menu\" onClick={() => editField(value)}>\n                      {loading[value] ? <CircularProgress size={24}/> : !editMode[value] ? <EditRoundedIcon/> :\n                          <CheckRoundedIcon/>}\n                    </IconButton>\n                  </div>\n                  {!editMode[value]\n                      ? <Typography color={\"textSecondary\"}>{profile[value] || '-'}</Typography>\n                      : <TextField\n                          variant=\"standard\"\n                          name={value}\n                          value={profile[value]}\n                          onChange={handleEditProfile}\n                      />}\n                </div>\n            ))}\n            {/*<FormControlLabel*/}\n            {/*    control={*/}\n            {/*      <Checkbox*/}\n            {/*          edge={\"end\"}*/}\n            {/*          checked={location}*/}\n            {/*          onChange={updateLocationAccess}*/}\n            {/*          name=\"location\"*/}\n            {/*          color=\"primary\"*/}\n            {/*      />*/}\n            {/*    }*/}\n            {/*    label={<div className=\"d-flex align-items-center\">*/}\n            {/*      <span>استفاده از لوکیشن برای امدادرسانی</span>*/}\n            {/*      {loading.allowLocation && <CircularProgress size={20} className=\"mr-2\"/>}*/}\n            {/*    </div>}*/}\n            {/*/>*/}\n          </div>\n        </div>\n\n        <DataTable title={'وضعیت درخواست‌ها'} rows={requests} loading={loading.table}/>\n\n        <FloatingAlert text={message} open={open} handleClose={closeAlert} duration={duration} type={type}/>\n      </div>\n  );\n};\n\nProfile.propTypes = {};\n\nexport default Profile;","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/AddNeed.js",["327","328","329","330"],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/assets/categories.js",[],["331","332"],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/types/needType.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/assets/icons/iconComponents/FloodIcon.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/assets/icons/iconComponents/FireIcon.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/assets/icons/iconComponents/EarthquakeIcon.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/assets/icons/iconComponents/AvalancheIcon.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/assets/icons/iconComponents/TwisterIcon.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/assets/icons/iconComponents/LandslideIcon.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/Receipt.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/Done.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/hooks/useAlert.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/FloatingAlert.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/Loader.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/Popup.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/Context.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/table/DataTable.js",["333"],"import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport DataTableRow from \"./DataTableRow\";\nimport DataTableHead from \"./DataTableHead\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport AdminDataTableRow from \"./AdminDataTableRow\";\n\n\nconst columns = [\n  {id: 'name', numeric: false, disablePadding: false, label: 'عنوان نیاز'},\n  {id: 'amount', numeric: true, disablePadding: false, label: 'تعداد'},\n  {id: 'urgent', numeric: true, disablePadding: false, label: 'ضروری'},\n  {id: 'askDate', numeric: false, disablePadding: false, label: 'تاریخ درخواست'},\n  {id: 'changeDate', numeric: false, disablePadding: false, label: 'آخرین بروزرسانی'},\n  {id: 'helpDate', numeric: false, disablePadding: false, label: 'تاریخ امدادرسانی'},\n  {id: 'status', numeric: false, disablePadding: false, label: 'وضعیت'},\n  {id: 'type', numeric: false, disablePadding: false, label: 'نوع حادثه'},\n  {id: 'desc', numeric: false, disablePadding: false, label: 'توضیحات'},\n];\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    direction: \"rtl\",\n    marginBottom: theme.spacing(2),\n    backgroundColor: theme.palette.secondary.light,\n  },\n  table: {\n    minWidth: 750,\n  },\n  footer: {\n    '& > div': {\n      display: \"flex\",\n      padding: theme.spacing(0, 2),\n      '& > *': {\n        flex: \"unset\",\n        '&:nth-child(3)': {\n          margin: theme.spacing(0, 1, 0, 2),\n        },\n        '&:last-child': {\n          marginRight: \"auto\",\n          marginLeft: 0,\n        },\n      },\n    },\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nconst descendingComparator = (a, b, orderBy) => {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n};\n\nconst getComparator = (order, orderBy) => order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n\nconst stableSort = (array, comparator) => {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) {\n      return order;\n    }\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n};\n\nconst DataTable = props => {\n  const classes = useStyles();\n  const [order, setOrder] = useState('asc');\n  const [orderBy, setOrderBy] = useState('');\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(order === 'desc' && orderBy === property ? '' : property);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    if (props.isAdmin) {\n      props.getNewResults(newPage, props.limit)\n    } else {\n      setPage(newPage);\n    }\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    if (props.isAdmin) {\n      props.getNewResults(0, parseInt(event.target.value, 10))\n    } else {\n      setRowsPerPage(parseInt(event.target.value, 10));\n      setPage(0);\n    }\n  };\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.rows.length - page * rowsPerPage);\n  const rowsArray = props.isAdmin\n      ? stableSort(props.rows, getComparator(order, orderBy))\n      : stableSort(props.rows, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n\n  return (\n      <div className={classes.root}>\n        <Paper className={classes.paper}>\n          <Toolbar>\n            <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n              {props.title}\n            </Typography>\n          </Toolbar>\n          <TableContainer>\n            <Table\n                className={classes.table}\n                aria-labelledby=\"tableTitle\"\n                size={'medium'}\n                aria-label=\"enhanced table\"\n            >\n              <DataTableHead\n                  columns={props.columns}\n                  classes={classes}\n                  order={order}\n                  orderBy={orderBy}\n                  onRequestSort={handleRequestSort}\n                  rowCount={props.rows.length}\n              />\n              <TableBody>\n                {props.loading ? <CircularProgress size={26}/> : rowsArray.map((row, i) => props.isAdmin\n                    ? <AdminDataTableRow key={i} row={row} loading={props.rowLoading[i]}\n                                         statusFn={x => props.statusFn(i, x, row.id)}/>\n                    : <DataTableRow key={i} row={row}/>)}\n                {props.showEmptyRows && emptyRows > 0 && (\n                    <TableRow style={{height: 53 * emptyRows}}>\n                      <TableCell colSpan={6}/>\n                    </TableRow>\n                )}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <TablePagination\n              rowsPerPageOptions={[10, 25, 50]}\n              component=\"div\"\n              count={props.isAdmin ? props.total : props.rows.length}\n              rowsPerPage={props.isAdmin ? props.limit : rowsPerPage}\n              labelDisplayedRows={({from, to, count}) => `[${from} تا ${to}] از ${count}`}\n              labelRowsPerPage={'تعداد:'}\n              page={props.isAdmin ? props.page : page}\n              onChangePage={handleChangePage}\n              onChangeRowsPerPage={handleChangeRowsPerPage}\n              className={classes.footer}\n          />\n        </Paper>\n      </div>\n  );\n};\n\nDataTable.propTypes = {\n  title: PropTypes.string,\n  showEmptyRows: PropTypes.bool,\n  isAdmin: PropTypes.bool,\n  columns: PropTypes.array,\n  rows: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    amount: PropTypes.number.isRequired,\n    urgent: PropTypes.string.isRequired,\n    askDate: PropTypes.string.isRequired,\n    changeDate: PropTypes.string,\n    helpDate: PropTypes.string,\n    type: PropTypes.string,\n    status: PropTypes.string.isRequired,\n    desc: PropTypes.string.isRequired,\n    info: PropTypes.shape({\n      address: PropTypes.string.isRequired,\n      location: PropTypes.shape({\n        lat: PropTypes.string,\n        long: PropTypes.string,\n      }),\n    }).isRequired,\n  })).isRequired,\n  statusFn: PropTypes.func,\n  getNewResults: PropTypes.func,\n  loading: PropTypes.bool,\n  rowLoading: PropTypes.bool,\n  total: PropTypes.number,\n  limit: PropTypes.number,\n  page: PropTypes.number,\n}\n\nDataTable.defaultProps = {\n  columns: columns,\n}\n\nexport default DataTable;","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/table/DataTableHead.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/table/DataTableRow.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/NotFound.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/serviceWorker.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/Footer.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/helpers/api.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/helpers/PrivateRoute.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/AccessDenied.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/AdminPanel.js",["334","335","336","337","338"],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/RecentNeeds.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/admin/Dashboard.js",["339"],"import React, { useEffect, useState } from 'react';\nimport { api, config, rest } from \"../../helpers/api\";\nimport { useAlert } from \"../../hooks/useAlert\";\nimport FloatingAlert from \"../common/FloatingAlert\";\nimport Loader from \"../common/Loader\";\nimport { makeStyles, Typography } from \"@material-ui/core\";\nimport CardSlider from \"../card/CardSlider\";\nimport DataChart from \"../common/DataChart\";\nimport classnames from 'classnames';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  top: {\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n  bottom: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    flexWrap: \"wrap\",\n\n    [theme.breakpoints.down('sm')]: {\n      flexDirection: \"column\",\n    },\n  },\n  numbers: {\n    background: theme.palette.common.white,\n    padding: theme.spacing(3, 2),\n    boxShadow: \"0 0 8px 1px #00000052\",\n    borderRadius: theme.spacing(.5),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    margin: theme.spacing(1),\n    width: \"calc(100% / 5)\",\n    minWidth: theme.spacing(18.75),\n\n    '&:first-child': {\n      marginRight: theme.spacing(.5),\n    },\n\n    '&:last-child': {\n      marginLeft: theme.spacing(.5),\n    },\n  },\n  number: {\n    fontSize: theme.spacing(6),\n    color: theme.palette.primary.light,\n  },\n  title: {\n    textAlign: \"center\",\n  },\n  chart: {\n    background: theme.palette.common.white,\n    padding: theme.spacing(1),\n    boxShadow: \"0 0 8px 1px #00000052\",\n    borderRadius: theme.spacing(.5),\n    display: \"flex\",\n    flexDirection: \"column\",\n    // alignItems: \"center\",\n    margin: theme.spacing(1, 0),\n    width: \"calc(50% - 8px)\",\n    // minWidth: theme.spacing(18.75),\n\n    '& $title': {\n      margin: theme.spacing(-1, -1, 1),\n      borderRadius: theme.spacing(.5, .5, 0, 0),\n      padding: theme.spacing(.5),\n      backgroundColor: theme.palette.info.main,\n    },\n\n    [theme.breakpoints.down('sm')]: {\n      width: \"100%\",\n    },\n  },\n  flex1: {\n    flex: 1,\n    width: '100%',\n  }\n}));\n\nconst Dashboard = () => {\n  const classes = useStyles()\n  const {open, message, type, duration, closeAlert, showAlert} = useAlert();\n\n  const [data, setData] = useState({})\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    api.get(rest.admin.dashboard, config(\"json\"))\n        .then((response) => {\n          setData(response.data)\n        })\n        .catch((err) => {\n          showAlert(err.response.data.error, \"error\", 3000);\n        })\n        .finally(() => setLoading(false))\n  }, [])\n\n  return (\n      loading ? <Loader/> : <div className={classes.container}>\n        <div className={classes.top}>\n          <CardSlider>\n            <div className={classes.numbers}>\n              <Typography className={classes.number}>{data.users}</Typography>\n              <Typography className={classes.title}>کل کاربران</Typography>\n            </div>\n            <div className={classes.numbers}>\n              <Typography className={classes.number}>{data.requests?.total}</Typography>\n              <Typography className={classes.title}>کل درخواست‌ها</Typography>\n            </div>\n            <div className={classes.numbers}>\n              <Typography className={classes.number}>{data.recent_requests}</Typography>\n              <Typography className={classes.title}>درخواست‌های ۲۴ ساعت اخیر</Typography>\n            </div>\n            <div className={classes.numbers}>\n              <Typography className={classes.number}>{data.recent_disasters?.total}</Typography>\n              <Typography className={classes.title}>حوادث ۳۰ روز اخیر</Typography>\n            </div>\n            <div className={classes.numbers}>\n              <Typography className={classes.number}>{data.processed_requests}</Typography>\n              <Typography className={classes.title}>کل درخواست‌های پردازش‌شده</Typography>\n            </div>\n          </CardSlider>\n        </div>\n        <div className={classes.bottom}>\n          <div className={classes.chart}>\n            <Typography className={classes.title}>پراکندگی دسته‌بندی‌های درخواست‌ها</Typography>\n            <DataChart type={\"pie\"} data={data.requests?.data} label={'تعداد درخواست‌ها'}/>\n          </div>\n          <div className={classes.chart}>\n            <Typography className={classes.title}>درخواست‌های دریافت‌شده به تفکیک حادثه</Typography>\n            <DataChart type={\"bar\"} data={data.recent_disasters?.data} label={'تعداد درخواست‌ها'}/>\n          </div>\n          <div className={classnames(classes.chart, classes.flex1)}>\n            <Typography className={classes.title}>تعداد نیازهای درخواست‌شده</Typography>\n            <DataChart type={\"bar\"} data={data.needs_amount} label={'تعداد درخواست‌ها'}/>\n          </div>\n        </div>\n\n        <FloatingAlert text={message} open={open} handleClose={closeAlert} duration={duration} type={type}/>\n      </div>\n  );\n};\n\nDashboard.propTypes = {};\n\nexport default Dashboard;","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/DataChart.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/admin/Users.js",["340","341","342","343","344","345","346","347","348","349"],"import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { api, config, rest } from \"../../helpers/api\";\nimport { useAlert } from \"../../hooks/useAlert\";\nimport FloatingAlert from \"../common/FloatingAlert\";\nimport Loader from \"../common/Loader\";\nimport {\n  Collapse,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  ListSubheader,\n  makeStyles,\n  Typography\n} from \"@material-ui/core\";\nimport { ExpandLess, ExpandMore, AccountBoxRounded } from \"@material-ui/icons\";\nimport UserListRow from \"../common/UserListRow\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '70%',\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: \"0 0 8px 1px #00000052\",\n\n    [theme.breakpoints.down('sm')]: {\n      width: '100%',\n    },\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n}));\n\nconst Users = props => {\n  const classes = useStyles()\n  const {open, message, type, duration, closeAlert, showAlert} = useAlert();\n\n  const [userOpen, setUserOpen] = React.useState([])\n  const [data, setData] = useState([])\n  const [loading, setLoading] = useState(true)\n  const [deleteLoading, setDeleteLoading] = useState([])\n  const [adminLoading, setAdminLoading] = useState([])\n\n  useEffect(() => {\n    api.get(rest.admin.users, config(\"json\"))\n      .then((response) => {\n        setData(response.data)\n        setUserOpen(new Array(response.data.length).fill(false))\n        setDeleteLoading(new Array(response.data.length).fill(false))\n        setAdminLoading(new Array(response.data.length).fill(false))\n      })\n      .catch((err) => {\n        showAlert(err.response.data.error, \"error\", 3000);\n      })\n      .finally(() => setLoading(false))\n  }, [])\n\n  const handleClick = i => () => {\n    setUserOpen([\n      ...userOpen.slice(0, i).fill(false),\n      !userOpen[i],\n      ...userOpen.slice(i + 1).fill(false),\n    ]);\n  };\n\n  const handleDelete = (i, id) => () => {\n    setDeleteLoading([\n      ...deleteLoading.slice(0, i),\n      true,\n      ...deleteLoading.slice(i + 1),\n    ])\n    api.delete(`${rest.admin.user}/${id}`, config(\"json\"))\n      .then((response) => {\n        showAlert(response.data.msg, \"success\", 3000);\n        setData([\n          ...data.slice(0, i),\n          ...data.slice(i + 1),\n        ])\n        setUserOpen([\n          ...userOpen.slice(0, i),\n          ...userOpen.slice(i + 1),\n        ]);\n      })\n      .catch((err) => {\n        showAlert(err.response.data.error, \"error\", 3000);\n      })\n      .finally(() => setDeleteLoading([\n        ...deleteLoading.slice(0, i),\n        false,\n        ...deleteLoading.slice(i + 1),\n      ]))\n  }\n\n  const handleAdmin = (i, id) => () => {\n    setAdminLoading([\n      ...adminLoading.slice(0, i),\n      true,\n      ...adminLoading.slice(i + 1),\n    ])\n    api.patch(`${rest.admin.user}/${id}`, {}, config(\"json\"))\n      .then((response) => {\n        setData(response.data.result)\n        showAlert(response.data.msg, \"success\", 3000)\n      })\n      .catch((err) => {\n        showAlert(err.response.data.error, \"error\", 3000)\n      })\n      .finally(() => setAdminLoading([\n        ...adminLoading.slice(0, i),\n        false,\n        ...adminLoading.slice(i + 1),\n      ]))\n  }\n\n  return (\n    loading ? <Loader/> : <div className={classes.container}>\n      <List\n        component=\"nav\"\n        aria-labelledby=\"nested-list-subheader\"\n        subheader={\n          <ListSubheader component=\"div\" id=\"nested-list-subheader\">\n            لیست کاربران\n          </ListSubheader>\n        }\n        className={classes.root}\n      >\n        {data.map((user, i) => <UserListRow\n          key={i}\n          open={userOpen[i]}\n          userId={user.id}\n          title={user.fullname}\n          items={user.data}\n          handleClick={handleClick(i)}\n          handleDelete={id => handleDelete(i, id)()}\n          handleAdmin={id => handleAdmin(i, id)()}\n          loading={[deleteLoading[i], adminLoading[i]]}\n        />)}\n      </List>\n\n      <FloatingAlert text={message} open={open} handleClose={closeAlert} duration={duration} type={type}/>\n    </div>\n  );\n};\n\nUsers.propTypes = {};\n\nexport default Users;","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/admin/Requests.js",["350","351","352","353"],"import React, { useEffect, useState } from 'react';\nimport DataTable from \"../table/DataTable\";\nimport FloatingAlert from \"../common/FloatingAlert\";\nimport { useAlert } from \"../../hooks/useAlert\";\nimport { api, config, rest } from \"../../helpers/api\";\n\nconst columns = [\n  {id: 'name', numeric: false, disablePadding: false, label: 'عنوان نیاز'},\n  {id: 'amount', numeric: true, disablePadding: false, label: 'تعداد'},\n  {id: 'urgent', numeric: true, disablePadding: false, label: 'ضروری'},\n  {id: 'askDate', numeric: false, disablePadding: false, label: 'تاریخ درخواست'},\n  {id: 'changeDate', numeric: false, disablePadding: false, label: 'آخرین بروزرسانی'},\n  {id: 'helpDate', numeric: false, disablePadding: false, label: 'تاریخ امدادرسانی'},\n  {id: 'status', numeric: false, disablePadding: false, label: 'وضعیت'},\n  {id: 'type', numeric: false, disablePadding: false, label: 'نوع حادثه'},\n  {id: 'desc', numeric: false, disablePadding: false, label: 'توضیحات'},\n  {id: 'actions', numeric: false, disablePadding: false, label: 'عملیات'},\n];\n\nconst Requests = () => {\n  const {open, message, type, duration, closeAlert, showAlert} = useAlert();\n\n  const [loading, setLoading] = useState(true)\n  const [rowLoading, setRowLoading] = useState([])\n  const [data, setData] = useState([])\n  const [total, setTotal] = useState(0)\n  const [page, setPage] = useState(0)\n  const [limit, setLimit] = useState(10)\n\n  useEffect(() => {\n    setLoading(true)\n    api.get(rest.admin.requests, config(\"json\", {page, limit}))\n      .then((response) => {\n        setData(response.data.data)\n        setTotal(response.data.total)\n        setRowLoading(new Array(response.data.data.length).fill(false))\n      })\n      .catch((err) => {\n        showAlert(err.response.data.error, \"error\", 3000);\n      })\n      .finally(() => setLoading(false))\n  }, [page, limit])\n\n  const changeStatus = (k, i, id) => {\n    setRowLoading([\n      ...rowLoading.slice(0, k),\n      true,\n      ...rowLoading.slice(k + 1),\n    ])\n    api.patch(`${rest.admin.request}/${id}`, {status: i}, config(\"json\", {page, limit}))\n      .then((response) => {\n        setData(response.data.data)\n        setTotal(response.data.total)\n        showAlert(response.data.msg, \"success\", 3000);\n      })\n      .catch((err) => {\n        showAlert(err.response.data.error, \"error\", 3000);\n      })\n      .finally(() => setRowLoading([\n        ...rowLoading.slice(0, k),\n        false,\n        ...rowLoading.slice(k + 1),\n      ]))\n  }\n\n  const getNewResults = (p, l) => {\n    setPage(p)\n    setLimit(l)\n  }\n\n  return (\n    <div>\n      <DataTable\n        title={'وضعیت درخواست‌ها'}\n        rows={data}\n        loading={loading}\n        rowLoading={rowLoading}\n        columns={columns}\n        isAdmin\n        statusFn={changeStatus}\n        total={total}\n        limit={limit}\n        page={page}\n        getNewResults={getNewResults}\n      />\n\n      <FloatingAlert text={message} open={open} handleClose={closeAlert} duration={duration} type={type}/>\n    </div>\n  );\n};\n\nRequests.propTypes = {};\n\nexport default Requests;","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/table/AdminDataTableRow.js",["354","355"],"import { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport HelpOutlineRoundedIcon from '@material-ui/icons/HelpOutlineRounded';\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport PropTypes from \"prop-types\";\nimport {\n  CircularProgress,\n  ClickAwayListener,\n  MenuItem,\n  Select,\n  Tooltip,\n  useMediaQuery,\n  useTheme,\n  withStyles\n} from \"@material-ui/core\";\n\nconst useRowStyles = makeStyles((theme) => ({\n  root: {\n    borderBottom: 'unset',\n  },\n  desc: {\n    whiteSpace: \"nowrap\",\n    maxWidth: theme.spacing(5),\n    textOverflow: \"ellipsis\",\n    overflow: \"hidden\"\n  },\n  tooltip: {\n    // maxWidth: theme.spacing(25),\n  },\n  deleteIcon: {\n    color: theme.palette.error.main,\n  },\n  actions: {\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  select: {\n    width: theme.spacing(20),\n\n    '& > div': {\n      padding: theme.spacing(1, 4, 1, 2)\n    },\n  },\n  row: {\n    backgroundColor: props => props === 2\n        ? theme.palette.error.light\n        : (props === 6\n            ? theme.palette.info.light\n            : 'inherit')\n  },\n}));\n\nconst CustomTooltip = withStyles((theme) => ({\n  tooltip: {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.primary.contrastText,\n    boxShadow: theme.shadows[1],\n    fontSize: theme.spacing(1.75),\n    lineHeight: theme.spacing(0.2),\n  },\n}))(Tooltip);\n\nconst AdminDataTableRow = props => {\n  const {row} = props;\n  const [open, setOpen] = React.useState(false);\n  const [openTooltip, setOpenTooltip] = React.useState(false);\n  const theme = useTheme()\n  const classes = useRowStyles(row.status?.id);\n  const isMobileDisplay = useMediaQuery(theme.breakpoints.down('sm'))\n\n  const handleTooltipClose = () => {\n    setOpenTooltip(false);\n  };\n\n  const handleTooltipOpen = () => {\n    setOpenTooltip(true);\n  };\n\n  return (\n      <React.Fragment>\n        <TableRow className={classes.row}>\n          <TableCell>\n            <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\n              {open ? <KeyboardArrowUpIcon/> : <KeyboardArrowDownIcon/>}\n            </IconButton>\n          </TableCell>\n          <TableCell align=\"right\" component=\"th\" scope=\"row\">\n            {row.name}\n          </TableCell>\n          <TableCell align=\"right\">{row.amount || '-'}</TableCell>\n          <TableCell align=\"right\">{row.urgent || '-'}</TableCell>\n          <TableCell align=\"right\">{row.askDate || '-'}</TableCell>\n          <TableCell align=\"right\">{row.changeDate || '-'}</TableCell>\n          <TableCell align=\"right\">{row.helpDate || '-'}</TableCell>\n          <TableCell align=\"right\">{row.status?.text || '-'}</TableCell>\n          <TableCell align=\"right\">{row.type || '-'}</TableCell>\n          {row.desc ? <ClickAwayListener onClickAway={handleTooltipClose}>\n            <CustomTooltip\n                // PopperProps={{disablePortal: false}}\n                disableFocusListener={isMobileDisplay}\n                disableHoverListener={isMobileDisplay}\n                // disableTouchListener\n                open={openTooltip}\n                onClose={handleTooltipClose}\n                title={row.desc}\n                placement=\"right\"\n                className={classes.tooltip}\n                classes={{tooltip: classes.tooltip}}\n            >\n              <TableCell className={classes.desc} onClick={handleTooltipOpen} align=\"center\">\n                <HelpOutlineRoundedIcon/>\n              </TableCell>\n            </CustomTooltip>\n          </ClickAwayListener> : <TableCell align=\"center\">-</TableCell>}\n          <TableCell align=\"right\">\n            <div className={classes.actions}>\n              {props.loading ? <CircularProgress/> :\n                  <Select\n                      variant={\"outlined\"}\n                      className={classes.select}\n                      disabled={row.status?.id === 6}\n                      color={\"primary\"}\n                      value={row.status?.id}\n                      onChange={e => props.statusFn(e.target.value)}\n                      inputProps={{\n                        name: 'age',\n                        id: 'outlined-age-native-simple',\n                      }}\n                  >\n                    <MenuItem value={0}>در انتظار تأیید</MenuItem>\n                    <MenuItem value={1}>تأیید شده</MenuItem>\n                    <MenuItem value={2}>رد شده</MenuItem>\n                    <MenuItem value={3}>در حال ارسال</MenuItem>\n                    <MenuItem value={4}>در حال آماده‌سازی</MenuItem>\n                    <MenuItem value={5}>ارسال شده</MenuItem>\n                    <MenuItem value={6}>دریافت شده</MenuItem>\n                  </Select>}\n            </div>\n          </TableCell>\n        </TableRow>\n        <TableRow>\n          <TableCell className={classes.root} style={{paddingBottom: 0, paddingTop: 0}} colSpan={8}>\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\n              <Box margin={1}>\n                <Typography variant=\"h6\" gutterBottom component=\"div\">\n                  اطلاعات ارسال\n                </Typography>\n                <Table size=\"small\" aria-label=\"purchases\">\n                  <TableHead>\n                    <TableRow>\n                      <TableCell align={\"right\"}>درخواست‌دهنده</TableCell>\n                      <TableCell align={\"right\"}>آدرس</TableCell>\n                      <TableCell align={\"right\"}>موقعیت مکانی</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    <TableRow className={classes.root}>\n                      <TableCell align=\"right\">{row.user_info.fullname}</TableCell>\n                      <TableCell align=\"right\" component=\"th\" scope=\"row\">\n                        {row.user_info.address}\n                      </TableCell>\n                      <TableCell align=\"right\">[{row.user_info.location.lat}, {row.user_info.location.long}]</TableCell>\n                    </TableRow>\n                  </TableBody>\n                </Table>\n              </Box>\n            </Collapse>\n          </TableCell>\n        </TableRow>\n      </React.Fragment>\n  );\n};\n\nAdminDataTableRow.propTypes = {\n  k: PropTypes.any,\n  row: PropTypes.object.isRequired,\n  statusFn: PropTypes.func,\n  deleteFn: PropTypes.func,\n  loading: PropTypes.bool,\n};\n\nexport default AdminDataTableRow;","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/admin/Needs.js",["356","357","358","359","360","361"],"import React, { useEffect, useState } from 'react';\nimport Loader from \"../common/Loader\";\nimport {\n  Button,\n  CircularProgress,\n  List,\n  ListSubheader,\n  makeStyles,\n  MenuItem,\n  MuiThemeProvider,\n  TextField\n} from \"@material-ui/core\";\nimport FloatingAlert from \"../common/FloatingAlert\";\nimport { useAlert } from \"../../hooks/useAlert\";\nimport { api, config, rest } from \"../../helpers/api\";\nimport NeedListRow from \"../common/NeedListRow\";\nimport Theme from \"../../helpers/Theme\";\nimport RTL from \"../../helpers/RTL\";\nimport Popup from \"../common/Popup\";\nimport { messages } from \"../../assets/messages\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '70%',\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: \"0 0 8px 1px #00000052\",\n\n    [theme.breakpoints.down('sm')]: {\n      width: '100%',\n    },\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  subheader: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  form: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  formInput: {\n    marginTop: theme.spacing(2)\n  },\n}));\n\nconst Needs = () => {\n  const classes = useStyles()\n  const {open, message, type, duration, closeAlert, showAlert} = useAlert()\n\n  const [categoryOpen, setCategoryOpen] = React.useState([])\n  const [data, setData] = useState({})\n  const [loading, setLoading] = useState(true)\n  const [needLoading, setNeedLoading] = useState(null)\n  const [addLoading, setAddLoading] = useState(null)\n  const [needEdit, setNeedEdit] = useState(null)\n  const [needEditValue, setNeedEditValue] = useState(null)\n  const [dialogOpen, setDialogOpen] = useState(false)\n  const [newCategory, setNewCategory] = useState(null)\n  const [newTitle, setNewTitle] = useState(null)\n  const [error, setError] = useState({title: null, category: null})\n\n  useEffect(() => {\n    api.get(rest.getNeeds, config(\"json\"))\n      .then((response) => {\n        setData(response.data.needsCategory)\n        setCategoryOpen(new Array(Object.keys(response.data.needsCategory).length).fill(false))\n      })\n      .catch((err) => {\n        showAlert(err.response.data.error, \"error\", 3000);\n      })\n      .finally(() => setLoading(false))\n  }, [])\n\n  const handleDialogClose = () => {\n    setDialogOpen(false);\n  };\n\n  const handleDialogOpen = () => {\n    setDialogOpen(true);\n  };\n\n  const handleDialogConfirm = () => {\n    if (error.title || error.category) {\n      showAlert(messages.ERR_EMPTY_NEED, \"error\", 3000);\n      return\n    }\n\n    setAddLoading(true)\n    api.post(rest.admin.need, {title: newTitle, category_id: newCategory}, config(\"json\"))\n      .then((response) => {\n        showAlert(response.data.msg, \"success\", 3000);\n        setData(response.data.needsCategory)\n        handleDialogClose()\n        setNewCategory(null)\n        setNewTitle(null)\n      })\n      .catch((err) => {\n        showAlert(err.response.data.error, \"error\", 3000);\n      })\n      .finally(() => {\n        setAddLoading(false)\n      })\n  };\n\n  const checkError = () => {\n    setError({\n      title: newTitle === \"\" ? messages.ERR_EMPTY : null,\n      category: (newCategory === \"\" || newCategory === null) ? messages.ERR_EMPTY : null,\n    })\n  };\n\n  useEffect(checkError, [newCategory, newTitle])\n\n  const handleClick = i => () => {\n    setCategoryOpen([\n      ...categoryOpen.slice(0, i).fill(false),\n      !categoryOpen[i],\n      ...categoryOpen.slice(i + 1).fill(false),\n    ]);\n  };\n\n  const handleDelete = (categoryId, needId) => () => {\n    setNeedLoading(needId)\n    api.delete(`${rest.admin.need}/${needId}`, config(\"json\"))\n      .then((response) => {\n        showAlert(response.data.msg, \"success\", 3000);\n        let temp = data\n        delete temp[categoryId].items[needId]\n        setData(temp)\n      })\n      .catch((err) => {\n        showAlert(err.response.data.error, \"error\", 3000);\n      })\n      .finally(() => setNeedLoading(null))\n  }\n\n  const handleEdit = (needId) => () => {\n    // console.log(needId)\n    setNeedLoading(needId)\n    api.patch(`${rest.admin.need}/${needId}`, {title: needEditValue}, config(\"json\"))\n      .then((response) => {\n        showAlert(response.data.msg, \"success\", 3000);\n        setData(response.data.needsCategory)\n        setNeedEdit(null)\n      })\n      .catch((err) => {\n        showAlert(err.response.data.error, \"error\", 3000);\n      })\n      .finally(() => setNeedLoading(null))\n  }\n\n  const handleChange = e => {\n    console.log(e.target.value)\n    setNeedEditValue(e.target.value)\n  }\n\n  const toggleEditMode = needId => {\n    setNeedEdit(needId)\n  }\n\n  const addForm = (\n    <RTL>\n      <MuiThemeProvider theme={Theme}>\n        <div className={classes.form}>\n          <TextField\n            select\n            variant={\"filled\"}\n            className={classes.formInput}\n            label={\"دسته‌بندی\"}\n            value={newCategory}\n            onChange={e => setNewCategory(e.target.value)}\n            inputProps={{\n              name: 'category',\n              id: 'category',\n            }}\n            helperText={error.category}\n            error={!!error.category}\n          >\n            {Object.values(data).map((cat, i) => (\n              <MenuItem key={i} value={cat.id}>{cat.faName}</MenuItem>\n            ))}\n          </TextField>\n          <TextField\n            className={classes.formInput}\n            variant={\"filled\"}\n            type=\"text\"\n            id={'need'}\n            name={'need'}\n            label={'عنوان نیاز'}\n            value={newTitle}\n            onChange={e => setNewTitle(e.target.value)}\n            error={!!error.title}\n            helperText={error.title}\n          />\n        </div>\n      </MuiThemeProvider>\n    </RTL>\n  )\n\n  return (\n    loading ? <Loader/> : <div className={classes.container}>\n      <RTL>\n        <MuiThemeProvider theme={Theme}>\n          <List\n            component=\"nav\"\n            aria-labelledby=\"nested-list-subheader\"\n            subheader={\n              <ListSubheader component=\"div\" id=\"nested-list-subheader\" className={classes.subheader}>\n                <span>لیست نیازها</span>\n                <Button variant=\"contained\" color=\"primary\" size={\"small\"} onClick={handleDialogOpen}>افزودن نیاز\n                  جدید</Button>\n              </ListSubheader>\n            }\n            className={classes.root}\n          >\n            {Object.values(data).map((category, i) => <NeedListRow\n              key={i}\n              open={categoryOpen[i]}\n              categoryId={category.id}\n              category={category.faName}\n              items={category.items}\n              handleClick={handleClick(i)}\n              loading={needLoading}\n              handleDelete={j => handleDelete(category.id, j)()}\n              editMode={needEdit}\n              toggleEditMode={i => toggleEditMode(i)}\n              handleEdit={(id, value) => handleEdit(id, value)()}\n              editValue={needEditValue}\n              handleChange={handleChange}\n\n            />)}\n          </List>\n        </MuiThemeProvider>\n      </RTL>\n\n      <Popup\n        open={dialogOpen}\n        onClose={handleDialogClose}\n        onDeny={handleDialogClose}\n        onConfirm={handleDialogConfirm}\n        title={'اضافه کردن نیاز جدید'}\n        text={'لطفاً دسته‌بندی و عنوان نیاز را وارد کنید.'}\n        context={addForm}\n        denyBtn={'انصراف'}\n        confirmBtn={addLoading ? <CircularProgress color={\"secondary\"} size={24} /> : 'ثبت'}\n      />\n\n      <FloatingAlert text={message} open={open} handleClose={closeAlert} duration={duration} type={type}/>\n    </div>\n  );\n};\n\nNeeds.propTypes = {};\n\nexport default Needs;","/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/forms/OtpForm.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/forms/SignInForm.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/forms/SignUpForm.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/UserListRow.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/NeedListRow.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/card/CardSlider.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/card/Card.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/buttons/FAB.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/buttons/CustomButton.js",[],"/home/pmoghadam/WebstormProjects/crisis-management-system/src/components/common/RequestMap.js",[],{"ruleId":"362","replacedBy":"363"},{"ruleId":"364","replacedBy":"365"},{"ruleId":"366","severity":1,"message":"367","line":9,"column":8,"nodeType":"368","messageId":"369","endLine":9,"endColumn":11},{"ruleId":"366","severity":1,"message":"370","line":12,"column":8,"nodeType":"368","messageId":"369","endLine":12,"endColumn":14},{"ruleId":"366","severity":1,"message":"371","line":13,"column":8,"nodeType":"368","messageId":"369","endLine":13,"endColumn":18},{"ruleId":"366","severity":1,"message":"372","line":2,"column":8,"nodeType":"368","messageId":"369","endLine":2,"endColumn":17},{"ruleId":"366","severity":1,"message":"373","line":3,"column":10,"nodeType":"368","messageId":"369","endLine":3,"endColumn":16},{"ruleId":"366","severity":1,"message":"374","line":6,"column":8,"nodeType":"368","messageId":"369","endLine":6,"endColumn":13},{"ruleId":"366","severity":1,"message":"375","line":5,"column":11,"nodeType":"368","messageId":"369","endLine":5,"endColumn":18},{"ruleId":"366","severity":1,"message":"376","line":7,"column":3,"nodeType":"368","messageId":"369","endLine":7,"endColumn":7},{"ruleId":"366","severity":1,"message":"377","line":8,"column":3,"nodeType":"368","messageId":"369","endLine":8,"endColumn":11},{"ruleId":"366","severity":1,"message":"378","line":9,"column":3,"nodeType":"368","messageId":"369","endLine":9,"endColumn":15},{"ruleId":"366","severity":1,"message":"379","line":9,"column":17,"nodeType":"368","messageId":"369","endLine":9,"endColumn":32},{"ruleId":"366","severity":1,"message":"380","line":13,"column":8,"nodeType":"368","messageId":"369","endLine":13,"endColumn":17},{"ruleId":"366","severity":1,"message":"381","line":1,"column":17,"nodeType":"368","messageId":"369","endLine":1,"endColumn":25},{"ruleId":"362","replacedBy":"382"},{"ruleId":"364","replacedBy":"383"},{"ruleId":"362","replacedBy":"384"},{"ruleId":"364","replacedBy":"385"},{"ruleId":"386","severity":1,"message":"387","line":103,"column":6,"nodeType":"388","endLine":103,"endColumn":12,"suggestions":"389"},{"ruleId":"386","severity":1,"message":"390","line":126,"column":6,"nodeType":"388","endLine":126,"endColumn":8,"suggestions":"391"},{"ruleId":"366","severity":1,"message":"392","line":6,"column":3,"nodeType":"368","messageId":"369","endLine":6,"endColumn":12},{"ruleId":"366","severity":1,"message":"393","line":13,"column":3,"nodeType":"368","messageId":"369","endLine":13,"endColumn":10},{"ruleId":"366","severity":1,"message":"394","line":21,"column":10,"nodeType":"368","messageId":"369","endLine":21,"endColumn":17},{"ruleId":"386","severity":1,"message":"395","line":138,"column":6,"nodeType":"388","endLine":138,"endColumn":8,"suggestions":"396"},{"ruleId":"386","severity":1,"message":"397","line":356,"column":6,"nodeType":"388","endLine":356,"endColumn":55,"suggestions":"398"},{"ruleId":"386","severity":1,"message":"399","line":370,"column":6,"nodeType":"388","endLine":370,"endColumn":15,"suggestions":"400"},{"ruleId":"386","severity":1,"message":"401","line":377,"column":6,"nodeType":"388","endLine":377,"endColumn":26,"suggestions":"402"},{"ruleId":"386","severity":1,"message":"403","line":386,"column":6,"nodeType":"388","endLine":386,"endColumn":42,"suggestions":"404"},{"ruleId":"362","replacedBy":"405"},{"ruleId":"364","replacedBy":"406"},{"ruleId":"366","severity":1,"message":"407","line":15,"column":8,"nodeType":"368","messageId":"369","endLine":15,"endColumn":14},{"ruleId":"366","severity":1,"message":"381","line":1,"column":40,"nodeType":"368","messageId":"369","endLine":1,"endColumn":48},{"ruleId":"366","severity":1,"message":"408","line":10,"column":10,"nodeType":"368","messageId":"369","endLine":10,"endColumn":13},{"ruleId":"366","severity":1,"message":"409","line":10,"column":15,"nodeType":"368","messageId":"369","endLine":10,"endColumn":21},{"ruleId":"366","severity":1,"message":"410","line":10,"column":23,"nodeType":"368","messageId":"369","endLine":10,"endColumn":27},{"ruleId":"366","severity":1,"message":"411","line":62,"column":53,"nodeType":"368","messageId":"369","endLine":62,"endColumn":62},{"ruleId":"386","severity":1,"message":"412","line":102,"column":6,"nodeType":"388","endLine":102,"endColumn":8,"suggestions":"413"},{"ruleId":"366","severity":1,"message":"372","line":2,"column":8,"nodeType":"368","messageId":"369","endLine":2,"endColumn":17},{"ruleId":"366","severity":1,"message":"414","line":8,"column":3,"nodeType":"368","messageId":"369","endLine":8,"endColumn":11},{"ruleId":"366","severity":1,"message":"377","line":10,"column":3,"nodeType":"368","messageId":"369","endLine":10,"endColumn":11},{"ruleId":"366","severity":1,"message":"415","line":11,"column":3,"nodeType":"368","messageId":"369","endLine":11,"endColumn":15},{"ruleId":"366","severity":1,"message":"378","line":12,"column":3,"nodeType":"368","messageId":"369","endLine":12,"endColumn":15},{"ruleId":"366","severity":1,"message":"416","line":15,"column":3,"nodeType":"368","messageId":"369","endLine":15,"endColumn":13},{"ruleId":"366","severity":1,"message":"417","line":17,"column":10,"nodeType":"368","messageId":"369","endLine":17,"endColumn":20},{"ruleId":"366","severity":1,"message":"418","line":17,"column":22,"nodeType":"368","messageId":"369","endLine":17,"endColumn":32},{"ruleId":"366","severity":1,"message":"419","line":17,"column":34,"nodeType":"368","messageId":"369","endLine":17,"endColumn":51},{"ruleId":"386","severity":1,"message":"412","line":64,"column":6,"nodeType":"388","endLine":64,"endColumn":8,"suggestions":"420"},{"ruleId":"366","severity":1,"message":"372","line":2,"column":8,"nodeType":"368","messageId":"369","endLine":2,"endColumn":17},{"ruleId":"366","severity":1,"message":"416","line":4,"column":22,"nodeType":"368","messageId":"369","endLine":4,"endColumn":32},{"ruleId":"366","severity":1,"message":"421","line":61,"column":9,"nodeType":"368","messageId":"369","endLine":61,"endColumn":16},{"ruleId":"386","severity":1,"message":"412","line":83,"column":6,"nodeType":"388","endLine":83,"endColumn":19,"suggestions":"422"},{"ruleId":"366","severity":1,"message":"423","line":18,"column":22,"nodeType":"368","messageId":"369","endLine":18,"endColumn":33},{"ruleId":"366","severity":1,"message":"424","line":25,"column":10,"nodeType":"368","messageId":"369","endLine":25,"endColumn":23},{"ruleId":"366","severity":1,"message":"372","line":2,"column":8,"nodeType":"368","messageId":"369","endLine":2,"endColumn":17},{"ruleId":"366","severity":1,"message":"423","line":5,"column":29,"nodeType":"368","messageId":"369","endLine":5,"endColumn":40},{"ruleId":"366","severity":1,"message":"425","line":5,"column":42,"nodeType":"368","messageId":"369","endLine":5,"endColumn":52},{"ruleId":"366","severity":1,"message":"426","line":11,"column":3,"nodeType":"368","messageId":"369","endLine":11,"endColumn":9},{"ruleId":"366","severity":1,"message":"427","line":14,"column":8,"nodeType":"368","messageId":"369","endLine":14,"endColumn":19},{"ruleId":"386","severity":1,"message":"412","line":82,"column":6,"nodeType":"388","endLine":82,"endColumn":8,"suggestions":"428"},"no-native-reassign",["429"],"no-negated-in-lhs",["430"],"no-unused-vars","'RTL' is defined but never used.","Identifier","unusedVar","'styles' is defined but never used.","'classNames' is defined but never used.","'PropTypes' is defined but never used.","'Button' is defined but never used.","'Hands' is defined but never used.","'Divider' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'ListItemText' is defined but never used.","'SwipeableDrawer' is defined but never used.","'CloseIcon' is defined but never used.","'useState' is defined but never used.",["429"],["430"],["429"],["430"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setIsAdmin'. Either include it or remove the dependency array.","ArrayExpression",["431"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["432"],"'Container' is defined but never used.","'Toolbar' is defined but never used.","'Context' is defined but never used.","React Hook useEffect has missing dependencies: 'loading', 'setIsAdmin', and 'showAlert'. Either include them or remove the dependency array. You can also do a functional update 'setLoading(l => ...)' if you only need 'loading' in the 'setLoading' call.",["433"],"React Hook useEffect has missing dependencies: 'needCategories', 'recentRequests', and 'showAlert'. Either include them or remove the dependency array.",["434"],"React Hook useEffect has missing dependencies: 'getData', 'props.coords?.latitude', 'props.coords?.longitude', and 'recentRequests'. Either include them or remove the dependency array.",["435"],"React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["436"],"React Hook useEffect has missing dependencies: 'preSelected' and 'selectNeed'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setDisaster' needs the current value of 'preSelected'.",["437"],["429"],["430"],"'Loader' is defined but never used.","'api' is defined but never used.","'config' is defined but never used.","'rest' is defined but never used.","'showAlert' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'showAlert'. Either include it or remove the dependency array.",["438"],"'Collapse' is defined but never used.","'ListItemIcon' is defined but never used.","'Typography' is defined but never used.","'ExpandLess' is defined but never used.","'ExpandMore' is defined but never used.","'AccountBoxRounded' is defined but never used.",["439"],"'classes' is assigned a value but never used.",["440"],"'FormControl' is defined but never used.","'DeleteRounded' is defined but never used.","'InputLabel' is defined but never used.","'Select' is defined but never used.","'UserListRow' is defined but never used.",["441"],"no-global-assign","no-unsafe-negation",{"desc":"442","fix":"443"},{"desc":"444","fix":"445"},{"desc":"446","fix":"447"},{"desc":"448","fix":"449"},{"desc":"450","fix":"451"},{"desc":"452","fix":"453"},{"desc":"454","fix":"455"},{"desc":"456","fix":"457"},{"desc":"456","fix":"458"},{"desc":"459","fix":"460"},{"desc":"456","fix":"461"},"Update the dependencies array to be: [path, setIsAdmin]",{"range":"462","text":"463"},"Update the dependencies array to be: [history]",{"range":"464","text":"465"},"Update the dependencies array to be: [loading, setIsAdmin, showAlert]",{"range":"466","text":"467"},"Update the dependencies array to be: [needCategories, props.coords?.latitude, props.coords?.longitude, recentRequests, showAlert]",{"range":"468","text":"469"},"Update the dependencies array to be: [getData, props.coords?.latitude, props.coords?.longitude, recentRequests, trigger]",{"range":"470","text":"471"},"Update the dependencies array to be: [getData, showRecentRequests]",{"range":"472","text":"473"},"Update the dependencies array to be: [needCategories, disasterCategories, preSelected, selectNeed]",{"range":"474","text":"475"},"Update the dependencies array to be: [showAlert]",{"range":"476","text":"477"},{"range":"478","text":"477"},"Update the dependencies array to be: [page, limit, showAlert]",{"range":"479","text":"480"},{"range":"481","text":"477"},[2833,2839],"[path, setIsAdmin]",[3962,3964],"[history]",[4118,4120],"[loading, setIsAdmin, showAlert]",[10223,10272],"[needCategories, props.coords?.latitude, props.coords?.longitude, recentRequests, showAlert]",[10569,10578],"[getData, props.coords?.latitude, props.coords?.longitude, recentRequests, trigger]",[10695,10715],"[getData, showRecentRequests]",[11013,11049],"[needCategories, disasterCategories, preSelected, selectNeed]",[2603,2605],"[showAlert]",[1853,1855],[2640,2653],"[page, limit, showAlert]",[2442,2444]]